<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/22/2016 1:48:22 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="WINDOWSDEV"
  DTS:CreatorName="WINDOWSDEV\Ernesto Rodriguez"
  DTS:DTSID="{9110114C-041F-4D70-9B95-F51F10DA5801}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.3436.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ETL_Mailing_Data_Distributor"
  DTS:PackageType="5"
  DTS:VersionBuild="85"
  DTS:VersionGUID="{DABD039E-BB9E-4EF5-9E64-4003C0837B90}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MSSQLSERVER.testdb.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{09E17B76-7084-4197-B242-7B5084EAA0E1}"
      DTS:ObjectName="MSSQLSERVER.testdb.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=MSSQLSERVER;User ID=sa;Initial Catalog=testdb;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAX9XdPvmdoUu0R3QXETu/wQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADfGZBuAuqMZFkMsRWy+5iC+6fL5KLVx5HDTorW5YT0JAAAAAAOgAAAAAIAACAAAADScKf7+/zP6CqH3M1aaoyHLCw4oMZr9Ylj5YYV7cZC6BAAAADqQxusukwS9TGvqorEEu/PQAAAACf60NyAMHnl2cEklm37GrmfelAtnpMv68BCDrrdDKXwFZwb47LRVeIOGxkGw6CsfxXqshonwx52ye7QNiznrP0</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E540869F-0A94-4FF7-B68B-57B7BC44272C}"
      DTS:ObjectName="connection_string">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=MSSQLSERVER; User ID=sa; Password=sa; Initial Catalog=testdb; Connection Timeout=60;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="This should be the server where files will be deposited for onbase process."
      DTS:DTSID="{3DEAFCD6-43AA-4A1A-856B-5F9BE490E1CF}"
      DTS:ObjectName="destination_onbase">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\OnBase</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{CEC3D843-6BCE-4D79-B679-F834E5A275A3}"
      DTS:ObjectName="execution_log_id">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">9999336</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{811D5004-22DB-4277-83E5-30BC1D83B5E3}"
      DTS:ObjectName="path_to_buffers">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Buffers</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{00B6F9C7-D826-42AD-8208-DBB6BF6C14C4}"
      DTS:ObjectName="source_index_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Index</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{923E130D-AF64-45BB-9214-204801F2173C}"
      DTS:ObjectName="source_manifest_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_2</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8BB7B354-178E-478F-B403-7EEC2C38DD46}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="current_index_file">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{16830638-932B-49ED-AABB-B74A297E183A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="current_manifest_file">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{978C5BD6-AB5F-4127-8232-DA290A46A802}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="exception_message">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{424B6430-2D5C-48CE-8F13-297886591EFE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="indexes_destinations">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE6577A0-436C-447B-9B71-E48A932EC585}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="params_for_onbase_destinations">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D2E3A244-C05D-4D98-BFBC-64C591216C69}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="prefixes_and_destinations_paths">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SEQC - Index and Manifest Distribution"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{11C04981-F986-4A32-8326-5B26D73DB6A2}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQC - Index and Manifest Distribution">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{3DD08CFE-EE5D-4B05-A1E8-47ED3C6F0784}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="FELC - Iterate manifest folders">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{4A47AE35-3E8C-4349-A1C6-573CA031D9D3}"
            DTS:ObjectName="{4A47AE35-3E8C-4349-A1C6-573CA031D9D3}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Package::source_manifest_path]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_2" />
                <FEFEProperty
                  FileSpec="*.*" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders\SCR - Copy manifest to destination"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:Disabled="True"
              DTS:DTSID="{0F3DA8B8-6604-48BE-9E40-C93DD85755B6}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SCR - Copy manifest to destination"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_b9be7241aa574d73a57d11c621830cde"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,User::current_manifest_file,User::prefixes_and_destinations_paths,$Package::path_to_buffers,$Package::source_manifest_path"
                  ReadWriteVariables="User::exception_message">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_b9be7241aa574d73a57d11c621830cde.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{153DF5BF-8E04-429D-B558-327DEEE147CC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b9be7241aa574d73a57d11c621830cde</RootNamespace>
    <AssemblyName>ST_b9be7241aa574d73a57d11c621830cde</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9be7241aa574d73a57d11c621830cde.Properties.Settings.get_Default():ST_b9be7241aa574d73a57d11c621830cde.Properties.Sett" +
    "ings")]

namespace ST_b9be7241aa574d73a57d11c621830cde.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
#endregion

namespace ST_b9be7241aa574d73a57d11c621830cde
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            int result = (int)ScriptResults.Failure;
            string task_name = Dts.Variables["System::TaskName"].Value.ToString();                                              //Get current task name
            string path_to_buffers = Dts.Variables["$Package::path_to_buffers"].Value.ToString();                               //Get parent buffer path
            string source_manifest_path = Dts.Variables["$Package::source_manifest_path"].Value.ToString();                     //Get manifest path
            string current_manifest_file = Dts.Variables["User::current_manifest_file"].Value.ToString();                       //Get name of current manifest
            current_manifest_file = Path.GetFileName(current_manifest_file);                                                    //Get rid of the path leaving only the file name
            List<Tuple<string, string, string, string>> args =
                (List<Tuple<string, string, string, string>>)Dts.Variables["User::prefixes_and_destinations_paths"].Value;      //Get arguments for index file
            Tuple<string, string, string, string> first_arg_prefix = null;
            string prefix = GetManifestPrefix(current_manifest_file);                                                           //Get current file prefix

            first_arg_prefix = args.Find(x => x.Item2 == prefix);                                                               //Using current manifest prefix get arguments
            if (first_arg_prefix != null)                                                                                       //If arg found for current manifest
            {
                string dest_folder = first_arg_prefix.Item4;
                source_manifest_path = Path.Combine(source_manifest_path, current_manifest_file);                               //Prepare full manifest path
                dest_folder = Path.Combine(dest_folder, current_manifest_file);                                                 //Prepare partial destination folder
                path_to_buffers = Path.Combine(path_to_buffers, dest_folder);                                                   //Prepare full destination for manifest

                string err_msg = string.Empty;
                if (CopyManifestToBuffer(source_manifest_path, path_to_buffers, out err_msg))                                   //Copy manifest to destination
                {
                    if (DeleteCurrentIndex(source_manifest_path, out err_msg))
                    {
                        result = (int)ScriptResults.Success;
                    }
                    else
                    {
                        Dts.Variables["User::exception_message"].Value =
                            string.Format("Task: [{0}]; Message: [{1} ({2})]", task_name, err_msg, current_manifest_file);
                    }
                }
                else
                {
                    Dts.Variables["User::exception_message"].Value =
                        string.Format("Task: [{0}]; Message: [{1}]", task_name, err_msg);
                }
            }
            else
            {
                Dts.Variables["User::exception_message"].Value =
                    string.Format("Task: [{0}]; Message: [Invalid manifest prefix '{1}']", task_name, prefix);
            }

            Dts.TaskResult = result;

		}

        /// <summary>
        /// Tokenize the file name using '-' and get prefix.
        /// </summary>
        /// <param name="file_name"></param>
        /// <returns>String representing file prefix.</returns>
        string GetManifestPrefix(string file_name)
        {
            string[] tokens = file_name.Split('_');
            return tokens[0];
        }


        /// <summary>
        /// Copy manifest file to (buffer) destination.
        /// </summary>
        /// <param name="src_path"></param>
        /// <param name="dest_path"></param>
        /// <returns>True if copy operation is successful.</returns>
        bool CopyManifestToBuffer(string src_path, string dest_path, out string err_msg)
        {
            bool result = false;
            err_msg = string.Empty;
            try
            {
                File.Copy(src_path, dest_path, true);
                result = true;
            }
            catch (Exception e)
            {
                err_msg = e.Message;
            }

            return result;
        }

        /// <summary>
        /// Delete current index file being distributed.
        /// </summary>
        /// <param name="path"></param>
        /// <param name="err_msg"></param>
        /// <returns>True if copy operation is successful.</returns>
        bool DeleteCurrentIndex(string path, out string err_msg)
        {
            bool result = false;
            err_msg = string.Empty;
            try
            {
                File.Delete(path);
                result = true;
            }
            catch (Exception e)
            {
                err_msg = e.Message;
            }

            return result;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_b9be7241aa574d73a57d11c621830cde</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_b9be7241aa574d73a57d11c621830cde</msb:DisplayName>
		<msb:ProjectId>{C6F4B70C-DD34-40C0-8856-CF6142C1B4E0}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_b9be7241aa574d73a57d11c621830cde.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b9be7241aa574d73a57d11c621830cde")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_b9be7241aa574d73a57d11c621830cde")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9be7241aa574d73a57d11c621830cde.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9be7241aa574d73a57d11c621830cde.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9be7241aa574d73a57d11c621830cde.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b9be7241aa574d73a57d11c621830cde.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b9be7241aa574d73a57d11c621830cde.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_b9be7241aa574d73a57d11c621830cde.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANbePlgAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAvjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGw1AABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
NQAAAAAAAEgAAAACAAUAACQAAGwRAAABAAAAAAAAAEgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA8AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoEAAACm8RAAAKcxIAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBUAAAoqHgIoDwAACipKA28XAAAKAnsHAAAEKBgAAAoqAAATMAUAuwEAAAIAABFz
DQAABhMJFwoCKBkAAApvGgAACnJzAABwbxsAAApvHAAACm8dAAAKCwIoGQAACm8aAAAKcpUAAHBv
GwAACm8cAAAKbx0AAAoMAigZAAAKbxoAAApyyQAAcG8bAAAKbxwAAApvHQAACg0CKBkAAApvGgAA
CnIHAQBwbxsAAApvHAAACm8dAAAKEwQRBCgeAAAKEwQCKBkAAApvGgAACnI/AQBwbxsAAApvHAAA
CnQCAAAbEwUUEwYRCQIRBCgJAAAGfQcAAAQRBREJ/gYOAAAGcx8AAApvIAAAChMGEQY5nwAAABEG
byEAAAoTBwkRBCgiAAAKDREHEQQoIgAAChMHCBEHKCIAAAoMfiMAAAoTCAIJCBIIKAoAAAYsPQIJ
EggoCwAABiwHFgo4gAAAAAIoGQAACm8aAAAKcosBAHBvGwAACnK7AQBwBxEIEQQoJAAACm8lAAAK
K1UCKBkAAApvGgAACnKLAQBwbxsAAApy/wEAcAcRCCgmAAAKbyUAAAorLAIoGQAACm8aAAAKcosB
AHBvGwAACnI3AgBwBxEJewcAAAQoJgAACm8lAAAKAigZAAAKBm8nAAAKKgATMAQAGAAAAAMAABED
F40kAAABCwcWH1+dB28oAAAKCgYWmiobMAMAIgAAAAQAABEWCgV+IwAAClEDBBcoKQAAChcK3gsL
BQdvKgAAClHeAAYqAAABEAAAAAAJAAwVAAsmAAABGzACACAAAAAEAAARFgoEfiMAAApRAygrAAAK
FwreCwsEB28qAAAKUd4ABioBEAAAAAAJAAoTAAsmAAABHgIoLAAACiq0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA8AQAACN+AABcBQAANAcAACNTdHJpbmdz
AAAAAJAMAACkAgAAI1VTADQPAAAQAAAAI0dVSUQAAABEDwAAKAIAACNCbG9iAAAAAAAAAAIAAAFX
HaIJCQMAAAD6JTMAFgAAAQAAACYAAAAGAAAABwAAAA4AAAAIAAAALAAAAAIAAAAQAAAABAAAAAIA
AAADAAAABAAAAAMAAAABAAAABAAAAAEAAAACAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEU
AQYAWQG6AAYAbwFeAQYAoAGLAQYAuwKcAgYA5wLNAgYAEgMAAwYAKQMAAwYARgMAAwYAZQMAAwYA
fgMAAwYAlwMAAwYAsgMAAwYAzQMAAwYA5gMAAwYAHwT/AwYAPwT/AwYAcARdBAYAjQS6AAYAkgS6
AAYAtgQAAwoA4gTMBAoA+wTMBAYAEAX/Aw4AMgUUAQYAbgW6AAYAjQW6AA4AoAUUARIA+QXZBRIA
EQbZBQYAQAY2BgYAbAZRBgYAcwa6AAYAvAa6AAYAxwY2BgYA0Qa6AAAAAAABAAAAAAABAAEAAAAQ
ADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQADQADARAA
VAUAAAUABwANABEAfwETABEArAEXABEA9gE5AAYGWQJbAFaAYQJeAFaAaQJeAAYAZwWhAFAgAAAA
AIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAA
lggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYKwWdAAIA2CAAAAAAhgAaAhsAAgCgIgAAAACB
AB8CRwACAMQiAAAAAIEAMQJMAAMABCMAAAAAgQBGAlQABgBAIwAAAACGGLwBGwAIALsgAAAAAIYY
vAEbAAgAwyAAAAAAhgB2BaQACAAAAAEAcQIAAAEAdwIAAAEAgQIAAAIAigICAAMAlAIAAAEAyAIC
AAIAlAIAAAEAgQU5ALwBGwBBALwBbABJALwBbABRALwBbABZALwBbABhALwBbABpALwBbABxALwB
bAB5ALwBbACBALwBbACJALwBbACRALwBcQCZALwBGwChALwBGwAJALwBGwCpAKQEdgCpAL8EfQAp
ALwBggDBALwBjgDRALwBGwARALwBGwDZALwBGwAMAIMFuQDpAJQFvgAZALIFxADxAAMGyQD5ABoG
zgABASMG1QAJAC0G2QAJAUUG3QAcALwB/gAUAH8GBAEMAIQGEAEJAY4GFQHpAJYGoQDpAJwGGwEB
AaMGIwHpAJwGKAHxAK0GcQDpAMEGUAEpAcwGXgExAdsG2QApAecGbAEZALwBGwAIABQAYgAIABgA
ZwApAJsAlAAuABsAuQEuACMA4gEuACsA4gEuAGsACAIuABMAcQEuADsAuQEuAGMA/wEuADMA4gEu
AEMA6AEuAEsA4gFDAHMAZwBJAJsAlABhAKMAZwCDALMAZwDDAKMAZwCJAC8BVwFlAQIAAQADAAMA
AABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcAsADiAPAABIAAAAEAAAAi
GAtIAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAA
AAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAAAAAAAAoAugUAAAAAAAAAAAEAAADuBgAABQAEAAYABAAA
AAA8TW9kdWxlPgBTVF9iOWJlNzI0MWFhNTc0ZDczYTU3ZDExYzYyMTgzMGNkZS5kbGwAUmVzb3Vy
Y2VzAFNUX2I5YmU3MjQxYWE1NzRkNzNhNTdkMTFjNjIxODMwY2RlLlByb3BlcnRpZXMAU2V0dGlu
Z3MAU2NyaXB0TWFpbgBTVF9iOWJlNzI0MWFhNTc0ZDczYTU3ZDExYzYyMTgzMGNkZQBTY3JpcHRS
ZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lz
dGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9S
ZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5z
dGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAEdldE1hbmlmZXN0UHJlZml4AENvcHlNYW5p
ZmVzdFRvQnVmZmVyAERlbGV0ZUN1cnJlbnRJbmRleAB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2
YWx1ZQBmaWxlX25hbWUAc3JjX3BhdGgAZGVzdF9wYXRoAGVycl9tc2cAU3lzdGVtLlJ1bnRpbWUu
SW50ZXJvcFNlcnZpY2VzAE91dEF0dHJpYnV0ZQBwYXRoAFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJp
YnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAPD5j
X19EaXNwbGF5Q2xhc3MxAHByZWZpeABUdXBsZWA0ADxNYWluPmJfXzAAeABnZXRfSXRlbTIAU3Ry
aW5nAG9wX0VxdWFsaXR5AFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVz
AGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3Rl
bS5JTwBQYXRoAEdldEZpbGVOYW1lAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAExpc3RgMQBQ
cmVkaWNhdGVgMQBGaW5kAGdldF9JdGVtNABDb21iaW5lAEVtcHR5AEZvcm1hdABzZXRfVmFsdWUA
c2V0X1Rhc2tSZXN1bHQAQ2hhcgBTcGxpdABGaWxlAENvcHkARXhjZXB0aW9uAGdldF9NZXNzYWdl
AERlbGV0ZQBTVF9iOWJlNzI0MWFhNTc0ZDczYTU3ZDExYzYyMTgzMGNkZS5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMAAAAAAHFTAFQAXwBiADkAYgBlADcAMgA0ADEAYQBhADUANwA0AGQA
NwAzAGEANQA3AGQAMQAxAGMANgAyADEAOAAzADAAYwBkAGUALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBOAGEAbQBlAAAz
JABQAGEAYwBrAGEAZwBlADoAOgBwAGEAdABoAF8AdABvAF8AYgB1AGYAZgBlAHIAcwAAPSQAUABh
AGMAawBhAGcAZQA6ADoAcwBvAHUAcgBjAGUAXwBtAGEAbgBpAGYAZQBzAHQAXwBwAGEAdABoAAA3
VQBzAGUAcgA6ADoAYwB1AHIAcgBlAG4AdABfAG0AYQBuAGkAZgBlAHMAdABfAGYAaQBsAGUAAEtV
AHMAZQByADoAOgBwAHIAZQBmAGkAeABlAHMAXwBhAG4AZABfAGQAZQBzAHQAaQBuAGEAdABpAG8A
bgBzAF8AcABhAHQAaABzAAAvVQBzAGUAcgA6ADoAZQB4AGMAZQBwAHQAaQBvAG4AXwBtAGUAcwBz
AGEAZwBlAABDVABhAHMAawA6ACAAWwB7ADAAfQBdADsAIABNAGUAcwBzAGEAZwBlADoAIABbAHsA
MQB9ACAAKAB7ADIAfQApAF0AADdUAGEAcwBrADoAIABbAHsAMAB9AF0AOwAgAE0AZQBzAHMAYQBn
AGUAOgAgAFsAewAxAH0AXQAAa1QAYQBzAGsAOgAgAFsAewAwAH0AXQA7ACAATQBlAHMAcwBhAGcA
ZQA6ACAAWwBJAG4AdgBhAGwAaQBkACAAbQBhAG4AaQBmAGUAcwB0ACAAcAByAGUAZgBpAHgAIAAn
AHsAMQB9ACcAXQABAJi0twv2wC9GrEybgaCRhmcACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkD
IAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAQgAQ4OByADAg4OEA4G
IAICDhAOAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElURWQQgABJdBiACAQ4SXQQHARIV
BSABARFlCAEAAgAAAAAAAwAAAQIGDgsgAQIVEnEEDg4ODggVEnEEDg4ODgQgABMBBQACAg4OBCAA
EnkEIAASfQYgARKAgRwDIAAcAyAADgQAAQ4ODRUSgIkBFRJxBA4ODg4NFRKAjQEVEnEEDg4ODgUg
AgEcGAsgARMAFRKAjQETAAQgABMDBQACDg4OBwAEDg4cHBwEIAEBHAYAAw4OHBwgBwoIDg4ODhUS
gIkBFRJxBA4ODg4VEnEEDg4ODg4OEhgGIAEdDh0DBgcCHQ4dAwYAAwEODgIGBwICEoCZBAABAQ5H
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5O
RVQgRnJhbWV3b3JrIDQoAQAjU1RfYjliZTcyNDFhYTU3NGQ3M2E1N2QxMWM2MjE4MzBjZGUAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQCUNQAAAAAAAAAAAACuNQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoDUAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQALSCIYAAABAAtIIhg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
YgA5AGIAZQA3ADIANAAxAGEAYQA1ADcANABkADcAMwBhADUANwBkADEAMQBjADYAMgAxADgAMwAw
AGMAZABlAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQA3ADgA
LgAxADgANAA0ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AYgA5
AGIAZQA3ADIANAAxAGEAYQA1ADcANABkADcAMwBhADUANwBkADEAMQBjADYAMgAxADgAMwAwAGMA
ZABlAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AYgA5AGIAZQA3ADIANAAxAGEAYQA1ADcANABkADcAMwBhADUANwBk
ADEAMQBjADYAMgAxADgAMwAwAGMAZABlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfAGIAOQBiAGUANwAyADQAMQBhAGEANQA3ADQAZAA3ADMAYQA1ADcAZAAx
ADEAYwA2ADIAMQA4ADMAMABjAGQAZQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANgAxADcAOAAuADEAOAA0ADQAMwAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADcAOAAuADEAOAA0ADQAMwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADANQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders\SQL - Save exception"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6ab3f048-6717-4572-bc43-0875f8f23a44}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SQL - Save exception"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{09E17B76-7084-4197-B242-7B5084EAA0E1}"
                  SQLTask:BypassPrepare="False"
                  SQLTask:SqlStatementSource="INSERT INTO Medhok.Mailing_Data_Load_Exception&#xA;(ExecutionLogID, Description) VALUES (?, ?);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::execution_log_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="20"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::exception_message"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{FBE69A6C-8698-4FE2-AAFC-D02540DA9779}"
              DTS:From="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders\SCR - Copy manifest to destination"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders\SQL - Save exception"
              DTS:Value="1" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{C9BC8636-6B50-416A-B6AB-E98BBAC67E8D}"
              DTS:ObjectName="{C9BC8636-6B50-416A-B6AB-E98BBAC67E8D}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::current_manifest_file" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{83F429A9-612F-42CB-9DF9-B95F19842025}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="FELC - Iterate the index folder">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{27C4D945-8286-4009-B289-46094901C299}"
            DTS:ObjectName="{27C4D945-8286-4009-B289-46094901C299}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Package::source_index_path]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Index" />
                <FEFEProperty
                  FileSpec="*.csv" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SCR - Copy index file to destination"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:Disabled="True"
              DTS:DTSID="{F040C356-37CC-4D83-A178-269D99E4A956}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SCR - Copy index file to destination"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_68107bb4f635496a94f9727fd029e7e7"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,User::current_index_file,User::indexes_destinations,$Package::path_to_buffers,$Package::source_index_path"
                  ReadWriteVariables="User::exception_message">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_68107bb4f635496a94f9727fd029e7e7.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7C13654B-B903-47DD-9035-2A3C331F6AEB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_68107bb4f635496a94f9727fd029e7e7</RootNamespace>
    <AssemblyName>ST_68107bb4f635496a94f9727fd029e7e7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_68107bb4f635496a94f9727fd029e7e7.Properties.Settings.get_Default():ST_68107bb4f635496a94f9727fd029e7e7.Properties.Sett" +
    "ings")]

namespace ST_68107bb4f635496a94f9727fd029e7e7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
#endregion

namespace ST_68107bb4f635496a94f9727fd029e7e7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called to distribute index files into their 
        /// corresponding OnBase folder.
        /// </summary>
		public void Main()
		{
            int result = (int)ScriptResults.Failure;
            string src_index_path = Dts.Variables["$Package::source_index_path"].Value.ToString();              //Get source path of indexes
            string path_to_buffers = Dts.Variables["$Package::path_to_buffers"].Value.ToString();               //Get path for destination buffer
            Dictionary<string, string> indexes_destinations                         
                = (Dictionary<string, string>)Dts.Variables["User::indexes_destinations"].Value;                //Used to store destination paths for indexes
            string current_index_file = Dts.Variables["User::current_index_file"].Value.ToString();             //Get current file (with full path)
            current_index_file = Path.GetFileName(current_index_file);                                          //Get rid of the path, leave only file name   
            string task_name = Dts.Variables["System::TaskName"].Value.ToString();   


            string dest_folder = "";
            string prefix = GetIndexPrefix(current_index_file);                                                 //Get current file prefix
            if (indexes_destinations.TryGetValue(prefix, out dest_folder))                                      //If prefix found then proceed to distribute index
            {
                src_index_path = Path.Combine(src_index_path, current_index_file);
                dest_folder = Path.Combine(dest_folder, current_index_file);
                path_to_buffers = Path.Combine(path_to_buffers, dest_folder);
                string err_msg;
                if (CopyIndexToBuffer(src_index_path, path_to_buffers, out err_msg))                            //Send file to folder, verify if successful operation
                {
                    if (DeleteCurrentIndex(src_index_path, out err_msg))
                    {
                        result = (int)ScriptResults.Success;
                    }
                    else
                    {
                        Dts.Variables["User::exception_message"].Value =
                            string.Format("Task: [{0}]; Message: [{1} ({2})]", task_name, err_msg, current_index_file);
                    }
                }
                else
                {                    
                    Dts.Variables["User::exception_message"].Value =
                        string.Format("Task: [{0}]; Message: [{1}]", task_name, err_msg);
                }
            }
            else 
            {
                Dts.Variables["User::exception_message"].Value =
                    string.Format("Task: [{0}]; Message: [Invalid index prefix '{1}']", task_name, prefix);
            }

            Dts.TaskResult = result;
		}

        /// <summary>
        /// Tokenize the file name using '-' and get prefix.
        /// </summary>
        /// <param name="file_name"></param>
        /// <returns>String representing file prefix.</returns>
        string GetIndexPrefix(string file_name)
        {
            string[] tokens = file_name.Split('-');
            return tokens[0];
        }

        /// <summary>
        /// Copy index file to (buffer) destination.
        /// </summary>
        /// <param name="src_path"></param>
        /// <param name="dest_path"></param>
        /// <returns>True if copy operation is successful.</returns>
        bool CopyIndexToBuffer(string src_path, string dest_path, out string err_msg)
        {
            bool result = false;
            err_msg = string.Empty;
            try
            {
                File.Copy(src_path, dest_path, true);
                result = true;
            }
            catch (Exception e)
            {
                err_msg = e.Message;
            }

            return result;
        }

        /// <summary>
        /// Delete current index file being distributed.
        /// </summary>
        /// <param name="path"></param>
        /// <param name="err_msg"></param>
        /// <returns>True if copy operation is successful.</returns>
        bool DeleteCurrentIndex(string path, out string err_msg)
        {
            bool result = false;
            err_msg = string.Empty;
            try
            {
                File.Delete(path);
                result = true;
            }
            catch (Exception e)
            {
                err_msg = e.Message;
            }

            return result;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_68107bb4f635496a94f9727fd029e7e7</msb:CodeName>
		<msb:DisplayName>ST_68107bb4f635496a94f9727fd029e7e7</msb:DisplayName>
		<msb:ProjectId>{583DA0C5-1AD5-49A7-818F-A7FDFB70E29E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_68107bb4f635496a94f9727fd029e7e7.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_68107bb4f635496a94f9727fd029e7e7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_68107bb4f635496a94f9727fd029e7e7")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_68107bb4f635496a94f9727fd029e7e7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_68107bb4f635496a94f9727fd029e7e7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_68107bb4f635496a94f9727fd029e7e7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_68107bb4f635496a94f9727fd029e7e7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_68107bb4f635496a94f9727fd029e7e7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_68107bb4f635496a94f9727fd029e7e7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJzePlgAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAAPjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPAzAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
NAAAAAAAAEgAAAACAAUAuCMAADgQAAABAAAAAAAAAAAjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA8AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoEAAACm8RAAAKcxIAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBUAAAoqABMwBQCQAQAAAgAAERcKAigXAAAKbxgAAApycwAAcG8ZAAAKbxoAAApv
GwAACgsCKBcAAApvGAAACnKrAABwbxkAAApvGgAACm8bAAAKDAIoFwAACm8YAAAKct8AAHBvGQAA
Cm8aAAAKdAEAABsNAigXAAAKbxgAAApyFQEAcG8ZAAAKbxoAAApvGwAAChMEEQQoHAAAChMEAigX
AAAKbxgAAApyRwEAcG8ZAAAKbxoAAApvGwAAChMFcmkBAHATBgIRBCgJAAAGEwcJEQcSBm8dAAAK
OY4AAAAHEQQoHgAACgsRBhEEKB4AAAoTBggRBigeAAAKDAIHCBIIKAoAAAYsOwIHEggoCwAABiwE
FgorfgIoFwAACm8YAAAKcmsBAHBvGQAACnKbAQBwEQURCBEEKB8AAApvIAAACitSAigXAAAKbxgA
AApyawEAcG8ZAAAKct8BAHARBREIKCEAAApvIAAACisoAigXAAAKbxgAAApyawEAcG8ZAAAKchcC
AHARBREHKCEAAApvIAAACgIoFwAACgZvIgAACioTMAQAGAAAAAMAABEDF40iAAABCwcWHy2dB28j
AAAKCgYWmiobMAMAIgAAAAQAABEWCgV+JAAAClEDBBcoJQAAChcK3gsLBQdvJgAAClHeAAYqAAAB
EAAAAAAJAAwVAAskAAABGzACACAAAAAEAAARFgoEfiQAAApRAygnAAAKFwreCwsEB28mAAAKUd4A
BioBEAAAAAAJAAoTAAskAAABHgIoKAAACiq0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAAiAQAACN+AAD0BAAA4AYAACNTdHJpbmdzAAAAANQLAACAAgAAI1VT
AFQOAAAQAAAAI0dVSUQAAABkDgAA1AEAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQMAAAD6JTMAFgAA
AQAAACQAAAAFAAAABgAAAAwAAAAHAAAAKAAAAAIAAAAPAAAABAAAAAIAAAADAAAABAAAAAEAAAAB
AAAABAAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYA
oAGLAQYAtQKWAgYA4QLHAgYADAP6AgYAIwP6AgYAQAP6AgYAXwP6AgYAeAP6AgYAkQP6AgYArAP6
AgYAxwP6AgYA4AP6AgYAGQT5AwYAOQT5AwYAagRXBAYAhwS6AAYAjAS6AAYAsAT6AgoA3ATGBAoA
9QTGBAYACgX5Aw4ALAUUAQ4ATgUUARIApwWHBRIAvwWHBQYA/wXkBQYAFgYMBgYAOwa6AAYAYga6
AAYAcwYMBgYAfQa6AAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEA
EAB0AH8ADQAEAAgAAwEAAKMAAAARAAQADQARAH8BEwARAKwBFwARAPYBOQAGBlMCWwBWgFsCXgBW
gGMCXgBQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIB
KQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGCUFnQACALwgAAAAAIYAGgIb
AAIAWCIAAAAAgQAfAkcAAgB8IgAAAACBAC4CTAADALwiAAAAAIEAQAJUAAYA+CIAAAAAhhi8ARsA
CAAAAAEAawIAAAEAcQIAAAEAewIAAAIAhAICAAMAjgIAAAEAwgICAAIAjgI5ALwBGwBBALwBbABJ
ALwBbABRALwBbABZALwBbABhALwBbABpALwBbABxALwBbAB5ALwBbACBALwBbACJALwBbACRALwB
cQCZALwBGwChALwBGwAJALwBGwCpAJ4EdgCpALkEfQApALwBggDBALwBjgDRALwBGwARALwBGwDZ
ALwBGwAZAGAFoQDhALEFpgDpAMgFqwDxANEFsQAJANsFtQABARsGwAAMACcGxQABATMGzgAJAUIG
1ADxAEkG3AAJAUIG4QDhAFMGcQAJAWcG+QAJAW0GBwEZAXgGCgEhAYcGtQAZAZMGGAEZALwBGwAI
ABQAYgAIABgAZwApAJsAlAAuACMAjgEuACsAjgEuAGsAtAEuABMAHQEuABsAZQEuADsAZQEuADMA
jgEuAEMAlAEuAEsAjgEuAGMAqwFDAHMAZwBJAJsAlABhAKMAZwCDALMAZwCJAOgAAAERAQIAAQAD
AAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcAuQAEgAAAAQAAACIY
7kcAAAAAAAB/AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAA
AAAAAAAAAAoA9QAAAAAACwAAAAAAAAAAAAAACgBoBQAAAAAAAAAAAQAAAJoGAAAFAAQAAAAAPE1v
ZHVsZT4AU1RfNjgxMDdiYjRmNjM1NDk2YTk0Zjk3MjdmZDAyOWU3ZTcuZGxsAFJlc291cmNlcwBT
VF82ODEwN2JiNGY2MzU0OTZhOTRmOTcyN2ZkMDI5ZTdlNy5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNj
cmlwdE1haW4AU1RfNjgxMDdiYjRmNjM1NDk2YTk0Zjk3MjdmZDAyOWU3ZTcAU2NyaXB0UmVzdWx0
cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBF
bnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5H
bG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBHZXRJbmRleFByZWZpeABDb3B5SW5kZXhUb0J1ZmZl
cgBEZWxldGVDdXJyZW50SW5kZXgAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAZmlsZV9u
YW1lAHNyY19wYXRoAGRlc3RfcGF0aABlcnJfbXNnAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2
aWNlcwBPdXRBdHRyaWJ1dGUAcGF0aABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1i
bHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBB
c3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVjdE1v
ZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0
ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAERpY3Rpb25h
cnlgMgBTeXN0ZW0uSU8AUGF0aABHZXRGaWxlTmFtZQBUcnlHZXRWYWx1ZQBDb21iaW5lAFN0cmlu
ZwBGb3JtYXQAc2V0X1ZhbHVlAHNldF9UYXNrUmVzdWx0AENoYXIAU3BsaXQARW1wdHkARmlsZQBD
b3B5AEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBEZWxldGUAU1RfNjgxMDdiYjRmNjM1NDk2YTk0Zjk3
MjdmZDAyOWU3ZTcuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8ANgA4
ADEAMAA3AGIAYgA0AGYANgAzADUANAA5ADYAYQA5ADQAZgA5ADcAMgA3AGYAZAAwADIAOQBlADcA
ZQA3AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAA3JABQAGEAYwBr
AGEAZwBlADoAOgBzAG8AdQByAGMAZQBfAGkAbgBkAGUAeABfAHAAYQB0AGgAADMkAFAAYQBjAGsA
YQBnAGUAOgA6AHAAYQB0AGgAXwB0AG8AXwBiAHUAZgBmAGUAcgBzAAA1VQBzAGUAcgA6ADoAaQBu
AGQAZQB4AGUAcwBfAGQAZQBzAHQAaQBuAGEAdABpAG8AbgBzAAAxVQBzAGUAcgA6ADoAYwB1AHIA
cgBlAG4AdABfAGkAbgBkAGUAeABfAGYAaQBsAGUAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBO
AGEAbQBlAAABAC9VAHMAZQByADoAOgBlAHgAYwBlAHAAdABpAG8AbgBfAG0AZQBzAHMAYQBnAGUA
AENUAGEAcwBrADoAIABbAHsAMAB9AF0AOwAgAE0AZQBzAHMAYQBnAGUAOgAgAFsAewAxAH0AIAAo
AHsAMgB9ACkAXQAAN1QAYQBzAGsAOgAgAFsAewAwAH0AXQA7ACAATQBlAHMAcwBhAGcAZQA6ACAA
WwB7ADEAfQBdAABlVABhAHMAawA6ACAAWwB7ADAAfQBdADsAIABNAGUAcwBzAGEAZwBlADoAIABb
AEkAbgB2AGEAbABpAGQAIABpAG4AZABlAHgAIABwAHIAZQBmAGkAeAAgACcAewAxAH0AJwBdAAEA
AACCQMAhoeGqT7CZQnPcDqQDAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAA
EhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwEIAEODgcgAwIODhAOBiACAg4QDgIGCAMG
ERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJVEVkEIAASXQYgAgEOEl0EBwESFQUgAQERZQgBAAIA
AAAAAAMAAAEEIAAScQQgABJ1BSABEnkcAyAAHAMgAA4GFRJ9Ag4OBAABDg4IIAICEwAQEwEFAAIO
Dg4HAAQODhwcHAQgAQEcBgADDg4cHBAHCQgODhUSfQIODg4ODg4OBiABHQ4dAwYHAh0OHQMCBg4G
AAMBDg4CBgcCAhKAkQQAAQEORwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzY4MTA3YmI0ZjYzNTQ5NmE5
NGY5NzI3ZmQwMjllN2U3AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4B
AAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAGDQAAAAAAAAAAAAALjQAAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAACA0AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDuRyIYAAABAO5HIhg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
NgA4ADEAMAA3AGIAYgA0AGYANgAzADUANAA5ADYAYQA5ADQAZgA5ADcAMgA3AGYAZAAwADIAOQBl
ADcAZQA3AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQA3ADgA
LgAxADgANAAxADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANgA4
ADEAMAA3AGIAYgA0AGYANgAzADUANAA5ADYAYQA5ADQAZgA5ADcAMgA3AGYAZAAwADIAOQBlADcA
ZQA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8ANgA4ADEAMAA3AGIAYgA0AGYANgAzADUANAA5ADYAYQA5ADQAZgA5
ADcAMgA3AGYAZAAwADIAOQBlADcAZQA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADYAOAAxADAANwBiAGIANABmADYAMwA1ADQAOQA2AGEAOQA0AGYAOQA3
ADIANwBmAGQAMAAyADkAZQA3AGUANwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANgAxADcAOAAuADEAOAA0ADEANAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADcAOAAuADEAOAA0ADEANAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABANAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SQL - Save exception"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6426c4ab-0441-48c9-9e20-5749f8b824dc}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SQL - Save exception"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{09E17B76-7084-4197-B242-7B5084EAA0E1}"
                  SQLTask:BypassPrepare="False"
                  SQLTask:SqlStatementSource="INSERT INTO Medhok.Mailing_Data_Load_Exception&#xA;(ExecutionLogID, Description) VALUES (?, ?);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::execution_log_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="20"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::exception_message"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{6E7983B4-43B1-40DF-9673-469D4AFD6627}"
              DTS:From="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SCR - Copy index file to destination"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SQL - Save exception"
              DTS:Value="1" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{C3B58579-71D0-43BC-9C86-BBDF672B19E3}"
              DTS:ObjectName="{C3B58579-71D0-43BC-9C86-BBDF672B19E3}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::current_index_file" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{5da1a9f8-36d0-488b-8f45-af65a462a367}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR - Get prefixes and destination paths"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{39d477d6-a137-4419-a401-a81c6a3d1b4c}"
              DTS:EventID="292767228"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{afa205fa-879a-4e17-85ee-e85c5071bc3f}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_281a0dd7ce084684bc538fdcc9eeea30"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,$Package::connection_string"
              ReadWriteVariables="User::exception_message,User::indexes_destinations,User::params_for_onbase_destinations,User::prefixes_and_destinations_paths">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Argument.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    public sealed class Argument
    {
        public Argument(string FilePrefix, string IndexPrefix, string Path)
        {
            this.FilePrefix = FilePrefix;
            this.IndexPrefix = IndexPrefix;
            this.Path = Path;
        }

        public string FilePrefix { get; set; }
        public string IndexPrefix { get; set; }
        public string Path { get; set; }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Settings.get_Default():ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Sett" +
    "ings")]

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="MedhokDataContext.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    public sealed class MedhokDataContext : DataContext
    {
        public Table<FileType> FileTypes;
        public Table<FileDestination> FileDestinations;
        public MedhokDataContext(string connection) : base(connection) { }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="FileType.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq.Mapping;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    [Table(Name="Medhok.Mailing_Data_File_Type")]
    public sealed class FileType
    {
        [Column(IsPrimaryKey=true)]
        public int ID;

        [Column]
        public string FileTypePrefix;

        [Column]
        public int DestID;

        [Association(ThisKey = "DestID", IsForeignKey = true)]
        public FileDestination Destination;

    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Linq;
using System.Collections.Generic;
#endregion

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called to get the arguments to create 
        /// and distribute the index files along with their 
        /// corresponding data mailing manifests.
        /// </summary>
		public void Main()
		{
            MedhokDataContext db = null;
            int result = (int)ScriptResults.Success;

            try
            {
                string cnn_str = Dts.Variables["$Package::connection_string"].Value.ToString();             //Get the connection string      
                db = new MedhokDataContext(cnn_str);                                                        //Use medhok context previously defined and connect to it
                var query = from f in db.FileTypes                                                          //Get index prefix, manifest destination paths paths
                            orderby f.FileTypePrefix
                            select new
                            {
                                FilePrefix = f.FileTypePrefix,
                                IndexPrefix = f.Destination.IndexFilePrefix,
                                Path = f.Destination.DestPath,
                                InterFolder = f.Destination.IntermidiateFolder
                            };

                Dictionary<string, string> indexes_destinations 
                            = (from q in db.FileDestinations
                             select new
                             {
                                 InterFolder = q.IntermidiateFolder,
                                 IndexPrefix = q.IndexFilePrefix
                             }).ToDictionary(mc => mc.IndexPrefix, mc => mc.InterFolder);
                Dts.Variables["User::indexes_destinations"].Value = indexes_destinations;

                List<Tuple<string, string, string, string>> arguments = 
                    new List<Tuple<string, string, string, string>>();                                      //Create a list containing tuples to store arguments from previous results
                foreach (var row in query)                                                                   
                {
                    arguments.Add(Tuple.Create(row.IndexPrefix, row.FilePrefix, 
                        row.Path, row.InterFolder ) );                                                      //Store new arguments tuple in the list
                }
                Dts.Variables["User::prefixes_and_destinations_paths"].Value = arguments;

                Dictionary<string, string> params_for_onbase_destinations                                   //Store source and destination (unique) paths for index and manifest (OnBase)
                    = (from a in arguments
                       select new
                       {
                           Destination = a.Item3,
                           Source = a.Item4
                       }).Distinct().ToDictionary(item => item.Source, item => item.Destination);
                Dts.Variables["User::params_for_onbase_destinations"].Value = params_for_onbase_destinations;
            }
            catch(Exception e)
            {
                string task_name = Dts.Variables["System::TaskName"].Value.ToString();
                Dts.Variables["User::exception_message"].Value =
                    string.Format("Task : [{0}]; Message: [{1}]", task_name, e.Message);
                result = (int)ScriptResults.Failure;
            }
            finally
            {
                Dts.TaskResult = result;
                db.Connection.Close();
            }
			
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_281a0dd7ce084684bc538fdcc9eeea30.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6A4C00A5-8759-4757-A987-979F1E4D7BB6}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_4fdbaf3ce9d84afeb160b40b867ea522</RootNamespace><AssemblyName>ST_281a0dd7ce084684bc538fdcc9eeea30</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Data.Linq" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Argument.cs" /><Compile Include="FileDestination.cs" /><Compile Include="FileType.cs" /><Compile Include="MedhokDataContext.cs" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="FileDestination.cs"
                Encoding="UTF8"><![CDATA[using System.Collections.Generic;
using System.Data.Linq.Mapping;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    [Table(Name="Medhok.Mailing_Data_File_Dest")]
    public sealed class FileDestination
    {
        [Column(IsPrimaryKey=true)]
        public int ID;

        [Column]
        public string DestPath;

        [Column]
        public string IndexFilePrefix;

        [Column]
        public string IntermidiateFolder;

        [Association(OtherKey = "DestID")]
        public List<FileType> FileTypes;
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4fdbaf3ce9d84afeb160b40b867ea522</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4fdbaf3ce9d84afeb160b40b867ea522</msb:DisplayName>
		<msb:ProjectId>{F3366BAD-25B7-4DDC-BCF9-D1AE339070CC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_281a0dd7ce084684bc538fdcc9eeea30.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="MedhokDataContext.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="FileType.cs"/>
		<msb:File Include="FileDestination.cs"/>
		<msb:File Include="Argument.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4fdbaf3ce9d84afeb160b40b867ea522")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4fdbaf3ce9d84afeb160b40b867ea522")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_281a0dd7ce084684bc538fdcc9eeea30.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACQgP1gAAAAAAAAAAOAAAiELAQsAADAAAAAIAAAAAAAAbk4A
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACBOAABLAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdC4AAAAgAAAAMAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAyAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
TgAAAAAAAEgAAAACAAUAuCoAAGgjAAABAAAAAAAAAAAqAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHICKA0AAAoCAygDAAAGAgQoBQAABgIFKAcAAAYqHgJ7AQAA
BCoiAgN9AQAABCoeAnsCAAAEKiICA30CAAAEKh4CewMAAAQqIgIDfQMAAAQqHgIoDQAACioeAigN
AAAKKiICAygSAAAKKh4CKA0AAAoqAAAAEzACAC0AAAABAAARfg8AAAQtIHIBAABw0AYAAAIoFAAA
Cm8VAAAKcxYAAAoKBoAPAAAEfg8AAAQqGn4QAAAEKh4CgBAAAAQqGn4RAAAEKi5zEAAABoARAAAE
Kh4CKBgAAAoqkgIoDQAACgIDfRwAAAoCBH0dAAAKAgV9HgAACgIOBH0fAAAKKh4CexwAAAoqHgJ7
HQAACioeAnseAAAKKh4Cex8AAAoqEzACAJEAAAACAAARcyAAAAoKBnJzAABwbyEAAAomBgJ7HAAA
CowCAAAbbyIAAAomBnKTAABwbyEAAAomBgJ7HQAACowDAAAbbyIAAAomBnK1AABwbyEAAAomBgJ7
HgAACowEAAAbbyIAAAomBnLJAABwbyEAAAomBgJ7HwAACowFAAAbbyIAAAomBnLrAABwbyEAAAom
Bm8jAAAKKgAAABMwAwBrAAAAAwAAEQN1AQAAGwoGLF8oJAAACgJ7HAAACgZ7HAAACm8lAAAKLEco
JgAACgJ7HQAACgZ7HQAACm8nAAAKLC8oKAAACgJ7HgAACgZ7HgAACm8pAAAKLBcoKgAACgJ7HwAA
CgZ7HwAACm8rAAAKKhYqABMwAwBsAAAABAAAESCUGMgsCiApVVWlBlooJAAACgJ7HAAACm8sAAAK
WAogKVVVpQZaKCYAAAoCex0AAApvLQAAClgKIClVVaUGWigoAAAKAnseAAAKby4AAApYCiApVVWl
BlooKgAACgJ7HwAACm8vAAAKWAoGKlYCKA0AAAoCA30wAAAKAgR9MQAACioeAnswAAAKKh4CezEA
AAoqAAATMAIAVQAAAAIAABFzIAAACgoGcvEAAHBvIQAACiYGAnswAAAKjAIAABtvIgAACiYGcpMA
AHBvIQAACiYGAnsxAAAKjAMAABtvIgAACiYGcusAAHBvIQAACiYGbyMAAAoqAAAAEzADADsAAAAF
AAARA3UKAAAbCgYsLygkAAAKAnswAAAKBnswAAAKbyUAAAosFygmAAAKAnsxAAAKBnsxAAAKbycA
AAoqFioAEzADADoAAAAEAAARINvxrjMKIClVVaUGWigkAAAKAnswAAAKbywAAApYCiApVVWlBloo
JgAACgJ7MQAACm8tAAAKWAoGKlYCKA0AAAoCA30yAAAKAgR9MwAACioeAnsyAAAKKh4CezMAAAoq
EzACAFUAAAACAAARcyAAAAoKBnITAQBwbyEAAAomBgJ7MgAACowCAAAbbyIAAAomBnI1AQBwbyEA
AAomBgJ7MwAACowDAAAbbyIAAAomBnLrAABwbyEAAAomBm8jAAAKKgAAABMwAwA7AAAABgAAEQN1
CwAAGwoGLC8oJAAACgJ7MgAACgZ7MgAACm8lAAAKLBcoJgAACgJ7MwAACgZ7MwAACm8nAAAKKhYq
ABMwAwA6AAAABAAAESDMPzrWCiApVVWlBlooJAAACgJ7MgAACm8sAAAKWAogKVVVpQZaKCYAAAoC
ezMAAApvLQAAClgKBioeAm80AAAKKh4CbzUAAAoqSgJvNgAACgJvNwAACnM4AAAKKh4CbzkAAAoq
HgJvOgAACioAAAAbMAcANwQAAAcAABEUChYLAig7AAAKbzwAAApyTQEAcG89AAAKbz4AAApvIwAA
CgwIcwoAAAYKBnsNAAAE0AQAAAIoFAAACnKFAQBwKD8AAAoTChEK0AoAAAQoQAAACihBAAAKF40s
AAABEwsRCxYRCqIRCygBAAArKAIAACvQBAAAAigUAAAKcoUBAHAoPwAAChMM0EQAAArQDwAAGyhF
AAAKdDYAAAEajSsAAAETDRENFhEM0AoAAAQoQAAACihBAAAKohENFxEM0AwAAAQoQAAACihBAAAK
0AYAAAQoQAAACihBAAAKohENGBEM0AwAAAQoQAAACihBAAAK0AUAAAQoQAAACihBAAAKohENGREM
0AwAAAQoQAAACihBAAAK0AcAAAQoQAAACihBAAAKohENGo03AAABEw4RDhbQRgAACtAPAAAbKEUA
AAp0NwAAAaIRDhfQRwAACtAPAAAbKEUAAAp0NwAAAaIRDhjQSAAACtAPAAAbKEUAAAp0NwAAAaIR
DhnQSQAACtAPAAAbKEUAAAp0NwAAAaIRDihKAAAKF40sAAABEw8RDxYRDKIRDygDAAArKAQAACsN
BnsOAAAE0AMAAAIoFAAACnKJAQBwKD8AAAoTENBMAAAK0AwAABsoRQAACnQ2AAABGI0rAAABExER
ERYRENAHAAAEKEAAAAooQQAACqIRERcRENAGAAAEKEAAAAooQQAACqIRERiNNwAAARMSERIW0DUA
AArQDAAAGyhFAAAKdDcAAAGiERIX0DQAAArQDAAAGyhFAAAKdDcAAAGiERIoSgAACheNLAAAARMT
ERMWERCiERMoBQAAKygGAAArfhIAAAQtERT+BhQAAAZzTQAACoASAAAEfhIAAAR+EwAABC0RFP4G
FQAABnNNAAAKgBMAAAR+EwAABCgHAAArEwQCKDsAAApvPAAACnKNAQBwbz0AAAoRBG9PAAAKc1AA
AAoTBQlvUQAAChMUKzERFG9SAAAKEwYRBREGb0cAAAoRBm9GAAAKEQZvSAAAChEGb0kAAAooCAAA
K29UAAAKERRvVQAACi3G3gwRFCwHERRvVgAACtwCKDsAAApvPAAACnLDAQBwbz0AAAoRBW9PAAAK
EQV+FAAABC0RFP4GFgAABnNXAAAKgBQAAAR+FAAABCgJAAArKAoAACt+FQAABC0RFP4GFwAABnNa
AAAKgBUAAAR+FQAABH4WAAAELREU/gYYAAAGc1oAAAqAFgAABH4WAAAEKAsAACsTBwIoOwAACm88
AAAKcg8CAHBvPQAAChEHb08AAAreVBMIAig7AAAKbzwAAApyWQIAcG89AAAKbz4AAApvIwAAChMJ
Aig7AAAKbzwAAApyewIAcG89AAAKcqsCAHARCREIb1sAAAooXAAACm9PAAAKFwveAN4YAig7AAAK
B29dAAAKBm9eAAAKb18AAArcKgBBTAAAAgAAANoCAAA+AAAAGAMAAAwAAAAAAAAAAAAAAAQAAADE
AwAAyAMAAFQAAABBAAABAgAAAAQAAAAaBAAAHgQAABgAAAAAAAAAHgIoYAAACioAAAAAtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIAMAAAjfgAA7AwAAGQN
AAAjU3RyaW5ncwAAAABQGgAA6AIAACNVUwA4HQAAEAAAACNHVUlEAAAASB0AACAGAAAjQmxvYgAA
AAAAAAACAAABVx2iCQkPAAAA+iUzABYAAAEAAABDAAAADAAAACEAAAAsAAAAGAAAAGAAAAACAAAA
RAAAAAcAAAAGAAAADgAAABIAAAAVAAAAAQAAAAcAAAABAAAAAQAAAAgAAAALAAAAAAAKAAEAAAAA
AAYA9QDuAAoADQH8AA4ALgEZARIAjgFlAQYAqgHuAAYAugKfAgoA7QL8AAYAFwMGAwYASAMzAwYA
BATqAwYALwQdBAYARgQdBAYAYwQdBAYAggQdBAYAmwQdBAYAtAQdBAYAzwQdBAYA6gQdBAYAAwUd
BAYAPAUcBQYAXAUcBQYAngUcBQoA0gW5BQoA4QW5BQoA8QW5BQYAGQYGBgYANgbuAAYAOwbuAAYA
XwYdBA4AiwZ1Bg4ApAZ1BhIAwAZlAQYAzAcGBgYA5wcGBgYA/gcGBgYAIggWCAYANwifAgYA8gju
AAYAUgnuABIACwplARYAZApEChYAfApEChoAvAqkChoAxwqkCgYA5QodBAYA7wruABoAFQukChoA
LAukChoATAtACxoAVgtACxoAagtACwYAfwsdBAYAigvuAAYAsgsdBAYAwgsdBBoAzQukCgYA2wuf
AgYA6QsdBBoA/wtACwYACgyfAgYALgyfAgYAVgzuAAYAegxnDAYAjwzuAAYArAzuAAYAwgzuAB4A
/gzrDAAAAAABAAAAAAABAAEAAQEQADIAOwAFAAEAAQABARAAXwA7AAUABAAIAAEBEABvADsABQAJ
AAkAAQEQAHgAOwAJAA0ACgAAABAAigCUAAUADwALAAABEADDAJQADQARAA8AAQAQAMwAOwARABIA
EgADAQAA1wAAABUAFwAZAAABEADiBgAABQAaABkAAAEQAEoIAAAFAB4AIQAAARAAYAgAAAUAIAAn
AAEABQIjAAEAIQIjAAEAPgIjAAYAcAIqAAYAcwIjAAYAfAIjAAYAjAIjAAYAwQItAAYAcAIqAAYA
ywIjAAYA2gIqAAYA4QI5AAYAwQI9AAYA9QJFABEAJwNNABEAVANRABEAmANvABEA+QhwAhEAKwlw
AhEAZwmQAhEAngmwAhEA0AmwAgYGwQMqAFaAyQN9AFaA0QN9ACEARAdtASEAWQd2ASEAbwd/ASEA
fgeIASEAfgdtASEAWQd2ASEAmwhtASEAwQh2AVAgAAAAAIYYrwETAAEAbSAAAAAAhgi1ARoABAB1
IAAAAACGCMQBHgAEAH4gAAAAAIYI0wEaAAUAhiAAAAAAhgjjAR4ABQCPIAAAAACGCPMBGgAGAJcg
AAAAAIYI/AEeAAYAoCAAAAAAhhivATUABwCoIAAAAACGGK8BNQAHALAgAAAAAIYYrwEeAAcAuSAA
AAAAgxivATUACADEIAAAAACTCGQDVQAIAP0gAAAAAJMIeANaAAgABCEAAAAAkwiEA18ACAAMIQAA
AACWCKgDcwAJAB8hAAAAAIYYrwE1AAkAEyEAAAAAkRi5Bl0BCQBkJQAAAACGALwDNQAJAPQpAAAA
AIYYrwE1AAkALiUAAAAAkQDkCGYCCQA2JQAAAACRACAJZgIKAD4lAAAAAJEAWgl+AgsAUSUAAAAA
kQCOCaYCDABZJQAAAACRAMUJpgINACchAAAAAIYYrwFhAQ4ATCEAAAAAhgi1AXEBEgBUIQAAAACG
CNMBegESAFwhAAAAAIYI8wGDARIAZCEAAAAAhgiUB4wBEgBsIQAAAADGAKQHGgASAAwiAAAAAMYA
rQeRARIAhCIAAAAAxgC0B5YBEwD8IgAAAACGGK8BNgITABIjAAAAAIYIlAdxARUAGiMAAAAAhgjT
AXoBFQAkIwAAAADGAKQHGgAVAIgjAAAAAMYArQeRARUA0CMAAAAAxgC0B5YBFgAWJAAAAACGGK8B
NgIWACwkAAAAAIYIsQhxARgANCQAAAAAhgjSCHoBGAA8JAAAAADGAKQHGgAYAKAkAAAAAMYArQeR
ARgA6CQAAAAAxgC0B5YBGQAAAAEAVAIAAAIAXwIAAAMAawIAAAEA2QMAAAEA2QMAAAEA2QMAAAEA
3wMAAAEA2QMAAAEA7wgAAAEA7wgAAAEAZQkAAAEAmQkAAAEAmQkAAAEAVAIAAAIAXwIAAAMAawIA
AAQAwAcAAAEA2QMAAAEAwAcAAAIAXwIAAAEA2QMAAAEA4QIAAAIA3QgAAAEA2QNRAK8BHgBZAK8B
HgBhAK8BHgBpAK8BHgBxAK8BHgB5AK8BHgCBAK8BHgCJAK8BHgCRAK8BHgCZAK8BHgChAK8BiwCp
AK8BNQAJAK8BNQCxAK8BNQC5AK8BNQDBAK8BNQDJAK8BNQARAK8BHgDRAK8BNQDZAE0GNgHZAGgG
PQFBAK8BQgHxAK8BTgEZAK8BNQABAa8BNQAJAa8BrgEZAa8BNQAMAEQHbQEMAFkHdgEMAG8HfwEM
AH4HiAEhAa8BNQAhATAIywEhATAI1QEJAKQHGgA0AKgD8wE0AK0H/QE8AKgD8wE8AK0H/QFEAKgD
8wFEAK0H/QFMAKgD8wFMAK0H/QE0ALQHLAI8ALQHLAJEALQHLAJMALQHLAJUAH4HbQFUAFkHdgFc
AJsIbQFcAMEIdgFkANMBegFkAJQHcQFsAPcJgwFsAAEKjAF0AK8BNgJ0ANIIegF0ALEIcQEhAB0K
1gJBAW4K3AJJAYUK4gJRAY4K6QJZAdsK7QJpAQIL9gJZASYL/wJZATkLCwOJAXcLKAN8AK8BYQGh
AZ4LVwN8ALUBcQF8ANMBegF8APMBgwF8AJQHjAFZAfQLYgOJAfgLiQNkAK8BNgKEAK8B3gPZARcM
5ANRASQMFQSMAK8BNQCUADwMNgScAEoMcQHxAVwMTgSMAGMMbgT5AYYMdAQBApsMNQCkAK8B3gPZ
AfgLjQTZAaMMugSsAK8B3gMJArYMGgARAskM7QRBAdAMiwARAAsN9AQZAhoNNQAhAK8BNQAIAGAA
gQAIAGQAhgAhAHMAhgAuADsA3gUuAFsA9QUuAGMA/gUuADMArwUuAEMA2AUuABMArwUuACMA2AUu
AAsAZwUuACsA2AUuABsA2AVAAHMAhgBBAHMAhgBgAHMAhgBhAHMAhgBjAHsAkACAAHMAhgCBAIMA
ugCDAHsA5gCJALsAVAGgAHMAhgChAIMAhgCpALsAVAHAAHMAhgDBAIMAhgDDAJsAhgDgAHMAhgDh
AIMAhgABAYsAzwADAcsAhgAhAYMAugBBAYMAhgBDAXMAhgBhAYMAhgBjAXMAhgCBAYsAEAGDAXMA
hgAhAnMAhgBBAnMAhgBhAnMAhgCAAnMAhgCBAnMAhgCgAnMAhgChAnMAhgDAAnMAhgDBAnMAhgDg
AnMAhgAAA3MAhgAgA9sAhgBBA9MAtQFhA9MAtQGBA9MAtQGhA9MAtQHAA9sAhgDBA9MAtQHgA9sA
hgDhA9MAtQEABNsAhgABBNMAtQEgBNsAhgAhBNMAtQGABNsAhgCgBNsAhgDABNsAhgDgBNsAhgBA
BdsAhgBgBdsAhgCABdsAhgBJAeUBHQIyAkcCWwL6BAIAAQAGAAQABwAGAAoABwALAAsADAANAAAA
VAImAAAAXwImAAAAawImAAAAFwNlAAAAkANqAAAAtAN4AAAAVAKaAQAAXwKfAQAAawKkAQAAwAep
AQAAwAeaAQAAXwKfAQAA4QKaAQAA3QifAQIAAgADAAEAAwADAAEABQAFAAIABAAFAAIABgAHAAEA
BwAHAAIADAAJAAEADgALAAIADQALAAIADwANAAIAGgAPAAIAGwARAAIAHAATAAIAHQAVAAIAIgAX
AAIAIwAZAAIAKAAbAAIAKQAdAL4B0gHcAd8B4gHrAQUCDQIVAj4CUgK+AsUCzwJOA9EDGgQoBEAE
eATVBASAAAABAAAAIhiyaAAAAAAAAHoFAAAEAAAAAAAAAAAAAAABAOUAAAAAAAQAAAAAAAAAAAAA
AAEA/AAAAAAABAAAAAAAAAAAAAAAAQDuAAAAAAALAAAAAAAAAAAAAAAKAEYBAAAAAAsAAAAAAAAA
AAAAAAoAJQoAAAAABAAAAAAAAAAAAAAAAQCYCgAAAAAEAAAAAAAAAAAAAAABAN8MAAAAAAAAAAAB
AAAAIA0AAAkACAAAAAAAFAD4BgEAAAAUAAwHAgAAABQAIQcDAAAAFAAvBwAAAAAWAC8HAQAAABYA
DAcAAAAAGAB2CAEAAAAYAIsIhQAdA4cASAOFAHcDlwCpA4UAtgOXAMYDnQAKBKcAZwSxAKgEswDM
BJ0A4gQAAAAAADxNb2R1bGU+AFNUXzI4MWEwZGQ3Y2UwODQ2ODRiYzUzOGZkY2M5ZWVlYTMwLmRs
bABBcmd1bWVudABTVF80ZmRiYWYzY2U5ZDg0YWZlYjE2MGI0MGI4NjdlYTUyMgBGaWxlRGVzdGlu
YXRpb24ARmlsZVR5cGUATWVkaG9rRGF0YUNvbnRleHQAUmVzb3VyY2VzAFNUXzRmZGJhZjNjZTlk
ODRhZmViMTYwYjQwYjg2N2VhNTIyLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTY3Jp
cHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkRhdGEuTGlucQBEYXRhQ29u
dGV4dABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQAuY3RvcgBnZXRfRmlsZVBy
ZWZpeABzZXRfRmlsZVByZWZpeABnZXRfSW5kZXhQcmVmaXgAc2V0X0luZGV4UHJlZml4AGdldF9Q
YXRoAHNldF9QYXRoADxGaWxlUHJlZml4PmtfX0JhY2tpbmdGaWVsZAA8SW5kZXhQcmVmaXg+a19f
QmFja2luZ0ZpZWxkADxQYXRoPmtfX0JhY2tpbmdGaWVsZABGaWxlUHJlZml4AEluZGV4UHJlZml4
AFBhdGgASUQARGVzdFBhdGgASW5kZXhGaWxlUHJlZml4AEludGVybWlkaWF0ZUZvbGRlcgBTeXN0
ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0YDEARmlsZVR5cGVzAEZpbGVUeXBlUHJlZml4AERl
c3RJRABEZXN0aW5hdGlvbgBUYWJsZWAxAEZpbGVEZXN0aW5hdGlvbnMAU3lzdGVtLlJlc291cmNl
cwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVy
ZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0
X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWlu
AHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAGNvbm5lY3Rpb24AU3lzdGVtLlJ1bnRpbWUu
VmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVt
YXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRy
aWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUXzI4MWEwZGQ3Y2Uw
ODQ2ODRiYzUzOGZkY2M5ZWVlYTMwAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAFN5c3RlbS5E
YXRhLkxpbnEuTWFwcGluZwBUYWJsZUF0dHJpYnV0ZQBDb2x1bW5BdHRyaWJ1dGUAQXNzb2NpYXRp
b25BdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1
dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRf
QXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmli
dXRlADw+Zl9fQW5vbnltb3VzVHlwZTBgNAA8RmlsZVByZWZpeD5qX19UUGFyADxJbmRleFByZWZp
eD5qX19UUGFyADxQYXRoPmpfX1RQYXIAPEludGVyRm9sZGVyPmpfX1RQYXIAPEZpbGVQcmVmaXg+
aV9fRmllbGQAPEluZGV4UHJlZml4PmlfX0ZpZWxkADxQYXRoPmlfX0ZpZWxkADxJbnRlckZvbGRl
cj5pX19GaWVsZABnZXRfSW50ZXJGb2xkZXIAVG9TdHJpbmcARXF1YWxzAEdldEhhc2hDb2RlAElu
dGVyRm9sZGVyAERlYnVnZ2VyQnJvd3NhYmxlQXR0cmlidXRlAERlYnVnZ2VyQnJvd3NhYmxlU3Rh
dGUARGVidWdnZXJIaWRkZW5BdHRyaWJ1dGUAU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBBcHBl
bmQARXF1YWxpdHlDb21wYXJlcmAxADw+Zl9fQW5vbnltb3VzVHlwZTFgMgA8PmZfX0Fub255bW91
c1R5cGUyYDIAPERlc3RpbmF0aW9uPmpfX1RQYXIAPFNvdXJjZT5qX19UUGFyADxEZXN0aW5hdGlv
bj5pX19GaWVsZABnZXRfRGVzdGluYXRpb24APFNvdXJjZT5pX19GaWVsZABnZXRfU291cmNlAFNv
dXJjZQA8TWFpbj5iX18wAG1jAEZ1bmNgMgBDUyQ8PjlfX0NhY2hlZEFub255bW91c01ldGhvZERl
bGVnYXRlNQA8TWFpbj5iX18xAENTJDw+OV9fQ2FjaGVkQW5vbnltb3VzTWV0aG9kRGVsZWdhdGU2
AFR1cGxlYDQAPE1haW4+Yl9fMgBhAENTJDw+OV9fQ2FjaGVkQW5vbnltb3VzTWV0aG9kRGVsZWdh
dGU3ADxNYWluPmJfXzMAaXRlbQBDUyQ8PjlfX0NhY2hlZEFub255bW91c01ldGhvZERlbGVnYXRl
OAA8TWFpbj5iX180AENTJDw+OV9fQ2FjaGVkQW5vbnltb3VzTWV0aG9kRGVsZWdhdGU5AGdldF9J
dGVtMwBnZXRfSXRlbTQAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMA
Z2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAU3lzdGVtLkNvcmUAU3lz
dGVtLkxpbnEuRXhwcmVzc2lvbnMARXhwcmVzc2lvbgBQYXJhbWV0ZXJFeHByZXNzaW9uAFBhcmFt
ZXRlcgBGaWVsZEluZm8AUnVudGltZUZpZWxkSGFuZGxlAEdldEZpZWxkRnJvbUhhbmRsZQBNZW1i
ZXJFeHByZXNzaW9uAEZpZWxkAEV4cHJlc3Npb25gMQBMYW1iZGEAU3lzdGVtLkxpbnEAUXVlcnlh
YmxlAElPcmRlcmVkUXVlcnlhYmxlYDEASVF1ZXJ5YWJsZWAxAE9yZGVyQnkATWV0aG9kQmFzZQBS
dW50aW1lTWV0aG9kSGFuZGxlAEdldE1ldGhvZEZyb21IYW5kbGUAQ29uc3RydWN0b3JJbmZvAE1l
dGhvZEluZm8ATmV3RXhwcmVzc2lvbgBJRW51bWVyYWJsZWAxAE1lbWJlckluZm8ATmV3AFNlbGVj
dABFbnVtZXJhYmxlAERpY3Rpb25hcnlgMgBUb0RpY3Rpb25hcnkAc2V0X1ZhbHVlAElFbnVtZXJh
dG9yYDEAR2V0RW51bWVyYXRvcgBnZXRfQ3VycmVudABUdXBsZQBDcmVhdGUAQWRkAFN5c3RlbS5D
b2xsZWN0aW9ucwBJRW51bWVyYXRvcgBNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAERpc3Rp
bmN0AEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBTdHJpbmcARm9ybWF0AHNldF9UYXNrUmVzdWx0AFN5
c3RlbS5EYXRhAFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNvbm5lY3Rpb24AZ2V0X0Nvbm5lY3Rpb24A
Q2xvc2UAU1RfNGZkYmFmM2NlOWQ4NGFmZWIxNjBiNDBiODY3ZWE1MjIuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAAAAcVMAVABfADQAZgBkAGIAYQBmADMAYwBlADkAZAA4ADQAYQBmAGUA
YgAxADYAMABiADQAMABiADgANgA3AGUAYQA1ADIAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAH3sAIABGAGkAbABlAFAAcgBlAGYAaQB4ACAAPQAgAAAhLAAgAEkA
bgBkAGUAeABQAHIAZQBmAGkAeAAgAD0AIAAAEywAIABQAGEAdABoACAAPQAgAAAhLAAgAEkAbgB0
AGUAcgBGAG8AbABkAGUAcgAgAD0AIAAABSAAfQAAIXsAIABJAG4AdABlAHIARgBvAGwAZABlAHIA
IAA9ACAAACF7ACAARABlAHMAdABpAG4AYQB0AGkAbwBuACAAPQAgAAAXLAAgAFMAbwB1AHIAYwBl
ACAAPQAgAAA3JABQAGEAYwBrAGEAZwBlADoAOgBjAG8AbgBuAGUAYwB0AGkAbwBuAF8AcwB0AHIA
aQBuAGcAAANmAAADcQAANVUAcwBlAHIAOgA6AGkAbgBkAGUAeABlAHMAXwBkAGUAcwB0AGkAbgBh
AHQAaQBvAG4AcwAAS1UAcwBlAHIAOgA6AHAAcgBlAGYAaQB4AGUAcwBfAGEAbgBkAF8AZABlAHMA
dABpAG4AYQB0AGkAbwBuAHMAXwBwAGEAdABoAHMAAElVAHMAZQByADoAOgBwAGEAcgBhAG0AcwBf
AGYAbwByAF8AbwBuAGIAYQBzAGUAXwBkAGUAcwB0AGkAbgBhAHQAaQBvAG4AcwAAIVMAeQBzAHQA
ZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAC9VAHMAZQByADoAOgBlAHgAYwBlAHAAdABpAG8AbgBf
AG0AZQBzAHMAYQBnAGUAADlUAGEAcwBrACAAOgAgAFsAewAwAH0AXQA7ACAATQBlAHMAcwBhAGcA
ZQA6ACAAWwB7ADEAfQBdAAAAAADLnsrfQHFeTpnn1TmOcq/MAAi3elxWGTTgiQiJhF3NgIDMkQYg
AwEODg4DIAAOBCABAQ4CBg4DKAAOAgYIBwYVEhkBEhADIAABAwYSDAcGFRIdARIQBwYVEh0BEgwD
BhIhAwYSJQQAABIhBAAAEiUFAAEBEiUECAASIQQIABIlAwYSHAQAABIcBAgAEhwDBhEkBAAAAAAE
AQAAAAQgAQEIKQEAAQBUDgROYW1lHU1lZGhvay5NYWlsaW5nX0RhdGFfRmlsZV9EZXN0FAEAAQBU
AgxJc1ByaW1hcnlLZXkBFgEAAQBUDghPdGhlcktleQZEZXN0SUQpAQABAFQOBE5hbWUdTWVkaG9r
Lk1haWxpbmdfRGF0YV9GaWxlX1R5cGUlAQACAFQOB1RoaXNLZXkGRGVzdElEVAIMSXNGb3JlaWdu
S2V5AQYAARJtEXEEIAASdQYgAgEOEnUEBwESIQUgAQERfQgBAAIAAAAAAAMAAAELIAQBEwATARMC
EwMDBhMABCAAEwADBhMBBCAAEwEDBhMCBCAAEwIDBhMDBCAAEwMEIAECHAMgAAgEKAATAAQoABMB
BCgAEwIEKAATAwYgAQERgIkIAQAAAAAAAAAMFRIoBBMAEwETAhMDBiABEoCRDgITAAYgARKAkRwC
EwECEwICEwMFBwESgJEHFRKAlQETAAkAABUSgJUBEwAHIAICEwATAAcVEoCVARMBBxUSgJUBEwIH
FRKAlQETAw4HARUSKAQTABMBEwITAwUgAQgTAAMHAQgHIAIBEwATAQgVEiwCEwATAQoHARUSLAIT
ABMBCBUSMAITABMBCgcBFRIwAhMAEwEJAAEOFRIsAg4ODQYVEoCZAhUSLAIODg4RAAEVEjACDg4V
EoCdBA4ODg4VBhUSgJkCFRKAnQQODg4OFRIwAg4OCQABDhUSMAIODg0GFRKAmQIVEjACDg4OBhUS
LAIODgkVEoCdBA4ODg4GFRIwAg4OBSAAEoChBSAAEoClBiABEoCpHAMgABwIAAISgLESbQ4IAAES
gLURgLkLAAISgL0SgK0SgLUREAECFRKAwQEeABKArR0SgLEKCgEVEoCZAhIQDh8QAgIVEoDJAR4A
FRKAzQEeABUSgMEBFRKAmQIeAB4BBQoCEhAOCBUSKAQODg4OCgACEoDREYDVEXEUAAMSgOESgNkV
EoDlARKArR0SgOkRCgEVEoCZAhIQFRIoBA4ODg4fEAICFRKAzQEeARUSgM0BHgAVEoDBARUSgJkC
HgAeAQwKAhIQFRIoBA4ODg4PCgEVEoCZAhIMFRIsAg4OCgoCEgwVEiwCDg4MFRKAmQIVEiwCDg4O
BSACARwYJRADAxUSgPECHgEeAhUSgOUBHgAVEoCZAh4AHgEVEoCZAh4AHgIKCgMVEiwCDg4ODgQg
AQEcDRUSGQEVEoCdBA4ODg4NFRKA5QEVEigEDg4ODgkgABUSgPUBEwANFRKA9QEVEigEDg4ODhgQ
BAQVEoCdBB4AHgEeAh4DHgAeAR4CHgMGCgQODg4OBSABARMAAyAAAhQVEoCZAhUSgJ0EDg4ODhUS
MAIODhoQAgIVEoDlAR4BFRKA5QEeABUSgJkCHgAeAREKAhUSgJ0EDg4ODhUSMAIODhEQAQEVEoDl
AR4AFRKA5QEeAAgKARUSMAIODgwVEoCZAhUSMAIODg4KCgMVEjACDg4ODgYAAw4OHBwFIAASgQ1s
BxUSFAgOFRKAzQEVEigEDg4ODhUSgPECDg4VEhkBFRKAnQQODg4OFRIoBA4ODg4VEoDxAg4OEoEF
DhKAsR0SgLESgLEdEoCtHRKA3R0SgLESgLEdEoCtHRKA3R0SgLEVEoD1ARUSKAQODg4ORwEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZy
YW1ld29yayA0KAEAI1NUXzRmZGJhZjNjZTlkODRhZmViMTYwYjQwYjg2N2VhNTIyAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEAAABITgAAAAAAAAAAAABeTgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUE4AAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMAAAAA
AAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
ALJoIhgAAAEAsmgiGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAA
JAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA0AGYAZABiAGEAZgAz
AGMAZQA5AGQAOAA0AGEAZgBlAGIAMQA2ADAAYgA0ADAAYgA4ADYANwBlAGEANQAyADIAAABAAA8A
AQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAxADcAOAAuADIANgA4ADAAMgAA
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAyADgAMQBhADAAZABkADcA
YwBlADAAOAA0ADYAOAA0AGIAYwA1ADMAOABmAGQAYwBjADkAZQBlAGUAYQAzADAALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AFQAXwAyADgAMQBhADAAZABkADcAYwBlADAAOAA0ADYAOAA0AGIAYwA1ADMAOABmAGQAYwBjADkA
ZQBlAGUAYQAzADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBU
AF8ANABmAGQAYgBhAGYAMwBjAGUAOQBkADgANABhAGYAZQBiADEANgAwAGIANAAwAGIAOAA2ADcA
ZQBhADUAMgAyAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2
ADEANwA4AC4AMgA2ADgAMAAyAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADEANwA4AC4AMgA2ADgAMAAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAHA+AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index and Manifest Distribution\SCR - Send files to OnBase folders"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{E7DBCB76-8476-40BF-A9B1-D70B9CA2A334}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR - Send files to OnBase folders"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_1738e5f76222494a8868e7368ba1df2c"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::params_for_onbase_destinations,$Package::destination_onbase,$Package::path_to_buffers">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1738e5f76222494a8868e7368ba1df2c.Properties.Settings.get_Default():ST_1738e5f76222494a8868e7368ba1df2c.Properties.Sett" +
    "ings")]

namespace ST_1738e5f76222494a8868e7368ba1df2c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
#endregion

namespace ST_1738e5f76222494a8868e7368ba1df2c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string path_to_buffers = Dts.Variables["$Package::path_to_buffers"].Value.ToString();
            string destination_onbase = Dts.Variables["$Package::destination_onbase"].Value.ToString();
            Dictionary<string, string> distributions =
                (Dictionary<string, string>)Dts.Variables["User::params_for_onbase_destinations"].Value;

            foreach (KeyValuePair<string, string> item in distributions) 
            {
                string source = Path.Combine(path_to_buffers, item.Key);
                string destination = Path.Combine(destination_onbase, item.Value);
            }


			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_1738e5f76222494a8868e7368ba1df2c.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F38D67C7-A2DB-4760-BCC0-B97B35F2A5FA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1738e5f76222494a8868e7368ba1df2c</RootNamespace>
    <AssemblyName>ST_1738e5f76222494a8868e7368ba1df2c</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1738e5f76222494a8868e7368ba1df2c</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1738e5f76222494a8868e7368ba1df2c</msb:DisplayName>
		<msb:ProjectId>{CC1EC439-FAE1-4DB9-98B6-D8A536AF198E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1738e5f76222494a8868e7368ba1df2c.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1738e5f76222494a8868e7368ba1df2c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1738e5f76222494a8868e7368ba1df2c")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1738e5f76222494a8868e7368ba1df2c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1738e5f76222494a8868e7368ba1df2c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1738e5f76222494a8868e7368ba1df2c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1738e5f76222494a8868e7368ba1df2c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1738e5f76222494a8868e7368ba1df2c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_1738e5f76222494a8868e7368ba1df2c.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANk0P1gAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAATjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAAwAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
MAAAAAAAAEgAAAACAAUAUCIAALANAAABAAAAAAAAAJghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswAgC0AAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKAigWAAAKbxcAAApypwAAcG8YAAAKbxkAAApvGgAACgsCKBYAAApvFwAACnLhAABwbxgAAApv
GQAACnQBAAAbDAhvGwAAChMEKyQSBCgcAAAKDQYSAygdAAAKKB4AAAomBxIDKB8AAAooHgAACiYS
BCggAAAKLdPeDhIE/hYCAAAbbyEAAArcAigWAAAKFm8iAAAKKgEQAAACAGgAMZkADgAAAAAeAigj
AAAKKgAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA
EAQAACN+AAB8BAAARAYAACNTdHJpbmdzAAAAAMAKAAAsAQAAI1VTAOwLAAAQAAAAI0dVSUQAAAD8
CwAAtAEAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQMAAAD6JTMAFgAAAQAAACIAAAAFAAAABgAAAAkA
AAABAAAAIwAAAAIAAAAPAAAAAgAAAAIAAAADAAAABAAAAAMAAAABAAAABAAAAAEAAAABAAAAAAAK
AAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYA
mQJwAgYAtgJwAgYA1QJwAgYA7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNv
AwYA4APNAwYA/QO6AAYAAgS6AAYAJgRwAgoAUgQ8BAoAawQ8BAYAgARvAw4AogQUAQ4AxAQUARIA
HQX9BBIANQX9BAYAdQVaBXsAggUAAAYAmwVaBQYAyAW+BQYA3gW6AAAAAAABAAAAAAABAAEAAAAQ
ADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQACgARAH8B
EwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQIAAAAACDGLwBGwABAFggAAAAAJMIwgEf
AAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsA
AgCnIAAAAACRGJsEiQACALwgAAAAAIYAGgIbAAIAjCEAAAAAhhi8ARsAAgAAAAEANwI5ALwBWABB
ALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACBALwBWACJALwB
XQCRALwBGwCZALwBGwAJALwBGwChABQEYgChAC8EaQApALwBbgC5ALwBegDJALwBGwARALwBGwDR
ALwBGwAZANYEjQDZACcFkgDhAD4FlwDpAEcFnQAJAFEFoQAMAI0FrAAUAKoFvgAcALYF0gAJAc0F
1wAcAEcF3QAUANUF4gARAeoFGwDZAPIFXQAZALwBGwAIABQATgAIABgAUwApAJMAgAAuABsAbwEu
ACMAbwEuAGMAlQEuAAsA/gAuABMARgEuADMARgEuACsAbwEuADsAdQEuAEMAbwEuAFsAjAFDAGsA
UwBJAJMAgABhAJsAUwCDAKsAUwB1AOYAAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwAC
AAMABQABAAQABQACAAUABwClALcAygAEgAAAAQAAACIYDHMAAAAAAAB/AAAABAAAAAAAAAAAAAAA
AQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAAAAoA9QAAAAAACwAAAAAAAAAA
AAAACgDeBAAAAAAAAAAAAQAAAAEGAAAFAAQAAAAAPE1vZHVsZT4AU1RfMTczOGU1Zjc2MjIyNDk0
YTg4NjhlNzM2OGJhMWRmMmMuZGxsAFJlc291cmNlcwBTVF8xNzM4ZTVmNzYyMjI0OTRhODg2OGU3
MzY4YmExZGYyYy5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfMTczOGU1Zjc2MjIy
NDk0YTg4NjhlNzM2OGJhMWRmMmMAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0
AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRU
YXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVz
b3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZv
AHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFp
bgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5n
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0
ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRv
ckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlw
dE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFi
bGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmlj
AERpY3Rpb25hcnlgMgBFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IAS2V5VmFsdWVQYWlyYDIAZ2V0
X0N1cnJlbnQAZ2V0X0tleQBTeXN0ZW0uSU8AUGF0aABDb21iaW5lAE1vdmVOZXh0AElEaXNwb3Nh
YmxlAERpc3Bvc2UAc2V0X1Rhc2tSZXN1bHQAU1RfMTczOGU1Zjc2MjIyNDk0YTg4NjhlNzM2OGJh
MWRmMmMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAABxUwBUAF8AMQA3ADMAOABlADUA
ZgA3ADYAMgAyADIANAA5ADQAYQA4ADgANgA4AGUANwAzADYAOABiAGEAMQBkAGYAMgBjAC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAzJABQAGEAYwBrAGEAZwBlADoA
OgBwAGEAdABoAF8AdABvAF8AYgB1AGYAZgBlAHIAcwAAOSQAUABhAGMAawBhAGcAZQA6ADoAZABl
AHMAdABpAG4AYQB0AGkAbwBuAF8AbwBuAGIAYQBzAGUAAElVAHMAZQByADoAOgBwAGEAcgBhAG0A
cwBfAGYAbwByAF8AbwBuAGIAYQBzAGUAXwBkAGUAcwB0AGkAbgBhAHQAaQBvAG4AcwAAANun3WBa
KK9GjzoR53fEEuQACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQES
GQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJR
EVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQgABJxBSABEnUcAyAA
HAMgAA4GFRJ5Ag4OCiAAFRF9AhMAEwEGFRF9Ag4OCyAAFRGAgQITABMBBxURgIECDg4EIAATAAUA
Ag4ODgQgABMBAyAAAhcHBQ4OFRJ5Ag4OFRGAgQIODhURfQIODkcBABouTkVURnJhbWV3b3JrLFZl
cnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNT
VF8xNzM4ZTVmNzYyMjI0OTRhODg2OGU3MzY4YmExZGYyYwAABQEAAAAAFgEAEUNvcHlyaWdodCBA
ICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBKDAAAAAAAAAA
AAAAPjAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAxzIhgAAAEADHMiGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAxADcAMwA4AGUANQBmADcANgAyADIAMgA0ADkANABhADgAOAA2ADgAZQA3ADMANgA4AGIAYQAx
AGQAZgAyAGMAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAxADcA
OAAuADIAOQA0ADUAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAx
ADcAMwA4AGUANQBmADcANgAyADIAMgA0ADkANABhADgAOAA2ADgAZQA3ADMANgA4AGIAYQAxAGQA
ZgAyAGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwAxADcAMwA4AGUANQBmADcANgAyADIAMgA0ADkANABhADgAOAA2
ADgAZQA3ADMANgA4AGIAYQAxAGQAZgAyAGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8AMQA3ADMAOABlADUAZgA3ADYAMgAyADIANAA5ADQAYQA4ADgANgA4
AGUANwAzADYAOABiAGEAMQBkAGYAMgBjAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADEANwA4AC4AMgA5ADQANQAyAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADEANwA4AC4AMgA5ADQANQAyAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAFAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index and Manifest Distribution\SQL - Save exception"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0d29d833-2682-4190-ade4-fb5b5632a419}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - Save exception"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{09E17B76-7084-4197-B242-7B5084EAA0E1}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="INSERT INTO Medhok.Mailing_Data_Load_Exception&#xA;(ExecutionLogID, Description) VALUES (?, ?);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::execution_log_id"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::exception_message"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{60AC4A96-12EB-4474-9B79-B3334E8A9164}"
          DTS:From="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{07B2EDA1-9B4B-46AC-A308-12FD549133AE}"
          DTS:From="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SEQC - Index and Manifest Distribution\SQL - Save exception"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{D30FAE90-EDAD-4D81-81DC-4D7587BE8DDB}"
          DTS:From="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{09B338DE-4C62-4384-918E-1D189466D785}"
          DTS:From="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\SEQC - Index and Manifest Distribution\SCR - Send files to OnBase folders" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{71071826-124B-4188-9951-D204BB268186}"
      DTS:EventID="384404592"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{CB629312-3C1C-48C6-B33E-DA97B6A38977}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="244.8,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders\SCR - Copy manifest to destination"
          TopLeft="24.0054458145497,38.5882400987883" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders\SQL - Save exception"
          TopLeft="53.6761937199806,128.219615636428" />
        <EdgeLayout
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders.PrecedenceConstraints[Constraint]"
          TopLeft="145.240819767265,80.1882400987883">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.0313755376394"
              Start="0,0"
              End="0,40.5313755376394">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5313755376394" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.24134765625,15.3911760500697,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="288.8,224.8"
          Size="288.8,268"
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders"
          TopLeft="59.6639482155483,388.780399617688" />
        <NodeLayout
          Size="246.4,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SCR - Copy index file to destination"
          TopLeft="20.5877583272949,25.1047648566109" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SQL - Save exception"
          TopLeft="50.171431782781,108.961349072836" />
        <EdgeLayout
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder.PrecedenceConstraints[Constraint]"
          TopLeft="142.179595055038,66.7047648566109">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.2565842162251"
              Start="0,0"
              End="0,34.7565842162251">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.7565842162251" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.24134765625,12.5037803893625,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="283.2,205.6"
          Size="283.2,248.8"
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder"
          TopLeft="62.7755125674144,100.363027183431" />
        <NodeLayout
          Size="276.8,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths"
          TopLeft="58.3714311867343,23.5058846909283" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\SQL - Save exception"
          TopLeft="421.959192153664,27.3098049184561" />
        <EdgeLayout
          Id="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint]"
          TopLeft="200.573471877074,65.1058846909283">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.2571424925027"
              Start="0,0"
              End="0,27.7571424925027">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.7571424925027" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint 1]"
          TopLeft="335.171431186734,46.2078448046922">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="86.78776096693,0"
              Start="0,0"
              End="79.28776096693,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="79.28776096693,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="24.402532827215,5,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint 2]"
          TopLeft="204.219730391481,349.163027183431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.6173724342568"
              Start="0,0"
              End="0,32.1173724342568">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.1173724342568" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="241.6,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\SCR - Send files to OnBase folders"
          TopLeft="414.47619882895,506.054908953296" />
        <EdgeLayout
          Id="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint 3]"
          TopLeft="348.463948215548,524.817654285492">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="66.0122506134019,0"
              Start="0,0"
              End="58.5122506134019,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="58.5122506134019,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="756,712"
          Size="756,755.2"
          Id="Package\SEQC - Index and Manifest Distribution"
          TopLeft="76.2244910940136,27.6386558498061" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>