<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/22/2016 1:48:22 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="WINDOWSDEV"
  DTS:CreatorName="WINDOWSDEV\Ernesto Rodriguez"
  DTS:DTSID="{9110114C-041F-4D70-9B95-F51F10DA5801}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.3436.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ETL_Mailing_Data_Distributor"
  DTS:PackageType="5"
  DTS:VersionBuild="19"
  DTS:VersionGUID="{A6947302-D3DB-45C4-A011-044B90C302BD}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E540869F-0A94-4FF7-B68B-57B7BC44272C}"
      DTS:ObjectName="connection_string">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=MSSQLSERVER; User ID=sa; Password=sa; Initial Catalog=testdb; Connection Timeout=60;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{CEC3D843-6BCE-4D79-B679-F834E5A275A3}"
      DTS:ObjectName="execution_log_id">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">9999336</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{00B6F9C7-D826-42AD-8208-DBB6BF6C14C4}"
      DTS:ObjectName="source_index_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Index</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{923E130D-AF64-45BB-9214-204801F2173C}"
      DTS:ObjectName="source_manifest_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_2</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{978C5BD6-AB5F-4127-8232-DA290A46A802}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="exception_message">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{424B6430-2D5C-48CE-8F13-297886591EFE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="index_prefixes">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D2E3A244-C05D-4D98-BFBC-64C591216C69}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="prefixes_and_destinations_paths">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SEQC - Index and Manifest Distribution"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{11C04981-F986-4A32-8326-5B26D73DB6A2}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQC - Index and Manifest Distribution">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC -"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{3DD08CFE-EE5D-4B05-A1E8-47ED3C6F0784}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="FELC -">
          <DTS:Variables />
          <DTS:Executables />
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{5da1a9f8-36d0-488b-8f45-af65a462a367}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR - Get prefixes and destination paths"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{39d477d6-a137-4419-a401-a81c6a3d1b4c}"
              DTS:EventID="292767228"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{afa205fa-879a-4e17-85ee-e85c5071bc3f}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_281a0dd7ce084684bc538fdcc9eeea30"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,$Package::connection_string"
              ReadWriteVariables="User::exception_message,User::index_prefixes,User::prefixes_and_destinations_paths">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Argument.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    public sealed class Argument
    {
        public Argument(string FilePrefix, string IndexPrefix, string Path)
        {
            this.FilePrefix = FilePrefix;
            this.IndexPrefix = IndexPrefix;
            this.Path = Path;
        }

        public string FilePrefix { get; set; }
        public string IndexPrefix { get; set; }
        public string Path { get; set; }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Settings.get_Default():ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Sett" +
    "ings")]

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="MedhokDataContext.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    public sealed class MedhokDataContext : DataContext
    {
        public Table<FileType> FileTypes;
        public Table<FileDestination> FileDestinations;
        public MedhokDataContext(string connection) : base(connection) { }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="FileType.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq.Mapping;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    [Table(Name="Medhok.Mailing_Data_File_Type")]
    public sealed class FileType
    {
        [Column(IsPrimaryKey=true)]
        public int ID;

        [Column]
        public string FileTypePrefix;

        [Column]
        public int DestID;

        [Association(ThisKey = "DestID", IsForeignKey = true)]
        public FileDestination Destination;

    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Linq;
using System.Collections.Generic;
#endregion

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called to get the arguments to create 
        /// and distribute the index files along with their 
        /// corresponding data mailing manifests.
        /// </summary>
		public void Main()
		{
            MedhokDataContext db = null;
            int result = (int)ScriptResults.Success;

            try
            {
                string cnn_str = Dts.Variables["$Package::connection_string"].Value.ToString();             //Get the connection string      
                db = new MedhokDataContext(cnn_str);                                                        //Use medhok context previously defined and connect to it
                var query = from f in db.FileTypes                                                          //Get index prefix, manifest destination paths paths
                            orderby f.FileTypePrefix
                            select new
                            {
                                FilePrefix = f.FileTypePrefix,
                                IndexPrefix = f.Destination.IndexFilePrefix,
                                Path = f.Destination.DestPath,
                                InterFolder = f.Destination.IntermidiateFolder
                            };
                

                List<string> unique_prefixes = (    from q in query                                         //Get a list of unique index-prefixes from the previous set
                                                    orderby q.FilePrefix
                                                    select q.IndexPrefix
                                                ).Distinct().ToList();
                Dts.Variables["User::index_prefixes"].Value = unique_prefixes;

                List<Tuple<string, string, string, string>> arguments = 
                    new List<Tuple<string, string, string, string>>();                                      //Create a list containing tuples to store arguments from previous results
                foreach (var row in query)                                                                   
                {
                    arguments.Add( Tuple.Create( row.FilePrefix, row.IndexPrefix, 
                        row.Path, row.InterFolder ) );                                                      //Store new arguments tuple in the list
                }
                Dts.Variables["User::prefixes_and_destinations_paths"].Value = arguments;
            }
            catch(Exception e)
            {
                string task_name = Dts.Variables["System::TaskName"].Value.ToString();
                Dts.Variables["User::exception_message"].Value =
                    string.Format("Task : [{0}]; Message: [{1}]", task_name, e.Message);
                result = (int)ScriptResults.Failure;
            }
            finally
            {
                Dts.TaskResult = result;
                db.Connection.Close();
            }
			
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_281a0dd7ce084684bc538fdcc9eeea30.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6A4C00A5-8759-4757-A987-979F1E4D7BB6}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_4fdbaf3ce9d84afeb160b40b867ea522</RootNamespace><AssemblyName>ST_281a0dd7ce084684bc538fdcc9eeea30</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Data.Linq" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Argument.cs" /><Compile Include="FileDestination.cs" /><Compile Include="FileType.cs" /><Compile Include="MedhokDataContext.cs" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="FileDestination.cs"
                Encoding="UTF8"><![CDATA[using System.Collections.Generic;
using System.Data.Linq.Mapping;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    [Table(Name="Medhok.Mailing_Data_File_Dest")]
    public sealed class FileDestination
    {
        [Column(IsPrimaryKey=true)]
        public int ID;

        [Column]
        public string DestPath;

        [Column]
        public string IndexFilePrefix;

        [Column]
        public string IntermidiateFolder;

        [Association(OtherKey = "DestID")]
        public List<FileType> FileTypes;
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_4fdbaf3ce9d84afeb160b40b867ea522</msb:CodeName>
		<msb:DisplayName>ST_4fdbaf3ce9d84afeb160b40b867ea522</msb:DisplayName>
		<msb:ProjectId>{F3366BAD-25B7-4DDC-BCF9-D1AE339070CC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_281a0dd7ce084684bc538fdcc9eeea30.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="MedhokDataContext.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="FileType.cs"/>
		<msb:File Include="FileDestination.cs"/>
		<msb:File Include="Argument.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4fdbaf3ce9d84afeb160b40b867ea522")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4fdbaf3ce9d84afeb160b40b867ea522")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_281a0dd7ce084684bc538fdcc9eeea30.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIGqNFgAAAAAAAAAAOAAAiELAQsAACYAAAAIAAAAAAAArkQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFREAABXAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtCQAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
RAAAAAAAAEgAAAACAAUAcCcAAOQcAAABAAAAAAAAALgmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHICKA0AAAoCAygDAAAGAgQoBQAABgIFKAcAAAYqHgJ7AQAA
BCoiAgN9AQAABCoeAnsCAAAEKiICA30CAAAEKh4CewMAAAQqIgIDfQMAAAQqHgIoDQAACioeAigN
AAAKKiICAygSAAAKKh4CKA0AAAoqAAAAEzACAC0AAAABAAARfg8AAAQtIHIBAABw0AYAAAIoFAAA
Cm8VAAAKcxYAAAoKBoAPAAAEfg8AAAQqGn4QAAAEKh4CgBAAAAQqGn4RAAAEKi5zEAAABoARAAAE
Kh4CKBgAAAoqkgIoDQAACgIDfRwAAAoCBH0dAAAKAgV9HgAACgIOBH0fAAAKKh4CexwAAAoqHgJ7
HQAACioeAnseAAAKKh4Cex8AAAoqEzACAJEAAAACAAARcyAAAAoKBnJzAABwbyEAAAomBgJ7HAAA
CowCAAAbbyIAAAomBnKTAABwbyEAAAomBgJ7HQAACowDAAAbbyIAAAomBnK1AABwbyEAAAomBgJ7
HgAACowEAAAbbyIAAAomBnLJAABwbyEAAAomBgJ7HwAACowFAAAbbyIAAAomBnLrAABwbyEAAAom
Bm8jAAAKKgAAABMwAwBrAAAAAwAAEQN1AQAAGwoGLF8oJAAACgJ7HAAACgZ7HAAACm8lAAAKLEco
JgAACgJ7HQAACgZ7HQAACm8nAAAKLC8oKAAACgJ7HgAACgZ7HgAACm8pAAAKLBcoKgAACgJ7HwAA
CgZ7HwAACm8rAAAKKhYqABMwAwBsAAAABAAAESCUGMgsCiApVVWlBlooJAAACgJ7HAAACm8sAAAK
WAogKVVVpQZaKCYAAAoCex0AAApvLQAAClgKIClVVaUGWigoAAAKAnseAAAKby4AAApYCiApVVWl
BlooKgAACgJ7HwAACm8vAAAKWAoGKhswBwBWAwAABQAAERQKFgsCKDAAAApvMQAACnLxAABwbzIA
AApvMwAACm8jAAAKDAhzCgAABgoGew0AAATQBAAAAigUAAAKcikBAHAoNAAAChMJEQnQCgAABCg1
AAAKKDYAAAoXjSoAAAETChEKFhEJohEKKAEAACsoAgAAK9AEAAACKBQAAApyKQEAcCg0AAAKEwvQ
OQAACtAKAAAbKDoAAAp0NQAAARqNKQAAARMMEQwWEQvQCgAABCg1AAAKKDYAAAqiEQwXEQvQDAAA
BCg1AAAKKDYAAArQBgAABCg1AAAKKDYAAAqiEQwYEQvQDAAABCg1AAAKKDYAAArQBQAABCg1AAAK
KDYAAAqiEQwZEQvQDAAABCg1AAAKKDYAAArQBwAABCg1AAAKKDYAAAqiEQwajTYAAAETDRENFtA7
AAAK0AoAABsoOgAACnQ2AAABohENF9A8AAAK0AoAABsoOgAACnQ2AAABohENGNA9AAAK0AoAABso
OgAACnQ2AAABohENGdA+AAAK0AoAABsoOgAACnQ2AAABohENKD8AAAoXjSoAAAETDhEOFhELohEO
KAMAACsoBAAAKw0J0AoAABsoFAAACnItAQBwKDQAAAoTDxEP0DsAAArQCgAAGyg6AAAKdDYAAAEo
QQAACheNKgAAARMQERAWEQ+iERAoBQAAKygGAAAr0AoAABsoFAAACnItAQBwKDQAAAoTERER0DwA
AArQCgAAGyg6AAAKdDYAAAEoQQAACheNKgAAARMSERIWERGiERIoBQAAKygHAAArKAgAACsoCQAA
KxMEAigwAAAKbzEAAApyMQEAcG8yAAAKEQRvRAAACnNFAAAKEwUJb0YAAAoTEysxERNvRwAAChMG
EQURBm87AAAKEQZvPAAAChEGbz0AAAoRBm8+AAAKKAoAACtvSQAAChETb0oAAAotxt4MERMsBxET
b0sAAArcAigwAAAKbzEAAApyWwEAcG8yAAAKEQVvRAAACt5UEwcCKDAAAApvMQAACnKnAQBwbzIA
AApvMwAACm8jAAAKEwgCKDAAAApvMQAACnLJAQBwbzIAAApy+QEAcBEIEQdvTAAACihNAAAKb0QA
AAoXC94A3hgCKDAAAAoHb04AAAoGb08AAApvUAAACtwqAABBTAAAAgAAAH8CAAA+AAAAvQIAAAwA
AAAAAAAAAAAAAAQAAADjAgAA5wIAAFQAAABAAAABAgAAAAQAAAA5AwAAPQMAABgAAAAAAAAAHgIo
UQAACioAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
AJwJAAAjfgAACAoAAKgLAAAjU3RyaW5ncwAAAACwFQAANAIAACNVUwDkFwAAEAAAACNHVUlEAAAA
9BcAAPAEAAAjQmxvYgAAAAAAAAACAAABVx2iCQkPAAAA+iUzABYAAAEAAABCAAAACgAAABgAAAAb
AAAADQAAAFEAAAACAAAALAAAAAUAAAAEAAAACgAAAA4AAAANAAAAAQAAAAcAAAABAAAAAQAAAAQA
AAAKAAAAAAAKAAEAAAAAAAYA9QDuAAoADQH8AA4ALgEZARIAjgFlAQYAqgHuAAYAugKfAgoA7QL8
AAYAFwMGAwYASAMzAwYABATqAwYALwQdBAYARgQdBAYAYwQdBAYAggQdBAYAmwQdBAYAtAQdBAYA
zwQdBAYA6gQdBAYAAwUdBAYAPAUcBQYAXAUcBQYAngUcBQoA0gW5BQoA4QW5BQoA8QW5BQYAGQYG
BgYANgbuAAYAOwbuAAYAXwYdBA4AiwZ1Bg4ApAZ1BhIAwAZlAQYAzAcGBgYA5wcGBgYA/gcGBgYA
IggWCAYANwifAhIASghlARYAowiDCBYAuwiDCBoA+wjjCBoABgnjCAYAJAkdBAYALgnuABoAVAnj
CBoAawnjCAYAfwnuABoAkgmGCRoAnAmGCRoAsAmGCQYAxQkdBAYA0AnuAAYA+AkdBAYACAodBBoA
EwrjCAYAIQqfAgYALwodBBoAVwqGCQYAcwruAAYAewqfAgYAowruAAYAxwq0CgYA3AruAAYA8Aru
AAYABgvuAB4AQgsvCwAAAAABAAAAAAABAAEAAQEQADIAOwAFAAEAAQABARAAXwA7AAUABAAIAAEB
EABvADsABQAJAAkAAQEQAHgAOwAJAA0ACgAAABAAigCUAAUADwALAAABEADDAJQADQARAA8AAQAQ
AMwAOwARABIAEgADAQAA1wAAABUAEgAUAAABEADiBgAABQAVABQAAQAFAiMAAQAhAiMAAQA+AiMA
BgBwAioABgBzAiMABgB8AiMABgCMAiMABgDBAi0ABgBwAioABgDLAiMABgDaAioABgDhAjkABgDB
Aj0ABgD1AkUAEQAnA00AEQBUA1EAEQCYA28ABgbBAyoAVoDJA30AVoDRA30AIQBEB20BIQBZB3YB
IQBvB38BIQB+B4gBUCAAAAAAhhivARMAAQBtIAAAAACGCLUBGgAEAHUgAAAAAIYIxAEeAAQAfiAA
AAAAhgjTARoABQCGIAAAAACGCOMBHgAFAI8gAAAAAIYI8wEaAAYAlyAAAAAAhgj8AR4ABgCgIAAA
AACGGK8BNQAHAKggAAAAAIYYrwE1AAcAsCAAAAAAhhivAR4ABwC5IAAAAACDGK8BNQAIAMQgAAAA
AJMIZANVAAgA/SAAAAAAkwh4A1oACAAEIQAAAACTCIQDXwAIAAwhAAAAAJYIqANzAAkAHyEAAAAA
hhivATUACQATIQAAAACRGLkGXQEJAPwiAAAAAIYAvAM1AAkArCYAAAAAhhivATUACQAnIQAAAACG
GK8BYQEJAEwhAAAAAIYItQFxAQ0AVCEAAAAAhgjTAXoBDQBcIQAAAACGCPMBgwENAGQhAAAAAIYI
lAeMAQ0AbCEAAAAAxgCkBxoADQAMIgAAAADGAK0HkQENAIQiAAAAAMYAtAeWAQ4AAAABAFQCAAAC
AF8CAAADAGsCAAABANkDAAABANkDAAABANkDAAABAN8DAAABANkDAAABAFQCAAACAF8CAAADAGsC
AAAEAMAHAAABANkDUQCvAR4AWQCvAR4AYQCvAR4AaQCvAR4AcQCvAR4AeQCvAR4AgQCvAR4AiQCv
AR4AkQCvAR4AmQCvAR4AoQCvAYsAqQCvATUACQCvATUAsQCvATUAuQCvATUAwQCvATUAyQCvATUA
EQCvAR4A0QCvATUA2QBNBjYB2QBoBj0BQQCvAUIB8QCvAU4BGQCvATUAAQGvATUACQGvAa4BGQGv
ATUADABEB20BDABZB3YBDABvB38BDAB+B4gBIQGvATUAIQEwCMsBIQEwCNUBCQCkBxoANACoA/MB
NACtB/0BPACoA/MBPACtB/0BRACoA/MBRACtB/0BTACoA/MBTACtB/0BNAC0BywCPAC0BywCRAC0
BywCTAC0BywCIQBcCDYCMQGtCDwCOQHECEICQQHNCEkCSQEaCU0CWQFBCVYCSQFlCV8CSQF4CWsC
gQG9CYgCVACvAWEBmQHkCbcCVAC1AXEBVADTAXoBVADzAYMBVACUB4wBSQE6CsICgQE+CukCSQFF
ChYDgQFOCj8D0QFiClUDQQFpCmYDXACvATUAZACJCocDbACXCnEB6QGpCp8DXACwCr8D8QHTCsUD
+QHoCjUAAQL6ChoACQINC8kDMQEUC4sAEQBPC9ADEQJeCzUAIQCvATUACABMAIEACABQAIYAIQBz
AIYALgBbAMcELgBjANAELgALADkELgATAIEELgAbAKoELgAjAKoELgArAKoELgAzAIEELgA7ALAE
LgBDAKoEQABzAIYAQQBzAIYAYABzAIYAYQBzAIYAYwB7AJAAgABzAIYAgQCDALoAgwB7AOYAiQC7
AFQBoABzAIYAoQCDAIYAqQC7AFQBwABzAIYAwQCDAIYAwwCbAIYA4ABzAIYA4QCDAIYAAQGLAM8A
AwHLAIYAIQGDALoAQQGDAIYAQwFzAIYAYQGDAIYAgQGLABABIQJzAIYAgALbAIYAoQLTALUBwQLT
ALUB4QLTALUBAQPTALUBIAPbAIYAQAPbAIYAYAPbAIYASQHlAR0CMgLWAwIAAQAGAAQABwAGAAoA
BwAAAFQCJgAAAF8CJgAAAGsCJgAAABcDZQAAAJADagAAALQDeAAAAFQCmgEAAF8CnwEAAGsCpAEA
AMAHqQECAAIAAwABAAMAAwACAAQABQABAAUABQACAAYABwABAAcABwACAAwACQACAA0ACwABAA4A
CwACAA8ADQACABUADwACABYAEQACABcAEwACABgAFQC+AdIB3AHfAeIB6wEFAg0CFQKuAmsDeQOR
AwSAAAABAAAAGhjgcwAAAAAAAHoFAAAEAAAAAAAAAAAAAAABAOUAAAAAAAQAAAAAAAAAAAAAAAEA
/AAAAAAABAAAAAAAAAAAAAAAAQDuAAAAAAALAAAAAAAAAAAAAAAKAEYBAAAAAAsAAAAAAAAAAAAA
AAoAZAgAAAAABAAAAAAAAAAAAAAAAQDXCAAAAAAEAAAAAAAAAAAAAAABACMLAAAAAAAAAAABAAAA
ZAsAAAkACAAAAAAAFAD4BgEAAAAUAAwHAgAAABQAIQcDAAAAFAAvB28AfQJxAKgCbwDXAoEACQNv
ACIDcQAzA4EAMwOFAFEDhwBRA5EAuAMAAAA8TW9kdWxlPgBTVF8yODFhMGRkN2NlMDg0Njg0YmM1
MzhmZGNjOWVlZWEzMC5kbGwAQXJndW1lbnQAU1RfNGZkYmFmM2NlOWQ4NGFmZWIxNjBiNDBiODY3
ZWE1MjIARmlsZURlc3RpbmF0aW9uAEZpbGVUeXBlAE1lZGhva0RhdGFDb250ZXh0AFJlc291cmNl
cwBTVF80ZmRiYWYzY2U5ZDg0YWZlYjE2MGI0MGI4NjdlYTUyMi5Qcm9wZXJ0aWVzAFNldHRpbmdz
AFNjcmlwdE1haW4AU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5E
YXRhLkxpbnEARGF0YUNvbnRleHQAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0A
LmN0b3IAZ2V0X0ZpbGVQcmVmaXgAc2V0X0ZpbGVQcmVmaXgAZ2V0X0luZGV4UHJlZml4AHNldF9J
bmRleFByZWZpeABnZXRfUGF0aABzZXRfUGF0aAA8RmlsZVByZWZpeD5rX19CYWNraW5nRmllbGQA
PEluZGV4UHJlZml4PmtfX0JhY2tpbmdGaWVsZAA8UGF0aD5rX19CYWNraW5nRmllbGQARmlsZVBy
ZWZpeABJbmRleFByZWZpeABQYXRoAElEAERlc3RQYXRoAEluZGV4RmlsZVByZWZpeABJbnRlcm1p
ZGlhdGVGb2xkZXIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMATGlzdGAxAEZpbGVUeXBlcwBG
aWxlVHlwZVByZWZpeABEZXN0SUQARGVzdGluYXRpb24AVGFibGVgMQBGaWxlRGVzdGluYXRpb25z
AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9i
YWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZh
dWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBjb25uZWN0aW9u
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3Rl
bS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNz
ZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29t
cGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0
ZQBTVF8yODFhMGRkN2NlMDg0Njg0YmM1MzhmZGNjOWVlZWEzMABDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQBTeXN0ZW0uRGF0YS5MaW5xLk1hcHBpbmcAVGFibGVBdHRyaWJ1dGUAQ29sdW1uQXR0
cmlidXRlAEFzc29jaWF0aW9uQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUALmNjdG9yAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQA8PmZfX0Fub255bW91c1R5cGUwYDQAPEZpbGVQcmVmaXg+al9f
VFBhcgA8SW5kZXhQcmVmaXg+al9fVFBhcgA8UGF0aD5qX19UUGFyADxJbnRlckZvbGRlcj5qX19U
UGFyADxGaWxlUHJlZml4PmlfX0ZpZWxkADxJbmRleFByZWZpeD5pX19GaWVsZAA8UGF0aD5pX19G
aWVsZAA8SW50ZXJGb2xkZXI+aV9fRmllbGQAZ2V0X0ludGVyRm9sZGVyAFRvU3RyaW5nAEVxdWFs
cwBHZXRIYXNoQ29kZQBJbnRlckZvbGRlcgBEZWJ1Z2dlckJyb3dzYWJsZUF0dHJpYnV0ZQBEZWJ1
Z2dlckJyb3dzYWJsZVN0YXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAFN5c3RlbS5UZXh0AFN0
cmluZ0J1aWxkZXIAQXBwZW5kAEVxdWFsaXR5Q29tcGFyZXJgMQBTY3JpcHRPYmplY3RNb2RlbABn
ZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdl
dF9WYWx1ZQBTeXN0ZW0uQ29yZQBTeXN0ZW0uTGlucS5FeHByZXNzaW9ucwBFeHByZXNzaW9uAFBh
cmFtZXRlckV4cHJlc3Npb24AUGFyYW1ldGVyAEZpZWxkSW5mbwBSdW50aW1lRmllbGRIYW5kbGUA
R2V0RmllbGRGcm9tSGFuZGxlAE1lbWJlckV4cHJlc3Npb24ARmllbGQARXhwcmVzc2lvbmAxAExh
bWJkYQBGdW5jYDIAU3lzdGVtLkxpbnEAUXVlcnlhYmxlAElPcmRlcmVkUXVlcnlhYmxlYDEASVF1
ZXJ5YWJsZWAxAE9yZGVyQnkATWV0aG9kQmFzZQBSdW50aW1lTWV0aG9kSGFuZGxlAEdldE1ldGhv
ZEZyb21IYW5kbGUAQ29uc3RydWN0b3JJbmZvAE1ldGhvZEluZm8ATmV3RXhwcmVzc2lvbgBJRW51
bWVyYWJsZWAxAE1lbWJlckluZm8ATmV3AFNlbGVjdABQcm9wZXJ0eQBEaXN0aW5jdABFbnVtZXJh
YmxlAFRvTGlzdABzZXRfVmFsdWUAVHVwbGVgNABJRW51bWVyYXRvcmAxAEdldEVudW1lcmF0b3IA
Z2V0X0N1cnJlbnQAVHVwbGUAQ3JlYXRlAEFkZABTeXN0ZW0uQ29sbGVjdGlvbnMASUVudW1lcmF0
b3IATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBFeGNlcHRpb24AZ2V0X01lc3NhZ2UAU3Ry
aW5nAEZvcm1hdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5Db21tb24A
RGJDb25uZWN0aW9uAGdldF9Db25uZWN0aW9uAENsb3NlAFNUXzRmZGJhZjNjZTlkODRhZmViMTYw
YjQwYjg2N2VhNTIyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwA0AGYA
ZABiAGEAZgAzAGMAZQA5AGQAOAA0AGEAZgBlAGIAMQA2ADAAYgA0ADAAYgA4ADYANwBlAGEANQAy
ADIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAB97ACAARgBpAGwA
ZQBQAHIAZQBmAGkAeAAgAD0AIAAAISwAIABJAG4AZABlAHgAUAByAGUAZgBpAHgAIAA9ACAAABMs
ACAAUABhAHQAaAAgAD0AIAAAISwAIABJAG4AdABlAHIARgBvAGwAZABlAHIAIAA9ACAAAAUgAH0A
ADckAFAAYQBjAGsAYQBnAGUAOgA6AGMAbwBuAG4AZQBjAHQAaQBvAG4AXwBzAHQAcgBpAG4AZwAA
A2YAAANxAAApVQBzAGUAcgA6ADoAaQBuAGQAZQB4AF8AcAByAGUAZgBpAHgAZQBzAABLVQBzAGUA
cgA6ADoAcAByAGUAZgBpAHgAZQBzAF8AYQBuAGQAXwBkAGUAcwB0AGkAbgBhAHQAaQBvAG4AcwBf
AHAAYQB0AGgAcwAAIVMAeQBzAHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAC9VAHMAZQByADoA
OgBlAHgAYwBlAHAAdABpAG8AbgBfAG0AZQBzAHMAYQBnAGUAADlUAGEAcwBrACAAOgAgAFsAewAw
AH0AXQA7ACAATQBlAHMAcwBhAGcAZQA6ACAAWwB7ADEAfQBdAAAAInxDzCYm2USGLCSH7tQKCgAI
t3pcVhk04IkIiYRdzYCAzJEGIAMBDg4OAyAADgQgAQEOAgYOAygADgIGCAcGFRIZARIQAyAAAQMG
EgwHBhUSHQESEAcGFRIdARIMAwYSIQMGEiUEAAASIQQAABIlBQABARIlBAgAEiEECAASJQMGEhwE
AAASHAQIABIcAwYRJAQAAAAABAEAAAAEIAEBCCkBAAEAVA4ETmFtZR1NZWRob2suTWFpbGluZ19E
YXRhX0ZpbGVfRGVzdBQBAAEAVAIMSXNQcmltYXJ5S2V5ARYBAAEAVA4IT3RoZXJLZXkGRGVzdElE
KQEAAQBUDgROYW1lHU1lZGhvay5NYWlsaW5nX0RhdGFfRmlsZV9UeXBlJQEAAgBUDgdUaGlzS2V5
BkRlc3RJRFQCDElzRm9yZWlnbktleQEGAAESbRFxBCAAEnUGIAIBDhJ1BAcBEiEFIAEBEX0IAQAC
AAAAAAADAAABCyAEARMAEwETAhMDAwYTAAQgABMAAwYTAQQgABMBAwYTAgQgABMCAwYTAwQgABMD
BCABAhwDIAAIBCgAEwAEKAATAQQoABMCBCgAEwMGIAEBEYCJCAEAAAAAAAAADBUSKAQTABMBEwIT
AwYgARKAkQ4CEwAGIAESgJEcAhMBAhMCAhMDBQcBEoCRBxUSgJUBEwAJAAAVEoCVARMAByACAhMA
EwAHFRKAlQETAQcVEoCVARMCBxUSgJUBEwMOBwEVEigEEwATARMCEwMFIAEIEwADBwEIBSAAEoCZ
BSAAEoCdBiABEoChHAMgABwIAAISgKkSbQ4IAAESgK0RgLELAAISgLUSgKUSgK0REAECFRKAuQEe
ABKApR0SgKkKCgEVEoC9AhIQDh8QAgIVEoDFAR4AFRKAyQEeABUSgLkBFRKAvQIeAB4BBQoCEhAO
CBUSKAQODg4OCgACEoDNEYDREXEUAAMSgN0SgNUVEoDhARKApR0SgOURCgEVEoC9AhIQFRIoBA4O
Dg4fEAICFRKAyQEeARUSgMkBHgAVEoC5ARUSgL0CHgAeAQwKAhIQFRIoBA4ODg4LAAISgLUSgKUS
gNkQCgEVEoC9AhUSKAQODg4ODgsKAhUSKAQODg4ODhEQAQEVEoDJAR4AFRKAyQEeAAMKAQ4QEAEB
FRIZAR4AFRKA4QEeAAQgAQEcDRUSGQEVEoDtBA4ODg4NFRKA4QEVEigEDg4ODgkgABUSgPEBEwAN
FRKA8QEVEigEDg4ODhgQBAQVEoDtBB4AHgEeAh4DHgAeAR4CHgMGCgQODg4OBSABARMAAyAAAgYA
Aw4OHBwFIAASgQliBxQSFAgOFRKAyQEVEigEDg4ODhUSGQEOFRIZARUSgO0EDg4ODhUSKAQODg4O
EoEBDhKAqR0SgKkSgKkdEoClHRKA2R0SgKkSgKkdEoCpEoCpHRKAqRUSgPEBFRIoBA4ODg5HAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQg
RnJhbWV3b3JrIDQoAQAjU1RfNGZkYmFmM2NlOWQ4NGFmZWIxNjBiNDBiODY3ZWE1MjIAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQB8RAAAAAAAAAAAAACeRAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkEQAAAAAAAAA
AAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACw
AwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEA4HMaGAAAAQDgcxoYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
EAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAw
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADQAZgBkAGIA
YQBmADMAYwBlADkAZAA4ADQAYQBmAGUAYgAxADYAMABiADQAMABiADgANgA3AGUAYQA1ADIAMgAA
AEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADEANwAwAC4AMgA5ADYA
NgA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADIAOAAxAGEAMABk
AGQANwBjAGUAMAA4ADQANgA4ADQAYgBjADUAMwA4AGYAZABjAGMAOQBlAGUAZQBhADMAMAAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADIAOAAxAGEAMABkAGQANwBjAGUAMAA4ADQANgA4ADQAYgBjADUAMwA4AGYAZABj
AGMAOQBlAGUAZQBhADMAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwA0AGYAZABiAGEAZgAzAGMAZQA5AGQAOAA0AGEAZgBlAGIAMQA2ADAAYgA0ADAAYgA4
ADYANwBlAGEANQAyADIAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADYAMQA3ADAALgAyADkANgA2ADQAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADYAMQA3ADAALgAyADkANgA2ADQAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAsDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{AF38331C-F4B1-46C2-8DE9-0087FB7CA9AC}"
          DTS:From="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQC - Index and Manifest Distribution\FELC -" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="276.8,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths"
          TopLeft="58.3714311867343,23.5058846909283" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="204.8,55.2"
          Size="204.8,98.4"
          Id="Package\SEQC - Index and Manifest Distribution\FELC -"
          TopLeft="94.0857175092306,117.56470953948" />
        <EdgeLayout
          Id="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint]"
          TopLeft="196.628574347982,65.1058846909283">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.4588248485514"
              Start="0,0"
              End="0,44.9588248485514">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.9588248485514" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="425.6,299.2"
          Size="425.6,342.4"
          Id="Package\SEQC - Index and Manifest Distribution"
          TopLeft="95.0000016178403,100.176471993172" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>