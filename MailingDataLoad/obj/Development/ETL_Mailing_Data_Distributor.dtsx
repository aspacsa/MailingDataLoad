<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/22/2016 1:48:22 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="WINDOWSDEV"
  DTS:CreatorName="WINDOWSDEV\Ernesto Rodriguez"
  DTS:DTSID="{9110114C-041F-4D70-9B95-F51F10DA5801}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.3436.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ETL_Mailing_Data_Distributor"
  DTS:PackageType="5"
  DTS:VersionBuild="70"
  DTS:VersionGUID="{07B32401-8912-441C-99E6-7968EC0C3F4A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MSSQLSERVER.testdb.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{09E17B76-7084-4197-B242-7B5084EAA0E1}"
      DTS:ObjectName="MSSQLSERVER.testdb.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=MSSQLSERVER;User ID=sa;Initial Catalog=testdb;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAX9XdPvmdoUu0R3QXETu/wQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADLVQK0YsuKecZqTclNBcBnZ8RzeP4DStJdGd5PvU3OUgAAAAAOgAAAAAIAACAAAABwrdqb1e6S+zaS62lYo86VHcc1/D2+7Ju0wjV2BLQ7PRAAAADSIiJr8uus09afBZCzZcyBQAAAALKbJ4EXV5HdW1lt2gVciIK8594/78ic2rZfdHFgeyBrS8l7QCyQbsqDkvv+KaC09n8J7ipJVerK0/5ILuLxqSY</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E540869F-0A94-4FF7-B68B-57B7BC44272C}"
      DTS:ObjectName="connection_string">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=MSSQLSERVER; User ID=sa; Password=sa; Initial Catalog=testdb; Connection Timeout=60;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{CEC3D843-6BCE-4D79-B679-F834E5A275A3}"
      DTS:ObjectName="execution_log_id">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">9999336</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{811D5004-22DB-4277-83E5-30BC1D83B5E3}"
      DTS:ObjectName="path_to_buffers">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Buffers</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{00B6F9C7-D826-42AD-8208-DBB6BF6C14C4}"
      DTS:ObjectName="source_index_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Index</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{923E130D-AF64-45BB-9214-204801F2173C}"
      DTS:ObjectName="source_manifest_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_2</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8BB7B354-178E-478F-B403-7EEC2C38DD46}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="current_index_file">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{16830638-932B-49ED-AABB-B74A297E183A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="current_manifest_file">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{978C5BD6-AB5F-4127-8232-DA290A46A802}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="exception_message">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{424B6430-2D5C-48CE-8F13-297886591EFE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="indexes_destinations">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D2E3A244-C05D-4D98-BFBC-64C591216C69}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="prefixes_and_destinations_paths">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SEQC - Index and Manifest Distribution"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{11C04981-F986-4A32-8326-5B26D73DB6A2}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQC - Index and Manifest Distribution">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{3DD08CFE-EE5D-4B05-A1E8-47ED3C6F0784}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="FELC - Iterate manifest folders">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{4A47AE35-3E8C-4349-A1C6-573CA031D9D3}"
            DTS:ObjectName="{4A47AE35-3E8C-4349-A1C6-573CA031D9D3}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Package::source_manifest_path]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_2" />
                <FEFEProperty
                  FileSpec="*.*" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders\Script Task"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{0F3DA8B8-6604-48BE-9E40-C93DD85755B6}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Script Task"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_b9be7241aa574d73a57d11c621830cde"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,User::current_manifest_file,User::prefixes_and_destinations_paths,$Package::path_to_buffers,$Package::source_manifest_path"
                  ReadWriteVariables="User::exception_message">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_b9be7241aa574d73a57d11c621830cde.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{153DF5BF-8E04-429D-B558-327DEEE147CC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b9be7241aa574d73a57d11c621830cde</RootNamespace>
    <AssemblyName>ST_b9be7241aa574d73a57d11c621830cde</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
#endregion

namespace ST_b9be7241aa574d73a57d11c621830cde
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            int result = (int)ScriptResults.Failure;
            string task_name = Dts.Variables["System::TaskName"].Value.ToString();   
            string path_to_buffers = Dts.Variables["$Package::path_to_buffers"].Value.ToString();
            string source_manifest_path = Dts.Variables["$Package::source_manifest_path"].Value.ToString();
            string current_manifest_file = Dts.Variables["User::current_manifest_file"].Value.ToString();
            current_manifest_file = Path.GetFileName(current_manifest_file);
            List<Tuple<string, string, string, string>> args =
                (List<Tuple<string, string, string, string>>)Dts.Variables["User::prefixes_and_destinations_paths"].Value;      //Get arguments for index file
            Tuple<string, string, string, string> first_arg_prefix = null;
            string prefix = GetManifestPrefix(current_manifest_file);                                                 //Get current file prefix

            first_arg_prefix = args.Find(x => x.Item2 == prefix);                                            //Using current index prefix get arguments
            if (first_arg_prefix != null)
            {
                string dest_folder = first_arg_prefix.Item4;
                source_manifest_path = Path.Combine(source_manifest_path, current_manifest_file);
                dest_folder = Path.Combine(dest_folder, current_manifest_file);
                path_to_buffers = Path.Combine(path_to_buffers, dest_folder);

                string err_msg = string.Empty;
                if (CopyManifestToBuffer(source_manifest_path, path_to_buffers, out err_msg))
                {
                    result = (int)ScriptResults.Success;
                }
                else
                {
                    Dts.Variables["User::exception_message"].Value =
                        string.Format("Task: [{0}]; Message: [{1}]", task_name, err_msg);
                }
            }
            else
            {
                Dts.Variables["User::exception_message"].Value =
                    string.Format("Task: [{0}]; Message: [Invalid manifest prefix '{1}']", task_name, prefix);
            }

            Dts.TaskResult = result;

		}

        /// <summary>
        /// Tokenize the file name using '-' and get prefix.
        /// </summary>
        /// <param name="file_name"></param>
        /// <returns>String representing file prefix.</returns>
        string GetManifestPrefix(string file_name)
        {
            string[] tokens = file_name.Split('_');
            return tokens[0];
        }


        /// <summary>
        /// Copy manifest file to (buffer) destination.
        /// </summary>
        /// <param name="src_path"></param>
        /// <param name="dest_path"></param>
        /// <returns>True if copy operation is successful.</returns>
        bool CopyManifestToBuffer(string src_path, string dest_path, out string err_msg)
        {
            bool result = false;
            err_msg = string.Empty;
            try
            {
                File.Copy(src_path, dest_path, true);
                result = true;
            }
            catch (Exception e)
            {
                err_msg = e.Message;
            }

            return result;
        }
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_b9be7241aa574d73a57d11c621830cde</msb:CodeName>
		<msb:DisplayName>ST_b9be7241aa574d73a57d11c621830cde</msb:DisplayName>
		<msb:ProjectId>{C6F4B70C-DD34-40C0-8856-CF6142C1B4E0}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_b9be7241aa574d73a57d11c621830cde.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9be7241aa574d73a57d11c621830cde.Properties.Settings.get_Default():ST_b9be7241aa574d73a57d11c621830cde.Properties.Sett" +
    "ings")]

namespace ST_b9be7241aa574d73a57d11c621830cde.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b9be7241aa574d73a57d11c621830cde")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_b9be7241aa574d73a57d11c621830cde")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9be7241aa574d73a57d11c621830cde.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9be7241aa574d73a57d11c621830cde.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b9be7241aa574d73a57d11c621830cde.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b9be7241aa574d73a57d11c621830cde.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b9be7241aa574d73a57d11c621830cde.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_b9be7241aa574d73a57d11c621830cde.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFbbPVgAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAArjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFg0AABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
NAAAAAAAAEgAAAACAAUAiCMAANAQAAABAAAAAAAAANAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA8AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoEAAACm8RAAAKcxIAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBUAAAoqHgIoDwAACipKA28XAAAKAnsHAAAEKBgAAAoqAAATMAQAfwEAAAIAABFz
DAAABhMJFwoCKBkAAApvGgAACnJzAABwbxsAAApvHAAACm8dAAAKCwIoGQAACm8aAAAKcpUAAHBv
GwAACm8cAAAKbx0AAAoMAigZAAAKbxoAAApyyQAAcG8bAAAKbxwAAApvHQAACg0CKBkAAApvGgAA
CnIHAQBwbxsAAApvHAAACm8dAAAKEwQRBCgeAAAKEwQCKBkAAApvGgAACnI/AQBwbxsAAApvHAAA
CnQCAAAbEwUUEwYRCQIRBCgJAAAGfQcAAAQRBREJ/gYNAAAGcx8AAApvIAAAChMGEQYsZhEGbyEA
AAoTBwkRBCgiAAAKDREHEQQoIgAAChMHCBEHKCIAAAoMfiMAAAoTCAIJCBIIKAoAAAYsBBYKK1UC
KBkAAApvGgAACnKLAQBwbxsAAApyuwEAcAcRCCgkAAAKbyUAAAorLAIoGQAACm8aAAAKcosBAHBv
GwAACnLzAQBwBxEJewcAAAQoJAAACm8lAAAKAigZAAAKBm8mAAAKKgATMAQAGAAAAAMAABEDF40k
AAABCwcWH1+dB28nAAAKCgYWmiobMAMAIgAAAAQAABEWCgV+IwAAClEDBBcoKAAAChcK3gsLBQdv
KQAAClHeAAYqAAABEAAAAAAJAAwVAAsmAAABHgIoKgAACiq0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAA
AAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAzAQAACN+AAA4BQAAFAcAACNTdHJpbmdzAAAAAEwM
AABgAgAAI1VTAKwOAAAQAAAAI0dVSUQAAAC8DgAAFAIAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQMA
AAD6JTMAFgAAAQAAACYAAAAGAAAABwAAAA0AAAAGAAAAKgAAAAIAAAAQAAAABAAAAAIAAAADAAAA
BAAAAAMAAAABAAAABAAAAAEAAAACAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6
AAYAbwFeAQYAoAGLAQYAqAKJAgYAzwK1AgYA+gLoAgYAEQPoAgYALgPoAgYATQPoAgYAZgPoAgYA
fwPoAgYAmgPoAgYAtQPoAgYAzgPoAgYABwTnAwYAJwTnAwYAWARFBAYAdQS6AAYAegS6AAYAngTo
AgoAygS0BAoA4wS0BAYA+ATnAw4AGgUUAQYAVgW6AAYAdQW6AA4AiAUUARIA4QXBBRIA+QXBBQYA
KAYeBgYAVAY5BgYAWwa6AAYApAa6AAYArwYeBgYAuQa6AAAAAAABAAAAAAABAAEAAAAQADIAPAAF
AAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQADAADARAAPAUAAAUA
BwAMABEAfwETABEArAEXABEA9gE5AAYGRgJUAFaATgJXAFaAVgJXAAYATwWaAFAgAAAAAIMYvAEb
AAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0A
AgCzIAAAAACGGLwBGwACAKcgAAAAAJEYEwWWAAIA2CAAAAAAhgAaAhsAAgBkIgAAAACBAB8CRwAC
AIgiAAAAAIEAMQJMAAMAyCIAAAAAhhi8ARsABgC7IAAAAACGGLwBGwAGAMMgAAAAAIYAXgWdAAYA
AAABAF4CAAABAGQCAAABAG4CAAACAHcCAgADAIECAAABAGkFOQC8ARsAQQC8AWUASQC8AWUAUQC8
AWUAWQC8AWUAYQC8AWUAaQC8AWUAcQC8AWUAeQC8AWUAgQC8AWUAiQC8AWUAkQC8AWoAmQC8ARsA
oQC8ARsACQC8ARsAqQCMBG8AqQCnBHYAKQC8AXsAwQC8AYcA0QC8ARsAEQC8ARsA2QC8ARsADABr
BbIA6QB8BbcAGQCaBb0A8QDrBcIA+QACBscAAQELBs4ACQAVBtIACQEtBtYAHAC8AfcAFABnBv0A
DABsBgkBCQF2Bg4B6QB+BpoA6QCEBhQBAQGLBhsB8QCVBmoA6QCpBkEBKQG0Bk8BMQHDBtIAGQC8
ARsACAAUAFsACAAYAGAAKQCbAI0ALgAbAKUBLgAjAM4BLgArAM4BLgBrAPQBLgATAF0BLgA7AKUB
LgBjAOsBLgAzAM4BLgBDANQBLgBLAM4BQwBzAGAASQCbAI0AYQCjAGAAgwCzAGAAwwCjAGAAggAg
AUgBVgECAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAKkA
2wDpAASAAAABAAAAIRgLbwAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAA
AAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAALAAAAAAAAAAAAAAAKAKIFAAAAAAAAAAABAAAA
zwYAAAUABAAGAAQAAAAAAAA8TW9kdWxlPgBTVF9iOWJlNzI0MWFhNTc0ZDczYTU3ZDExYzYyMTgz
MGNkZS5kbGwAUmVzb3VyY2VzAFNUX2I5YmU3MjQxYWE1NzRkNzNhNTdkMTFjNjIxODMwY2RlLlBy
b3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF9iOWJlNzI0MWFhNTc0ZDczYTU3ZDExYzYy
MTgzMGNkZQBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZp
Z3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3Jp
cHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2Ny
aXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIA
cmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0
dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3Vs
dHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAEdldE1hbmlmZXN0
UHJlZml4AENvcHlNYW5pZmVzdFRvQnVmZmVyAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVl
AGZpbGVfbmFtZQBzcmNfcGF0aABkZXN0X3BhdGgAZXJyX21zZwBTeXN0ZW0uUnVudGltZS5JbnRl
cm9wU2VydmljZXMAT3V0QXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3Nl
bWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmli
dXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAPD5jX19EaXNwbGF5
Q2xhc3MxAHByZWZpeABUdXBsZWA0ADxNYWluPmJfXzAAeABnZXRfSXRlbTIAU3RyaW5nAG9wX0Vx
dWFsaXR5AFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5h
Z2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJp
YWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN5c3RlbS5JTwBQYXRo
AEdldEZpbGVOYW1lAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAExpc3RgMQBQcmVkaWNhdGVg
MQBGaW5kAGdldF9JdGVtNABDb21iaW5lAEVtcHR5AEZvcm1hdABzZXRfVmFsdWUAc2V0X1Rhc2tS
ZXN1bHQAQ2hhcgBTcGxpdABGaWxlAENvcHkARXhjZXB0aW9uAGdldF9NZXNzYWdlAFNUX2I5YmU3
MjQxYWE1NzRkNzNhNTdkMTFjNjIxODMwY2RlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwAAAABxUwBUAF8AYgA5AGIAZQA3ADIANAAxAGEAYQA1ADcANABkADcAMwBhADUANwBkADEAMQBj
ADYAMgAxADgAMwAwAGMAZABlAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAAAhUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsATgBhAG0AZQAAMyQAUABhAGMAawBhAGcAZQA6
ADoAcABhAHQAaABfAHQAbwBfAGIAdQBmAGYAZQByAHMAAD0kAFAAYQBjAGsAYQBnAGUAOgA6AHMA
bwB1AHIAYwBlAF8AbQBhAG4AaQBmAGUAcwB0AF8AcABhAHQAaAAAN1UAcwBlAHIAOgA6AGMAdQBy
AHIAZQBuAHQAXwBtAGEAbgBpAGYAZQBzAHQAXwBmAGkAbABlAABLVQBzAGUAcgA6ADoAcAByAGUA
ZgBpAHgAZQBzAF8AYQBuAGQAXwBkAGUAcwB0AGkAbgBhAHQAaQBvAG4AcwBfAHAAYQB0AGgAcwAA
L1UAcwBlAHIAOgA6AGUAeABjAGUAcAB0AGkAbwBuAF8AbQBlAHMAcwBhAGcAZQAAN1QAYQBzAGsA
OgAgAFsAewAwAH0AXQA7ACAATQBlAHMAcwBhAGcAZQA6ACAAWwB7ADEAfQBdAABrVABhAHMAawA6
ACAAWwB7ADAAfQBdADsAIABNAGUAcwBzAGEAZwBlADoAIABbAEkAbgB2AGEAbABpAGQAIABtAGEA
bgBpAGYAZQBzAHQAIABwAHIAZQBmAGkAeAAgACcAewAxAH0AJwBdAAEAczqcYbgM10qwTeGQForZ
ewAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAAS
GQMGEgwEAAASDAQIABIMBCABDg4HIAMCDg4QDgIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYA
ARJVEVkEIAASXQYgAgEOEl0EBwESFQUgAQERZQgBAAIAAAAAAAMAAAECBg4LIAECFRJxBA4ODg4I
FRJxBA4ODg4EIAATAQUAAgIODgQgABJ5BCAAEn0GIAESgIEcAyAAHAMgAA4EAAEODg0VEoCJARUS
cQQODg4ODRUSgI0BFRJxBA4ODg4FIAIBHBgLIAETABUSgI0BEwAEIAATAwUAAg4ODgYAAw4OHBwE
IAEBHCAHCggODg4OFRKAiQEVEnEEDg4ODhUScQQODg4ODg4SGAYgAR0OHQMGBwIdDh0DBgADAQ4O
AgYHAgISgJlHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3Bs
YXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfYjliZTcyNDFhYTU3NGQ3M2E1N2QxMWM2MjE4
MzBjZGUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQCANAAAAAAAAAAAAACeNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAkDQAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQALbyEYAAABAAtvIRg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
YgA5AGIAZQA3ADIANAAxAGEAYQA1ADcANABkADcAMwBhADUANwBkADEAMQBjADYAMgAxADgAMwAw
AGMAZABlAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQA3ADcA
LgAyADgANAAyADcAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AYgA5
AGIAZQA3ADIANAAxAGEAYQA1ADcANABkADcAMwBhADUANwBkADEAMQBjADYAMgAxADgAMwAwAGMA
ZABlAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AYgA5AGIAZQA3ADIANAAxAGEAYQA1ADcANABkADcAMwBhADUANwBk
ADEAMQBjADYAMgAxADgAMwAwAGMAZABlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfAGIAOQBiAGUANwAyADQAMQBhAGEANQA3ADQAZAA3ADMAYQA1ADcAZAAx
ADEAYwA2ADIAMQA4ADMAMABjAGQAZQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANgAxADcANwAuADIAOAA0ADIANwAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADcANwAuADIAOAA0ADIANwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACwNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{C9BC8636-6B50-416A-B6AB-E98BBAC67E8D}"
              DTS:ObjectName="{C9BC8636-6B50-416A-B6AB-E98BBAC67E8D}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::current_manifest_file" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{83F429A9-612F-42CB-9DF9-B95F19842025}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="FELC - Iterate the index folder">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{27C4D945-8286-4009-B289-46094901C299}"
            DTS:ObjectName="{27C4D945-8286-4009-B289-46094901C299}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Package::source_index_path]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Index" />
                <FEFEProperty
                  FileSpec="*.csv" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SCR - Copy index file to destination"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{F040C356-37CC-4D83-A178-269D99E4A956}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SCR - Copy index file to destination"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_68107bb4f635496a94f9727fd029e7e7"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::TaskName,User::current_index_file,User::indexes_destinations,$Package::path_to_buffers,$Package::source_index_path"
                  ReadWriteVariables="User::exception_message">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_68107bb4f635496a94f9727fd029e7e7.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7C13654B-B903-47DD-9035-2A3C331F6AEB}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_68107bb4f635496a94f9727fd029e7e7</RootNamespace>
    <AssemblyName>ST_68107bb4f635496a94f9727fd029e7e7</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
#endregion

namespace ST_68107bb4f635496a94f9727fd029e7e7
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called to distribute index files into their 
        /// corresponding OnBase folder.
        /// </summary>
		public void Main()
		{
            int result = (int)ScriptResults.Failure;
            string src_index_path = Dts.Variables["$Package::source_index_path"].Value.ToString();              //Get source path of indexes
            string path_to_buffers = Dts.Variables["$Package::path_to_buffers"].Value.ToString();               //Get path for destination buffer
            Dictionary<string, string> indexes_destinations                         
                = (Dictionary<string, string>)Dts.Variables["User::indexes_destinations"].Value;                //Used to store destination paths for indexes
            string current_index_file = Dts.Variables["User::current_index_file"].Value.ToString();             //Get current file (with full path)
            current_index_file = Path.GetFileName(current_index_file);                                          //Get rid of the path, leave only file name   
            string task_name = Dts.Variables["System::TaskName"].Value.ToString();   


            string dest_folder = "";
            string prefix = GetIndexPrefix(current_index_file);                                                 //Get current file prefix
            if (indexes_destinations.TryGetValue(prefix, out dest_folder))                                      //If prefix found then proceed to distribute index
            {
                src_index_path = Path.Combine(src_index_path, current_index_file);
                dest_folder = Path.Combine(dest_folder, current_index_file);
                path_to_buffers = Path.Combine(path_to_buffers, dest_folder);
                string err_msg;
                if (CopyIndexToBuffer(src_index_path, path_to_buffers, out err_msg))                            //Send file to folder, verify if successful operation
                {
                    result = (int)ScriptResults.Success;
                }
                else
                {                    
                    Dts.Variables["User::exception_message"].Value =
                        string.Format("Task: [{0}]; Message: [{1}]", task_name, err_msg);
                }
            }
            else 
            {
                Dts.Variables["User::exception_message"].Value =
                    string.Format("Task: [{0}]; Message: [Invalid index prefix '{1}']", task_name, prefix);
            }

            Dts.TaskResult = result;
		}

        /// <summary>
        /// Tokenize the file name using '-' and get prefix.
        /// </summary>
        /// <param name="file_name"></param>
        /// <returns>String representing file prefix.</returns>
        string GetIndexPrefix(string file_name)
        {
            string[] tokens = file_name.Split('-');
            return tokens[0];
        }

        /// <summary>
        /// Copy index file to (buffer) destination.
        /// </summary>
        /// <param name="src_path"></param>
        /// <param name="dest_path"></param>
        /// <returns>True if copy operation is successful.</returns>
        bool CopyIndexToBuffer(string src_path, string dest_path, out string err_msg)
        {
            bool result = false;
            err_msg = string.Empty;
            try
            {
                File.Copy(src_path, dest_path, true);
                result = true;
            }
            catch (Exception e)
            {
                err_msg = e.Message;
            }

            return result;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_68107bb4f635496a94f9727fd029e7e7</msb:CodeName>
		<msb:DisplayName>ST_68107bb4f635496a94f9727fd029e7e7</msb:DisplayName>
		<msb:ProjectId>{583DA0C5-1AD5-49A7-818F-A7FDFB70E29E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_68107bb4f635496a94f9727fd029e7e7.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_68107bb4f635496a94f9727fd029e7e7.Properties.Settings.get_Default():ST_68107bb4f635496a94f9727fd029e7e7.Properties.Sett" +
    "ings")]

namespace ST_68107bb4f635496a94f9727fd029e7e7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_68107bb4f635496a94f9727fd029e7e7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_68107bb4f635496a94f9727fd029e7e7")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_68107bb4f635496a94f9727fd029e7e7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_68107bb4f635496a94f9727fd029e7e7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_68107bb4f635496a94f9727fd029e7e7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_68107bb4f635496a94f9727fd029e7e7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_68107bb4f635496a94f9727fd029e7e7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_68107bb4f635496a94f9727fd029e7e7.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKbYPVgAAAAAAAAAAOAAAiELAQsAABQAAAAIAAAAAAAAPjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOQyAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
MwAAAAAAAEgAAAACAAUASCMAAJwPAAABAAAAAAAAAJAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA8AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoEAAACm8RAAAKcxIAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBUAAAoqABMwBABWAQAAAgAAERcKAigXAAAKbxgAAApycwAAcG8ZAAAKbxoAAApv
GwAACgsCKBcAAApvGAAACnKrAABwbxkAAApvGgAACm8bAAAKDAIoFwAACm8YAAAKct8AAHBvGQAA
Cm8aAAAKdAEAABsNAigXAAAKbxgAAApyFQEAcG8ZAAAKbxoAAApvGwAAChMEEQQoHAAAChMEAigX
AAAKbxgAAApyRwEAcG8ZAAAKbxoAAApvGwAAChMFcmkBAHATBgIRBCgJAAAGEwcJEQcSBm8dAAAK
LFcHEQQoHgAACgsRBhEEKB4AAAoTBggRBigeAAAKDAIHCBIIKAoAAAYsBBYKK1ICKBcAAApvGAAA
CnJrAQBwbxkAAApymwEAcBEFEQgoHwAACm8gAAAKKygCKBcAAApvGAAACnJrAQBwbxkAAApy0wEA
cBEFEQcoHwAACm8gAAAKAigXAAAKBm8hAAAKKgAAEzAEABgAAAADAAARAxeNIgAAAQsHFh8tnQdv
IgAACgoGFpoqGzADACIAAAAEAAARFgoFfiMAAApRAwQXKCQAAAoXCt4LCwUHbyUAAApR3gAGKgAA
ARAAAAAACQAMFQALJAAAAR4CKCYAAAoqAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291
cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMu
UnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAA
djQuMC4zMDMxOQAAAAAFAGwAAABkBAAAI34AANAEAADABgAAI1N0cmluZ3MAAAAAkAsAADwCAAAj
VVMAzA0AABAAAAAjR1VJRAAAANwNAADAAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAwAAAPolMwAW
AAABAAAAJAAAAAUAAAAGAAAACwAAAAUAAAAmAAAAAgAAAA8AAAAEAAAAAgAAAAMAAAAEAAAAAQAA
AAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4B
BgCgAYsBBgCiAoMCBgDJAq8CBgD0AuICBgALA+ICBgAoA+ICBgBHA+ICBgBgA+ICBgB5A+ICBgCU
A+ICBgCvA+ICBgDIA+ICBgABBOEDBgAhBOEDBgBSBD8EBgBvBLoABgB0BLoABgCYBOICCgDEBK4E
CgDdBK4EBgDyBOEDDgAUBRQBDgA2BRQBEgCPBW8FEgCnBW8FBgDnBcwFBgD+BfQFBgAjBroABgBK
BroABgBbBvQFBgBlBroAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUA
AQAQAHQAfwANAAQACAADAQAAowAAABEABAAMABEAfwETABEArAEXABEA9gE5AAYGQAJUAFaASAJX
AFaAUAJXAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI
4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYDQWWAAIAvCAAAAAAhgAa
AhsAAgAgIgAAAACBAB8CRwACAEQiAAAAAIEALgJMAAMAhCIAAAAAhhi8ARsABgAAAAEAWAIAAAEA
XgIAAAEAaAIAAAIAcQICAAMAewI5ALwBGwBBALwBZQBJALwBZQBRALwBZQBZALwBZQBhALwBZQBp
ALwBZQBxALwBZQB5ALwBZQCBALwBZQCJALwBZQCRALwBagCZALwBGwChALwBGwAJALwBGwCpAIYE
bwCpAKEEdgApALwBewDBALwBhwDRALwBGwARALwBGwDZALwBGwAZAEgFmgDhAJkFnwDpALAFpADx
ALkFqgAJAMMFrgABAQMGuQAMAA8GvgABARsGxwAJASoGzQDxADEG1ADhADsGagAJAU8G6gAJAVUG
+AAZAWAG+wAhAW8GrgAZALwBGwAIABQAWwAIABgAYAApAJsAjQAuACMAegEuACsAegEuAGsAoAEu
ABMACQEuABsAUQEuADsAUQEuADMAegEuAEMAgAEuAEsAegEuAGMAlwFDAHMAYABJAJsAjQBhAKMA
YACDALMAYACCANkA8QACAQIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAE
AAUAAgAFAAcAsgAEgAAAAQAAACEYs20AAAAAAAB/AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAA
AAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAAAAoA9QAAAAAACwAAAAAAAAAAAAAACgBQBQAAAAAA
AAAAAQAAAHsGAAAFAAQAAAAAAAA8TW9kdWxlPgBTVF82ODEwN2JiNGY2MzU0OTZhOTRmOTcyN2Zk
MDI5ZTdlNy5kbGwAUmVzb3VyY2VzAFNUXzY4MTA3YmI0ZjYzNTQ5NmE5NGY5NzI3ZmQwMjllN2U3
LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBTVF82ODEwN2JiNGY2MzU0OTZhOTRmOTcy
N2ZkMDI5ZTdlNwBTY3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNv
bmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5T
Y3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJU
U2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFn
ZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VD
dWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
Q3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAEdldEluZGV4
UHJlZml4AENvcHlJbmRleFRvQnVmZmVyAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAGZp
bGVfbmFtZQBzcmNfcGF0aABkZXN0X3BhdGgAZXJyX21zZwBTeXN0ZW0uUnVudGltZS5JbnRlcm9w
U2VydmljZXMAT3V0QXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJh
bWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJs
eUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1l
LkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFz
c2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9k
ZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRl
bQBnZXRfVmFsdWUAVG9TdHJpbmcAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMARGljdGlvbmFy
eWAyAFN5c3RlbS5JTwBQYXRoAEdldEZpbGVOYW1lAFRyeUdldFZhbHVlAENvbWJpbmUAU3RyaW5n
AEZvcm1hdABzZXRfVmFsdWUAc2V0X1Rhc2tSZXN1bHQAQ2hhcgBTcGxpdABFbXB0eQBGaWxlAENv
cHkARXhjZXB0aW9uAGdldF9NZXNzYWdlAFNUXzY4MTA3YmI0ZjYzNTQ5NmE5NGY5NzI3ZmQwMjll
N2U3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABxUwBUAF8ANgA4ADEAMAA3AGIA
YgA0AGYANgAzADUANAA5ADYAYQA5ADQAZgA5ADcAMgA3AGYAZAAwADIAOQBlADcAZQA3AC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAA3JABQAGEAYwBrAGEAZwBlADoA
OgBzAG8AdQByAGMAZQBfAGkAbgBkAGUAeABfAHAAYQB0AGgAADMkAFAAYQBjAGsAYQBnAGUAOgA6
AHAAYQB0AGgAXwB0AG8AXwBiAHUAZgBmAGUAcgBzAAA1VQBzAGUAcgA6ADoAaQBuAGQAZQB4AGUA
cwBfAGQAZQBzAHQAaQBuAGEAdABpAG8AbgBzAAAxVQBzAGUAcgA6ADoAYwB1AHIAcgBlAG4AdABf
AGkAbgBkAGUAeABfAGYAaQBsAGUAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBOAGEAbQBlAAAB
AC9VAHMAZQByADoAOgBlAHgAYwBlAHAAdABpAG8AbgBfAG0AZQBzAHMAYQBnAGUAADdUAGEAcwBr
ADoAIABbAHsAMAB9AF0AOwAgAE0AZQBzAHMAYQBnAGUAOgAgAFsAewAxAH0AXQAAZVQAYQBzAGsA
OgAgAFsAewAwAH0AXQA7ACAATQBlAHMAcwBhAGcAZQA6ACAAWwBJAG4AdgBhAGwAaQBkACAAaQBu
AGQAZQB4ACAAcAByAGUAZgBpAHgAIAAnAHsAMQB9ACcAXQABAAAAyleKH567iUuaMEjVW6agrwAI
t3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMG
EgwEAAASDAQIABIMBCABDg4HIAMCDg4QDgIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJV
EVkEIAASXQYgAgEOEl0EBwESFQUgAQERZQgBAAIAAAAAAAMAAAEEIAAScQQgABJ1BSABEnkcAyAA
HAMgAA4GFRJ9Ag4OBAABDg4IIAICEwAQEwEFAAIODg4GAAMODhwcBCABARwQBwkIDg4VEn0CDg4O
Dg4ODgYgAR0OHQMGBwIdDh0DAgYOBgADAQ4OAgYHAgISgJFHAQAaLk5FVEZyYW1ld29yayxWZXJz
aW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1Rf
NjgxMDdiYjRmNjM1NDk2YTk0Zjk3MjdmZDAyOWU3ZTcAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAMMwAAAAAAAAAA
AAAuMwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDMAAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAs20hGAAAAQCzbSEYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAA
MAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADYAOAAxADAANwBiAGIANABmADYAMwA1ADQAOQA2AGEAOQA0AGYAOQA3ADIANwBmAGQAMAAyADkA
ZQA3AGUANwAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADEANwA3
AC4AMgA4ADAAOAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADYA
OAAxADAANwBiAGIANABmADYAMwA1ADQAOQA2AGEAOQA0AGYAOQA3ADIANwBmAGQAMAAyADkAZQA3
AGUANwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAVABfADYAOAAxADAANwBiAGIANABmADYAMwA1ADQAOQA2AGEAOQA0AGYA
OQA3ADIANwBmAGQAMAAyADkAZQA3AGUANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAFQAXwA2ADgAMQAwADcAYgBiADQAZgA2ADMANQA0ADkANgBhADkANABmADkA
NwAyADcAZgBkADAAMgA5AGUANwBlADcAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMQA3ADcALgAyADgAMAA4ADMAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMQA3ADcALgAyADgAMAA4ADMAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAQDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SQL - Save exception"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6426c4ab-0441-48c9-9e20-5749f8b824dc}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SQL - Save exception"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{09E17B76-7084-4197-B242-7B5084EAA0E1}"
                  SQLTask:BypassPrepare="False"
                  SQLTask:SqlStatementSource="INSERT INTO Medhok.Mailing_Data_Load_Exception&#xA;(ExecutionLogID, Description) VALUES (?, ?);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="$Package::execution_log_id"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="20"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::exception_message"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{6E7983B4-43B1-40DF-9673-469D4AFD6627}"
              DTS:From="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SCR - Copy index file to destination"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SQL - Save exception"
              DTS:Value="1" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{C3B58579-71D0-43BC-9C86-BBDF672B19E3}"
              DTS:ObjectName="{C3B58579-71D0-43BC-9C86-BBDF672B19E3}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::current_index_file" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{5da1a9f8-36d0-488b-8f45-af65a462a367}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR - Get prefixes and destination paths"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{39d477d6-a137-4419-a401-a81c6a3d1b4c}"
              DTS:EventID="292767228"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{afa205fa-879a-4e17-85ee-e85c5071bc3f}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_281a0dd7ce084684bc538fdcc9eeea30"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,$Package::connection_string"
              ReadWriteVariables="User::exception_message,User::indexes_destinations,User::prefixes_and_destinations_paths">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Argument.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    public sealed class Argument
    {
        public Argument(string FilePrefix, string IndexPrefix, string Path)
        {
            this.FilePrefix = FilePrefix;
            this.IndexPrefix = IndexPrefix;
            this.Path = Path;
        }

        public string FilePrefix { get; set; }
        public string IndexPrefix { get; set; }
        public string Path { get; set; }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="MedhokDataContext.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    public sealed class MedhokDataContext : DataContext
    {
        public Table<FileType> FileTypes;
        public Table<FileDestination> FileDestinations;
        public MedhokDataContext(string connection) : base(connection) { }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_281a0dd7ce084684bc538fdcc9eeea30.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6A4C00A5-8759-4757-A987-979F1E4D7BB6}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_4fdbaf3ce9d84afeb160b40b867ea522</RootNamespace><AssemblyName>ST_281a0dd7ce084684bc538fdcc9eeea30</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Data.Linq" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Argument.cs" /><Compile Include="FileDestination.cs" /><Compile Include="FileType.cs" /><Compile Include="MedhokDataContext.cs" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Linq;
using System.Collections.Generic;
#endregion

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called to get the arguments to create 
        /// and distribute the index files along with their 
        /// corresponding data mailing manifests.
        /// </summary>
		public void Main()
		{
            MedhokDataContext db = null;
            int result = (int)ScriptResults.Success;

            try
            {
                string cnn_str = Dts.Variables["$Package::connection_string"].Value.ToString();             //Get the connection string      
                db = new MedhokDataContext(cnn_str);                                                        //Use medhok context previously defined and connect to it
                var query = from f in db.FileTypes                                                          //Get index prefix, manifest destination paths paths
                            orderby f.FileTypePrefix
                            select new
                            {
                                FilePrefix = f.FileTypePrefix,
                                IndexPrefix = f.Destination.IndexFilePrefix,
                                Path = f.Destination.DestPath,
                                InterFolder = f.Destination.IntermidiateFolder
                            };

                Dictionary<string, string> indexes_destinations 
                            = (from q in db.FileDestinations
                             select new
                             {
                                 InterFolder = q.IntermidiateFolder,
                                 IndexPrefix = q.IndexFilePrefix
                             }).ToDictionary(mc => mc.IndexPrefix, mc => mc.InterFolder);
                Dts.Variables["User::indexes_destinations"].Value = indexes_destinations;

                List<Tuple<string, string, string, string>> arguments = 
                    new List<Tuple<string, string, string, string>>();                                      //Create a list containing tuples to store arguments from previous results
                foreach (var row in query)                                                                   
                {
                    arguments.Add(Tuple.Create(row.IndexPrefix, row.FilePrefix, 
                        row.Path, row.InterFolder ) );                                                      //Store new arguments tuple in the list
                }
                Dts.Variables["User::prefixes_and_destinations_paths"].Value = arguments;
            }
            catch(Exception e)
            {
                string task_name = Dts.Variables["System::TaskName"].Value.ToString();
                Dts.Variables["User::exception_message"].Value =
                    string.Format("Task : [{0}]; Message: [{1}]", task_name, e.Message);
                result = (int)ScriptResults.Failure;
            }
            finally
            {
                Dts.TaskResult = result;
                db.Connection.Close();
            }
			
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="FileType.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq.Mapping;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    [Table(Name="Medhok.Mailing_Data_File_Type")]
    public sealed class FileType
    {
        [Column(IsPrimaryKey=true)]
        public int ID;

        [Column]
        public string FileTypePrefix;

        [Column]
        public int DestID;

        [Association(ThisKey = "DestID", IsForeignKey = true)]
        public FileDestination Destination;

    }
}]]></ProjectItem>
              <ProjectItem
                Name="FileDestination.cs"
                Encoding="UTF8"><![CDATA[using System.Collections.Generic;
using System.Data.Linq.Mapping;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    [Table(Name="Medhok.Mailing_Data_File_Dest")]
    public sealed class FileDestination
    {
        [Column(IsPrimaryKey=true)]
        public int ID;

        [Column]
        public string DestPath;

        [Column]
        public string IndexFilePrefix;

        [Column]
        public string IntermidiateFolder;

        [Association(OtherKey = "DestID")]
        public List<FileType> FileTypes;
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_4fdbaf3ce9d84afeb160b40b867ea522</msb:CodeName>
		<msb:DisplayName>ST_4fdbaf3ce9d84afeb160b40b867ea522</msb:DisplayName>
		<msb:ProjectId>{F3366BAD-25B7-4DDC-BCF9-D1AE339070CC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_281a0dd7ce084684bc538fdcc9eeea30.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="MedhokDataContext.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="FileType.cs"/>
		<msb:File Include="FileDestination.cs"/>
		<msb:File Include="Argument.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Settings.get_Default():ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Sett" +
    "ings")]

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4fdbaf3ce9d84afeb160b40b867ea522")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4fdbaf3ce9d84afeb160b40b867ea522")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_281a0dd7ce084684bc538fdcc9eeea30.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMfKPVgAAAAAAAAAAOAAAiELAQsAACoAAAAIAAAAAAAAbkgA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABhIAABTAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdCgAAAAgAAAAKgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAsAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
SAAAAAAAAEgAAAACAAUA+CgAACAfAAABAAAAAAAAAEAoAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHICKA0AAAoCAygDAAAGAgQoBQAABgIFKAcAAAYqHgJ7AQAA
BCoiAgN9AQAABCoeAnsCAAAEKiICA30CAAAEKh4CewMAAAQqIgIDfQMAAAQqHgIoDQAACioeAigN
AAAKKiICAygSAAAKKh4CKA0AAAoqAAAAEzACAC0AAAABAAARfg8AAAQtIHIBAABw0AYAAAIoFAAA
Cm8VAAAKcxYAAAoKBoAPAAAEfg8AAAQqGn4QAAAEKh4CgBAAAAQqGn4RAAAEKi5zEAAABoARAAAE
Kh4CKBgAAAoqkgIoDQAACgIDfRwAAAoCBH0dAAAKAgV9HgAACgIOBH0fAAAKKh4CexwAAAoqHgJ7
HQAACioeAnseAAAKKh4Cex8AAAoqEzACAJEAAAACAAARcyAAAAoKBnJzAABwbyEAAAomBgJ7HAAA
CowCAAAbbyIAAAomBnKTAABwbyEAAAomBgJ7HQAACowDAAAbbyIAAAomBnK1AABwbyEAAAomBgJ7
HgAACowEAAAbbyIAAAomBnLJAABwbyEAAAomBgJ7HwAACowFAAAbbyIAAAomBnLrAABwbyEAAAom
Bm8jAAAKKgAAABMwAwBrAAAAAwAAEQN1AQAAGwoGLF8oJAAACgJ7HAAACgZ7HAAACm8lAAAKLEco
JgAACgJ7HQAACgZ7HQAACm8nAAAKLC8oKAAACgJ7HgAACgZ7HgAACm8pAAAKLBcoKgAACgJ7HwAA
CgZ7HwAACm8rAAAKKhYqABMwAwBsAAAABAAAESCUGMgsCiApVVWlBlooJAAACgJ7HAAACm8sAAAK
WAogKVVVpQZaKCYAAAoCex0AAApvLQAAClgKIClVVaUGWigoAAAKAnseAAAKby4AAApYCiApVVWl
BlooKgAACgJ7HwAACm8vAAAKWAoGKlYCKA0AAAoCA30wAAAKAgR9MQAACioeAnswAAAKKh4CezEA
AAoqAAATMAIAVQAAAAIAABFzIAAACgoGcvEAAHBvIQAACiYGAnswAAAKjAIAABtvIgAACiYGcpMA
AHBvIQAACiYGAnsxAAAKjAMAABtvIgAACiYGcusAAHBvIQAACiYGbyMAAAoqAAAAEzADADsAAAAF
AAARA3UKAAAbCgYsLygkAAAKAnswAAAKBnswAAAKbyUAAAosFygmAAAKAnsxAAAKBnsxAAAKbycA
AAoqFioAEzADADoAAAAEAAARINvxrjMKIClVVaUGWigkAAAKAnswAAAKbywAAApYCiApVVWlBloo
JgAACgJ7MQAACm8tAAAKWAoGKh4CbzIAAAoqHgJvMwAACioAABswBwCxAwAABgAAERQKFgsCKDQA
AApvNQAACnITAQBwbzYAAApvNwAACm8jAAAKDAhzCgAABgoGew0AAATQBAAAAigUAAAKcksBAHAo
OAAAChMJEQnQCgAABCg5AAAKKDoAAAoXjSsAAAETChEKFhEJohEKKAEAACsoAgAAK9AEAAACKBQA
AApySwEAcCg4AAAKEwvQPQAACtAMAAAbKD4AAAp0NQAAARqNKgAAARMMEQwWEQvQCgAABCg5AAAK
KDoAAAqiEQwXEQvQDAAABCg5AAAKKDoAAArQBgAABCg5AAAKKDoAAAqiEQwYEQvQDAAABCg5AAAK
KDoAAArQBQAABCg5AAAKKDoAAAqiEQwZEQvQDAAABCg5AAAKKDoAAArQBwAABCg5AAAKKDoAAAqi
EQwajTYAAAETDRENFtA/AAAK0AwAABsoPgAACnQ2AAABohENF9BAAAAK0AwAABsoPgAACnQ2AAAB
ohENGNBBAAAK0AwAABsoPgAACnQ2AAABohENGdBCAAAK0AwAABsoPgAACnQ2AAABohENKEMAAAoX
jSsAAAETDhEOFhELohEOKAMAACsoBAAAKw0Gew4AAATQAwAAAigUAAAKck8BAHAoOAAAChMP0EUA
AArQCwAAGyg+AAAKdDUAAAEYjSoAAAETEBEQFhEP0AcAAAQoOQAACig6AAAKohEQFxEP0AYAAAQo
OQAACig6AAAKohEQGI02AAABExERERbQMwAACtALAAAbKD4AAAp0NgAAAaIRERfQMgAACtALAAAb
KD4AAAp0NgAAAaIREShDAAAKF40rAAABExIREhYRD6IREigFAAArKAYAACt+EgAABC0RFP4GFAAA
BnNGAAAKgBIAAAR+EgAABH4TAAAELREU/gYVAAAGc0YAAAqAEwAABH4TAAAEKAcAACsTBAIoNAAA
Cm81AAAKclMBAHBvNgAAChEEb0gAAApzSQAAChMFCW9KAAAKExMrMRETb0sAAAoTBhEFEQZvQAAA
ChEGbz8AAAoRBm9BAAAKEQZvQgAACigIAAArb00AAAoRE29OAAAKLcbeDBETLAcRE29PAAAK3AIo
NAAACm81AAAKcokBAHBvNgAAChEFb0gAAAreVBMHAig0AAAKbzUAAApy1QEAcG82AAAKbzcAAApv
IwAAChMIAig0AAAKbzUAAApy9wEAcG82AAAKcicCAHARCBEHb1AAAAooUQAACm9IAAAKFwveAN4Y
Aig0AAAKB29SAAAKBm9TAAAKb1QAAArcKgAAAEFMAAACAAAA2gIAAD4AAAAYAwAADAAAAAAAAAAA
AAAABAAAAD4DAABCAwAAVAAAAEEAAAECAAAABAAAAJQDAACYAwAAGAAAAAAAAAAeAihVAAAKKgAA
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA3AoAACN+
AABICwAAKAwAACNTdHJpbmdzAAAAAHAXAABkAgAAI1VTANQZAAAQAAAAI0dVSUQAAADkGQAAPAUA
ACNCbG9iAAAAAAAAAAIAAAFXHaIJCQ8AAAD6JTMAFgAAAQAAAEMAAAALAAAAHAAAACMAAAASAAAA
VQAAAAIAAAA3AAAABgAAAAUAAAAMAAAAEAAAABAAAAABAAAABwAAAAEAAAABAAAABgAAAAgAAAAA
AAoAAQAAAAAABgD1AO4ACgANAfwADgAuARkBEgCOAWUBBgCqAe4ABgC6Ap8CCgDtAvwABgAXAwYD
BgBIAzMDBgAEBOoDBgAvBB0EBgBGBB0EBgBjBB0EBgCCBB0EBgCbBB0EBgC0BB0EBgDPBB0EBgDq
BB0EBgADBR0EBgA8BRwFBgBcBRwFBgCeBRwFCgDSBbkFCgDhBbkFCgDxBbkFBgAZBgYGBgA2Bu4A
BgA7Bu4ABgBfBh0EDgCLBnUGDgCkBnUGEgDABmUBBgDMBwYGBgDnBwYGBgD+BwYGBgAiCBYIBgA3
CJ8CBgBuCO4AEgDOCGUBFgAnCQcJFgA/CQcJGgB/CWcJGgCKCWcJBgCoCR0EBgCyCe4AGgDYCWcJ
GgDvCWcJGgAPCgMKGgAZCgMKGgAtCgMKBgBCCh0EBgBNCu4ABgB1Ch0EBgCFCh0EGgCQCmcJBgCe
Cp8CBgCsCh0EGgDCCgMKBgDNCp8CBgDxCu4ABgD5Cp8CBgAhC+4ABgBFCzILBgBaC+4ABgBuC+4A
BgCEC+4AHgDAC60LAAAAAAEAAAAAAAEAAQABARAAMgA7AAUAAQABAAEBEABfADsABQAEAAgAAQEQ
AG8AOwAFAAkACQABARAAeAA7AAkADQAKAAAAEACKAJQABQAPAAsAAAEQAMMAlAANABEADwABABAA
zAA7ABEAEgASAAMBAADXAAAAFQAUABYAAAEQAOIGAAAFABcAFgAAARAASggAAAUAGwAeAAEABQIj
AAEAIQIjAAEAPgIjAAYAcAIqAAYAcwIjAAYAfAIjAAYAjAIjAAYAwQItAAYAcAIqAAYAywIjAAYA
2gIqAAYA4QI5AAYAwQI9AAYA9QJFABEAJwNNABEAVANRABEAmANvABEAdQhcAhEApwhcAgYGwQMq
AFaAyQN9AFaA0QN9ACEARAdtASEAWQd2ASEAbwd/ASEAfgeIASEAfgdtASEAWQd2AVAgAAAAAIYY
rwETAAEAbSAAAAAAhgi1ARoABAB1IAAAAACGCMQBHgAEAH4gAAAAAIYI0wEaAAUAhiAAAAAAhgjj
AR4ABQCPIAAAAACGCPMBGgAGAJcgAAAAAIYI/AEeAAYAoCAAAAAAhhivATUABwCoIAAAAACGGK8B
NQAHALAgAAAAAIYYrwEeAAcAuSAAAAAAgxivATUACADEIAAAAACTCGQDVQAIAP0gAAAAAJMIeANa
AAgABCEAAAAAkwiEA18ACAAMIQAAAACWCKgDcwAJAB8hAAAAAIYYrwE1AAkAEyEAAAAAkRi5Bl0B
CQAoJAAAAACGALwDNQAJADQoAAAAAIYYrwE1AAkAFiQAAAAAkQBgCFICCQAeJAAAAACRAJwIUgIK
ACchAAAAAIYYrwFhAQsATCEAAAAAhgi1AXEBDwBUIQAAAACGCNMBegEPAFwhAAAAAIYI8wGDAQ8A
ZCEAAAAAhgiUB4wBDwBsIQAAAADGAKQHGgAPAAwiAAAAAMYArQeRAQ8AhCIAAAAAxgC0B5YBEAD8
IgAAAACGGK8BNgIQABIjAAAAAIYIlAdxARIAGiMAAAAAhgjTAXoBEgAkIwAAAADGAKQHGgASAIgj
AAAAAMYArQeRARIA0CMAAAAAxgC0B5YBEwAAAAEAVAIAAAIAXwIAAAMAawIAAAEA2QMAAAEA2QMA
AAEA2QMAAAEA3wMAAAEA2QMAAAEAawgAAAEAawgAAAEAVAIAAAIAXwIAAAMAawIAAAQAwAcAAAEA
2QMAAAEAwAcAAAIAXwIAAAEA2QNRAK8BHgBZAK8BHgBhAK8BHgBpAK8BHgBxAK8BHgB5AK8BHgCB
AK8BHgCJAK8BHgCRAK8BHgCZAK8BHgChAK8BiwCpAK8BNQAJAK8BNQCxAK8BNQC5AK8BNQDBAK8B
NQDJAK8BNQARAK8BHgDRAK8BNQDZAE0GNgHZAGgGPQFBAK8BQgHxAK8BTgEZAK8BNQABAa8BNQAJ
Aa8BrgEZAa8BNQAMAEQHbQEMAFkHdgEMAG8HfwEMAH4HiAEhAa8BNQAhATAIywEhATAI1QEJAKQH
GgA0AKgD8wE0AK0H/QE8AKgD8wE8AK0H/QFEAKgD8wFEAK0H/QFMAKgD8wFMAK0H/QE0ALQHLAI8
ALQHLAJEALQHLAJMALQHLAJUAH4HbQFUAFkHdgFcANMBegFcAJQHcQEhAOAIcQI5ATEJdwJBAUgJ
fQJJAVEJhAJRAZ4JiAJhAcUJkQJRAekJmgJRAfwJpgKBAToKwwJkAK8BYQGZAWEK8gJkALUBcQFk
ANMBegFkAPMBgwFkAJQHjAFRAbcK/QKBAbsKJANcAK8BNgJsAK8BeQPRAdoKfwNJAecKsAN0AK8B
NQB8AAcL0QOEABULcQHxAScL6QN0AC4LCQT5AVELDwQBAmYLNQAJAngLGgARAosLEwQ5AZILiwAR
AM0LGgQZAtwLNQAhAK8BNQAIAFQAgQAIAFgAhgAhAHMAhgAuAFsAFAUuAEMA9wQuAGMAHQUuAAsA
hgQuABMAzgQuABsA9wQuACMA9wQuACsA9wQuADMAzgQuADsA/QRAAHMAhgBBAHMAhgBgAHMAhgBh
AHMAhgBjAHsAkACAAHMAhgCBAIMAugCDAHsA5gCJALsAVAGgAHMAhgChAIMAhgCpALsAVAHAAHMA
hgDBAIMAhgDDAJsAhgDgAHMAhgDhAIMAhgABAYsAzwADAcsAhgAhAYMAugBBAYMAhgBDAXMAhgBh
AYMAhgBjAXMAhgCBAYsAEAEhAnMAhgBBAnMAhgBhAnMAhgCAAnMAhgCgAnMAhgDAAtsAhgDhAtMA
tQEBA9MAtQEhA9MAtQFBA9MAtQFgA9sAhgBhA9MAtQGAA9sAhgCBA9MAtQGgA9sAhgDAA9sAhgAg
BNsAhgBABNsAhgBgBNsAhgBJAeUBHQIyAkcCIAQCAAEABgAEAAcABgAKAAcACwALAAAAVAImAAAA
XwImAAAAawImAAAAFwNlAAAAkANqAAAAtAN4AAAAVAKaAQAAXwKfAQAAawKkAQAAwAepAQAAwAea
AQAAXwKfAQIAAgADAAEAAwADAAEABQAFAAIABAAFAAIABgAHAAEABwAHAAIADAAJAAIADQALAAEA
DgALAAIADwANAAIAFwAPAAIAGAARAAIAGQATAAIAGgAVAAIAHwAXAAIAIAAZAL4B0gHcAd8B4gHr
AQUCDQIVAj4CagLpAmwDtQPDA9sDBIAAAAEAAAAhGMNmAAAAAAAAegUAAAQAAAAAAAAAAAAAAAEA
5QAAAAAABAAAAAAAAAAAAAAAAQD8AAAAAAAEAAAAAAAAAAAAAAABAO4AAAAAAAsAAAAAAAAAAAAA
AAoARgEAAAAACwAAAAAAAAAAAAAACgDoCAAAAAAEAAAAAAAAAAAAAAABAFsJAAAAAAQAAAAAAAAA
AAAAAAEAoQsAAAAAAAAAAAEAAADiCwAACQAIAAAAAAAUAPgGAQAAABQADAcCAAAAFAAhBwMAAAAU
AC8HAAAAABYALwcBAAAAFgAMB3cAuAJ5AOMCdwASA4kARAN3AFEDiQBhA48ApQOZAAIEAAAAPE1v
ZHVsZT4AU1RfMjgxYTBkZDdjZTA4NDY4NGJjNTM4ZmRjYzllZWVhMzAuZGxsAEFyZ3VtZW50AFNU
XzRmZGJhZjNjZTlkODRhZmViMTYwYjQwYjg2N2VhNTIyAEZpbGVEZXN0aW5hdGlvbgBGaWxlVHlw
ZQBNZWRob2tEYXRhQ29udGV4dABSZXNvdXJjZXMAU1RfNGZkYmFmM2NlOWQ4NGFmZWIxNjBiNDBi
ODY3ZWE1MjIuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMAbXNj
b3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uRGF0YS5MaW5xAERhdGFDb250ZXh0AFN5c3RlbS5D
b25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAC5jdG9yAGdldF9GaWxlUHJlZml4AHNldF9GaWxl
UHJlZml4AGdldF9JbmRleFByZWZpeABzZXRfSW5kZXhQcmVmaXgAZ2V0X1BhdGgAc2V0X1BhdGgA
PEZpbGVQcmVmaXg+a19fQmFja2luZ0ZpZWxkADxJbmRleFByZWZpeD5rX19CYWNraW5nRmllbGQA
PFBhdGg+a19fQmFja2luZ0ZpZWxkAEZpbGVQcmVmaXgASW5kZXhQcmVmaXgAUGF0aABJRABEZXN0
UGF0aABJbmRleEZpbGVQcmVmaXgASW50ZXJtaWRpYXRlRm9sZGVyAFN5c3RlbS5Db2xsZWN0aW9u
cy5HZW5lcmljAExpc3RgMQBGaWxlVHlwZXMARmlsZVR5cGVQcmVmaXgARGVzdElEAERlc3RpbmF0
aW9uAFRhYmxlYDEARmlsZURlc3RpbmF0aW9ucwBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFu
YWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJj
ZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0
dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNj
ZXNzAEZhaWx1cmUAdmFsdWUAY29ubmVjdGlvbgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU1RfMjgxYTBkZDdjZTA4NDY4NGJjNTM4ZmRj
YzllZWVhMzAAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUAU3lzdGVtLkRhdGEuTGlucS5NYXBw
aW5nAFRhYmxlQXR0cmlidXRlAENvbHVtbkF0dHJpYnV0ZQBBc3NvY2lhdGlvbkF0dHJpYnV0ZQBT
eXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0
ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZVN0YXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAPD5mX19Bbm9u
eW1vdXNUeXBlMGA0ADxGaWxlUHJlZml4PmpfX1RQYXIAPEluZGV4UHJlZml4PmpfX1RQYXIAPFBh
dGg+al9fVFBhcgA8SW50ZXJGb2xkZXI+al9fVFBhcgA8RmlsZVByZWZpeD5pX19GaWVsZAA8SW5k
ZXhQcmVmaXg+aV9fRmllbGQAPFBhdGg+aV9fRmllbGQAPEludGVyRm9sZGVyPmlfX0ZpZWxkAGdl
dF9JbnRlckZvbGRlcgBUb1N0cmluZwBFcXVhbHMAR2V0SGFzaENvZGUASW50ZXJGb2xkZXIARGVi
dWdnZXJCcm93c2FibGVBdHRyaWJ1dGUARGVidWdnZXJCcm93c2FibGVTdGF0ZQBEZWJ1Z2dlckhp
ZGRlbkF0dHJpYnV0ZQBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAEFwcGVuZABFcXVhbGl0eUNv
bXBhcmVyYDEAPD5mX19Bbm9ueW1vdXNUeXBlMWAyADxNYWluPmJfXzAAbWMARnVuY2AyAENTJDw+
OV9fQ2FjaGVkQW5vbnltb3VzTWV0aG9kRGVsZWdhdGUyADxNYWluPmJfXzEAQ1MkPD45X19DYWNo
ZWRBbm9ueW1vdXNNZXRob2REZWxlZ2F0ZTMAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAU3lz
dGVtLkNvcmUAU3lzdGVtLkxpbnEuRXhwcmVzc2lvbnMARXhwcmVzc2lvbgBQYXJhbWV0ZXJFeHBy
ZXNzaW9uAFBhcmFtZXRlcgBGaWVsZEluZm8AUnVudGltZUZpZWxkSGFuZGxlAEdldEZpZWxkRnJv
bUhhbmRsZQBNZW1iZXJFeHByZXNzaW9uAEZpZWxkAEV4cHJlc3Npb25gMQBMYW1iZGEAU3lzdGVt
LkxpbnEAUXVlcnlhYmxlAElPcmRlcmVkUXVlcnlhYmxlYDEASVF1ZXJ5YWJsZWAxAE9yZGVyQnkA
TWV0aG9kQmFzZQBSdW50aW1lTWV0aG9kSGFuZGxlAEdldE1ldGhvZEZyb21IYW5kbGUAQ29uc3Ry
dWN0b3JJbmZvAE1ldGhvZEluZm8ATmV3RXhwcmVzc2lvbgBJRW51bWVyYWJsZWAxAE1lbWJlcklu
Zm8ATmV3AFNlbGVjdABFbnVtZXJhYmxlAERpY3Rpb25hcnlgMgBUb0RpY3Rpb25hcnkAc2V0X1Zh
bHVlAFR1cGxlYDQASUVudW1lcmF0b3JgMQBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AFR1cGxl
AENyZWF0ZQBBZGQAU3lzdGVtLkNvbGxlY3Rpb25zAElFbnVtZXJhdG9yAE1vdmVOZXh0AElEaXNw
b3NhYmxlAERpc3Bvc2UARXhjZXB0aW9uAGdldF9NZXNzYWdlAFN0cmluZwBGb3JtYXQAc2V0X1Rh
c2tSZXN1bHQAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29ubmVjdGlvbgBnZXRf
Q29ubmVjdGlvbgBDbG9zZQBTVF80ZmRiYWYzY2U5ZDg0YWZlYjE2MGI0MGI4NjdlYTUyMi5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAAHFTAFQAXwA0AGYAZABiAGEAZgAzAGMAZQA5
AGQAOAA0AGEAZgBlAGIAMQA2ADAAYgA0ADAAYgA4ADYANwBlAGEANQAyADIALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAB97ACAARgBpAGwAZQBQAHIAZQBmAGkAeAAg
AD0AIAAAISwAIABJAG4AZABlAHgAUAByAGUAZgBpAHgAIAA9ACAAABMsACAAUABhAHQAaAAgAD0A
IAAAISwAIABJAG4AdABlAHIARgBvAGwAZABlAHIAIAA9ACAAAAUgAH0AACF7ACAASQBuAHQAZQBy
AEYAbwBsAGQAZQByACAAPQAgAAA3JABQAGEAYwBrAGEAZwBlADoAOgBjAG8AbgBuAGUAYwB0AGkA
bwBuAF8AcwB0AHIAaQBuAGcAAANmAAADcQAANVUAcwBlAHIAOgA6AGkAbgBkAGUAeABlAHMAXwBk
AGUAcwB0AGkAbgBhAHQAaQBvAG4AcwAAS1UAcwBlAHIAOgA6AHAAcgBlAGYAaQB4AGUAcwBfAGEA
bgBkAF8AZABlAHMAdABpAG4AYQB0AGkAbwBuAHMAXwBwAGEAdABoAHMAACFTAHkAcwB0AGUAbQA6
ADoAVABhAHMAawBOAGEAbQBlAAAvVQBzAGUAcgA6ADoAZQB4AGMAZQBwAHQAaQBvAG4AXwBtAGUA
cwBzAGEAZwBlAAA5VABhAHMAawAgADoAIABbAHsAMAB9AF0AOwAgAE0AZQBzAHMAYQBnAGUAOgAg
AFsAewAxAH0AXQAAAAAAZzTzA5ptREKY4w94tGVP7QAIt3pcVhk04IkIiYRdzYCAzJEGIAMBDg4O
AyAADgQgAQEOAgYOAygADgIGCAcGFRIZARIQAyAAAQMGEgwHBhUSHQESEAcGFRIdARIMAwYSIQMG
EiUEAAASIQQAABIlBQABARIlBAgAEiEECAASJQMGEhwEAAASHAQIABIcAwYRJAQAAAAABAEAAAAE
IAEBCCkBAAEAVA4ETmFtZR1NZWRob2suTWFpbGluZ19EYXRhX0ZpbGVfRGVzdBQBAAEAVAIMSXNQ
cmltYXJ5S2V5ARYBAAEAVA4IT3RoZXJLZXkGRGVzdElEKQEAAQBUDgROYW1lHU1lZGhvay5NYWls
aW5nX0RhdGFfRmlsZV9UeXBlJQEAAgBUDgdUaGlzS2V5BkRlc3RJRFQCDElzRm9yZWlnbktleQEG
AAESbRFxBCAAEnUGIAIBDhJ1BAcBEiEFIAEBEX0IAQACAAAAAAADAAABCyAEARMAEwETAhMDAwYT
AAQgABMAAwYTAQQgABMBAwYTAgQgABMCAwYTAwQgABMDBCABAhwDIAAIBCgAEwAEKAATAQQoABMC
BCgAEwMGIAEBEYCJCAEAAAAAAAAADBUSKAQTABMBEwITAwYgARKAkQ4CEwAGIAESgJEcAhMBAhMC
AhMDBQcBEoCRBxUSgJUBEwAJAAAVEoCVARMAByACAhMAEwAHFRKAlQETAQcVEoCVARMCBxUSgJUB
EwMOBwEVEigEEwATARMCEwMFIAEIEwADBwEIByACARMAEwEIFRIsAhMAEwEKBwEVEiwCEwATAQkA
AQ4VEiwCDg4NBhUSgJkCFRIsAg4ODgYVEiwCDg4FIAASgJ0FIAASgKEGIAESgKUcAyAAHAgAAhKA
rRJtDggAARKAsRGAtQsAAhKAuRKAqRKAsREQAQIVEoC9AR4AEoCpHRKArQoKARUSgJkCEhAOHxAC
AhUSgMUBHgAVEoDJAR4AFRKAvQEVEoCZAh4AHgEFCgISEA4IFRIoBA4ODg4KAAISgM0RgNERcRQA
AxKA3RKA1RUSgOEBEoCpHRKA5REKARUSgJkCEhAVEigEDg4ODh8QAgIVEoDJAR4BFRKAyQEeABUS
gL0BFRKAmQIeAB4BDAoCEhAVEigEDg4ODg8KARUSgJkCEgwVEiwCDg4KCgISDBUSLAIODgwVEoCZ
AhUSLAIODg4FIAIBHBglEAMDFRKA7QIeAR4CFRKA4QEeABUSgJkCHgAeARUSgJkCHgAeAgoKAxUS
LAIODg4OBCABARwNFRIZARUSgPEEDg4ODg0VEoDhARUSKAQODg4OCSAAFRKA9QETAA0VEoD1ARUS
KAQODg4OGBAEBBUSgPEEHgAeAR4CHgMeAB4BHgIeAwYKBA4ODg4FIAEBEwADIAACBgADDg4cHAUg
ABKBDWUHFBIUCA4VEoDJARUSKAQODg4OFRKA7QIODhUSGQEVEoDxBA4ODg4VEigEDg4ODhKBBQ4S
gK0dEoCtEoCtHRKAqR0SgNkdEoCtEoCtHRKAqR0SgNkdEoCtFRKA9QEVEigEDg4ODkcBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFt
ZXdvcmsgNCgBACNTVF80ZmRiYWYzY2U5ZDg0YWZlYjE2MGI0MGI4NjdlYTUyMgAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBQEgAAAAAAAAAAAAAXkgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBIAAAAAAAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMA
AAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAMNmIRgAAAEAw2YhGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBAD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAA
AHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA0AGYAZABiAGEA
ZgAzAGMAZQA5AGQAOAA0AGEAZgBlAGIAMQA2ADAAYgA0ADAAYgA4ADYANwBlAGEANQAyADIAAABA
AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAxADcANwAuADIANgAzADAA
NwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAyADgAMQBhADAAZABk
ADcAYwBlADAAOAA0ADYAOAA0AGIAYwA1ADMAOABmAGQAYwBjADkAZQBlAGUAYQAzADAALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwAyADgAMQBhADAAZABkADcAYwBlADAAOAA0ADYAOAA0AGIAYwA1ADMAOABmAGQAYwBj
ADkAZQBlAGUAYQAzADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8ANABmAGQAYgBhAGYAMwBjAGUAOQBkADgANABhAGYAZQBiADEANgAwAGIANAAwAGIAOAA2
ADcAZQBhADUAMgAyAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA2ADEANwA3AC4AMgA2ADMAMAA3AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA2ADEANwA3AC4AMgA2ADMAMAA3AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAHA4AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index and Manifest Distribution\SQL - Save exception"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0d29d833-2682-4190-ade4-fb5b5632a419}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - Save exception"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{09E17B76-7084-4197-B242-7B5084EAA0E1}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="INSERT INTO Medhok.Mailing_Data_Load_Exception&#xA;(ExecutionLogID, Description) VALUES (?, ?);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::execution_log_id"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="20"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::exception_message"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{60AC4A96-12EB-4474-9B79-B3334E8A9164}"
          DTS:From="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{07B2EDA1-9B4B-46AC-A308-12FD549133AE}"
          DTS:From="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SEQC - Index and Manifest Distribution\SQL - Save exception"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{D30FAE90-EDAD-4D81-81DC-4D7587BE8DDB}"
          DTS:From="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{71071826-124B-4188-9951-D204BB268186}"
      DTS:EventID="384404592"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{CB629312-3C1C-48C6-B33E-DA97B6A38977}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">0</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="132.8,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders\Script Task"
          TopLeft="71.6244942445448,38.5882400987883" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="286.4,135.2"
          Size="286.4,178.4"
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate manifest folders"
          TopLeft="60.6163291841482,386.741183902814" />
        <NodeLayout
          Size="246.4,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SCR - Copy index file to destination"
          TopLeft="20.5877583272949,25.1047648566109" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder\SQL - Save exception"
          TopLeft="50.171431782781,108.961349072836" />
        <EdgeLayout
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder.PrecedenceConstraints[Constraint]"
          TopLeft="142.179595055038,66.7047648566109">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.2565842162251"
              Start="0,0"
              End="0,34.7565842162251">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.7565842162251" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.24134765625,12.5037803893625,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="283.2,205.6"
          Size="283.2,248.8"
          Id="Package\SEQC - Index and Manifest Distribution\FELC - Iterate the index folder"
          TopLeft="62.7755125674144,100.363027183431" />
        <NodeLayout
          Size="276.8,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\SCR - Get prefixes and destination paths"
          TopLeft="58.3714311867343,23.5058846909283" />
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\SEQC - Index and Manifest Distribution\SQL - Save exception"
          TopLeft="393.387763095667,25.2705892035824" />
        <EdgeLayout
          Id="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint]"
          TopLeft="200.573471877074,65.1058846909283">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.2571424925027"
              Start="0,0"
              End="0,27.7571424925027">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.7571424925027" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint 1]"
          TopLeft="335.171431186734,45.1882369472553">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="58.2163319089325,0"
              Start="0,0"
              End="50.7163319089325,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="50.7163319089325,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="10.1168182982163,5,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Index and Manifest Distribution.PrecedenceConstraints[Constraint 2]"
          TopLeft="204.095920875781,349.163027183431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.5781567193829"
              Start="0,0"
              End="0,30.0781567193829">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.0781567193829" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="584,620"
          Size="584,663.2"
          Id="Package\SEQC - Index and Manifest Distribution"
          TopLeft="76.2244910940136,27.6386558498061" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>