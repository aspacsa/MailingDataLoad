<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/26/2016 12:51:29 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="WINDOWSDEV"
  DTS:CreatorName="WINDOWSDEV\Ernesto Rodriguez"
  DTS:DTSID="{BF453B37-5CE4-4E7D-9E0D-C782DBD7CC5C}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.3436.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ETL_Mailing_Data_File_Indexing"
  DTS:PackageType="5"
  DTS:VersionBuild="52"
  DTS:VersionGUID="{60A1441B-8592-4345-AC8A-E96B0C0547C2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{0E208039-65CF-4A21-8E6A-EDB45DECD8FA}"
      DTS:ObjectName="connection_string">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=MSSQLSERVER; User ID=sa; Password=sa; Initial Catalog=testdb; Connection Timeout=60;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{11CBFC64-B6FE-49E1-B220-55F0375615CE}"
      DTS:ObjectName="index_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Index</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A9382C1B-15E6-4EE6-8C55-51A61E6F0052}"
      DTS:ObjectName="manifest_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_2</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CB22605E-DC04-485B-A0B6-3D5D82547856}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_name">
      <DTS:VariableValue
        DTS:DataType="8">Default</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{81307A0F-309D-4D8E-A700-6B484AA80E90}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="index_prefixes">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{15EF2949-8D3F-44D4-89FC-B34899C88137}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="prefixes_and_destinations_paths">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SEQC - Index Generation"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{3B8EB5C9-6EE6-4122-8203-7BA563928D6C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQC - Index Generation">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index Generation\FELC - Iterate Index Directory for clean up"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{5E34496B-1E7C-4027-BDCF-717D1A173952}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="FELC - Iterate Index Directory for clean up">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{29CBE00F-C648-42ED-B715-4E43F6105783}"
            DTS:ObjectName="{29CBE00F-C648-42ED-B715-4E43F6105783}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Package::index_path]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Index" />
                <FEFEProperty
                  FileSpec="*.*" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SEQC - Index Generation\FELC - Iterate Index Directory for clean up\FSYS - Delete File"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="File System Task"
              DTS:DTSID="{693C3C00-B789-45C5-BFED-57A965EE24D3}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="FSYS - Delete File"
              DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; Â© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="DeleteFile"
                  TaskSourcePath="User::file_name"
                  TaskIsSourceVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{041BC27D-DBED-48F0-A6D8-7297D68EFBEA}"
              DTS:ObjectName="{041BC27D-DBED-48F0-A6D8-7297D68EFBEA}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::file_name" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index Generation\FELC - Iterate the manifest directory"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:Disabled="True"
          DTS:DTSID="{7C1DE02D-23C7-44EA-A763-DB970341F199}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="FELC - Iterate the manifest directory">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{00779E3F-87F6-4C94-8C76-C577428A9991}"
            DTS:ObjectName="{00779E3F-87F6-4C94-8C76-C577428A9991}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Package::manifest_path]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_2" />
                <FEFEProperty
                  FileSpec="*.*" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables />
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{19C57F35-996F-4174-BDB4-994AA9C091EE}"
              DTS:ObjectName="{19C57F35-996F-4174-BDB4-994AA9C091EE}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::file_name" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index Generation\SCR - Create new index files"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{0FEEA7FF-AA26-4A77-87F0-0F42FB0B4B0A}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR - Create new index files"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_2003c36a3ba04f01a079282f39f59ed3"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::index_prefixes,User::prefixes_and_destinations_paths,$Package::index_path">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Argument.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ST_2003c36a3ba04f01a079282f39f59ed3
{
    public sealed class Argument
    {
        public Argument(string FilePrefix, string IndexPrefix, string Path)
        {
            this.FilePrefix = FilePrefix;
            this.IndexPrefix = IndexPrefix;
            this.Path = Path;
        }

        public string FilePrefix { get; set; }
        public string IndexPrefix { get; set; }
        public string Path { get; set; }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_2003c36a3ba04f01a079282f39f59ed3.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3E54B56D-2D04-43BE-84B4-F93B0B0B1D69}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_2003c36a3ba04f01a079282f39f59ed3</RootNamespace>
    <AssemblyName>ST_2003c36a3ba04f01a079282f39f59ed3</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Argument.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
#endregion

namespace ST_2003c36a3ba04f01a079282f39f59ed3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string index_path = Dts.Variables["$Package::index_path"].Value.ToString();
            List<string> index_prefixes = (List<string>)Dts.Variables["User::index_prefixes"].Value;

            foreach (string prefix in index_prefixes)
            {
                string full_path = index_path + @"\" +  prefix + ".csv";
                //using (StreamWriter sw = File.CreateText(index_path))
                //{
                    //sw.WriteLine("Test Data");
                //}
            }
            
            
            
            //List<Tuple<string, string, string>> args = (List<Tuple<string, string, string>>)Dts.Variables["User::prefixes_and_destinations_paths"].Value; 



			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_2003c36a3ba04f01a079282f39f59ed3</msb:CodeName>
		<msb:DisplayName>ST_2003c36a3ba04f01a079282f39f59ed3</msb:DisplayName>
		<msb:ProjectId>{1335D4F0-90B2-410E-9033-4C6AE7DF2418}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_2003c36a3ba04f01a079282f39f59ed3.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Argument.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="f1d0cc10be974514bd704e3eee0bed86">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>13</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>105</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Settings.get_Default():ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Sett" +
    "ings")]

namespace ST_2003c36a3ba04f01a079282f39f59ed3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2003c36a3ba04f01a079282f39f59ed3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2003c36a3ba04f01a079282f39f59ed3")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2003c36a3ba04f01a079282f39f59ed3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_2003c36a3ba04f01a079282f39f59ed3.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAC0dKlgAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAvjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGQxAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
MQAAAAAAAEgAAAACAAUAeCIAAOwOAAABAAAAAAAAAMAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHICKA0AAAoCAygDAAAGAgQoBQAABgIFKAcAAAYqHgJ7AQAA
BCoiAgN9AQAABCoeAnsCAAAEKiICA30CAAAEKh4CewMAAAQqIgIDfQMAAAQqHgIoDQAACioTMAIA
LQAAAAEAABF+BAAABC0gcgEAAHDQAwAAAigQAAAKbxEAAApzEgAACgoGgAQAAAR+BAAABCoafgUA
AAQqHgKABQAABCoafgYAAAQqLnMNAAAGgAYAAAQqHgIoFAAACioAGzAEAIkAAAACAAARAigWAAAK
bxcAAApycwAAcG8YAAAKbxkAAApvGgAACgoCKBYAAApvFwAACnKdAABwbxgAAApvGQAACnQBAAAb
CwdvGwAACg0rGhIDKBwAAAoMBnLHAABwCHLLAABwKB0AAAomEgMoHgAACi3d3g4SA/4WAgAAG28f
AAAK3AIoFgAAChZvIAAACioAAAABEAAAAgBHACduAA4AAAAAHgIoIQAACioAAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAABQFAAAjfgAAgAUAAOQGAAAj
U3RyaW5ncwAAAABkDAAA2AAAACNVUwA8DQAAEAAAACNHVUlEAAAATA0AAKABAAAjQmxvYgAAAAAA
AAACAAABVx2iCQkDAAAA+iUzABYAAAEAAAAhAAAABgAAAAkAAAAQAAAABwAAACEAAAACAAAAGAAA
AAIAAAADAAAABgAAAAoAAAACAAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAAAAAGAMoAwwAKAOYA
0QAOAEYBHQEGAGIBwwAGADkCKAIGAGoCVQIGABsDAQMGAEYDNAMGAF0DNAMGAHoDNAMGAJkDNAMG
ALIDNAMGAMsDNAMGAOYDNAMGAAEENAMGABoENAMGAFMEMwQGAHMEMwQGAJEEMwQGAL8ErAQGANwE
wwAGAOEEwwAGAAUFNAMKADEFGwUKAEoFGwUOAGYFHQEOAIgFHQESAOEFwQUSAPkFwQUGADkGHgZ7
AEAGAAAGAGUGwwAGAHwGwwAAAAAAAQAAAAAAAQABAAEBEAAyADsABQABAAEAAAAQAF8AaQAFAAQA
CAAAARAAmABpAAkABgAMAAEAEAChADsADQAHAA8AAwEAAKwAAAARAAcAEQABAL0BIwABANkBIwAB
APYBIwARAEkCKgARAHYCLgARALoCUAAGBuMCXgBWgOsCYQBWgPMCYQBQIAAAAACGGGcBEwABAG0g
AAAAAIYIbQEaAAQAdSAAAAAAhgh8AR4ABAB+IAAAAACGCIsBGgAFAIYgAAAAAIYImwEeAAUAjyAA
AAAAhgirARoABgCXIAAAAACGCLQBHgAGAKAgAAAAAIMYZwEyAAcAqCAAAAAAkwiGAjYABwDhIAAA
AACTCJoCOwAHAOggAAAAAJMIpgJAAAcA8CAAAAAAlgjKAlQACAADIQAAAACGGGcBMgAIAPcgAAAA
AJEYXwWbAAgADCEAAAAAhgDeAjIACAC0IQAAAACGGGcBMgAIAAAAAQAMAgAAAgAXAgAAAwAjAgAA
AQD7AgAAAQD7AgAAAQD7AgAAAQD7AjkAZwEeAEEAZwEeAEkAZwEeAFEAZwEeAFkAZwEeAGEAZwEe
AGkAZwEeAHEAZwEeAHkAZwEeAIEAZwEeAIkAZwFvAJEAZwEyAAkAZwEyAJkAZwEyAKEAZwEyAKkA
8wR0AKkADgV7ACkAZwGAAMEAZwGMABEAZwEyANEAZwEyABkAmgWfANkA6wWkAOEAAgapAOkACwav
AAkAFQYaAAwASwa5ABQAWQbIAAEBbAbNABQAcwbVAAkBiAYyANkAkAZvABkAZwEyAAgAIABlAAgA
JABqACEAcwBqAC4AWwB2AS4AYwB/AS4ACwDoAC4AEwAwAS4AGwBZAS4AIwBZAS4AKwBZAS4AMwAw
AS4AOwBfAS4AQwBZAUAAcwBqAEEAcwBqAGAAcwBqAGEAcwBqAGMAewBqAIAAcwBqAIkAmwCSAKAA
cwBqAKMAqwBqAKkAmwCSAMAAcwBqAMEAcwBqAOAAcwBqAIcA2QACAAEAAwAEAAQABgAAAAwCJgAA
ABcCJgAAACMCJgAAADkCRgAAALICSwAAANYCWQACAAIAAwABAAMAAwACAAQABQABAAUABQACAAYA
BwABAAcABwACAAkACQACAAoACwABAAsACwACAAwADQCzAMIABIAAAAEAAAASGDZzAAAAAAAAOwAA
AAQAAAAAAAAAAAAAAAEAugAAAAAABAAAAAAAAAAAAAAAAQDDAAAAAAALAAAAAAAAAAAAAAAKAP4A
AAAAAAsAAAAAAAAAAAAAAAoAogUAAAAAAAAAAAEAAACfBgAABgAFAAAAAAAAPE1vZHVsZT4AU1Rf
MjAwM2MzNmEzYmEwNGYwMWEwNzkyODJmMzlmNTllZDMuZGxsAEFyZ3VtZW50AFNUXzIwMDNjMzZh
M2JhMDRmMDFhMDc5MjgyZjM5ZjU5ZWQzAFJlc291cmNlcwBTVF8yMDAzYzM2YTNiYTA0ZjAxYTA3
OTI4MmYzOWY1OWVkMy5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU2NyaXB0UmVzdWx0
cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBF
bnVtAC5jdG9yAGdldF9GaWxlUHJlZml4AHNldF9GaWxlUHJlZml4AGdldF9JbmRleFByZWZpeABz
ZXRfSW5kZXhQcmVmaXgAZ2V0X1BhdGgAc2V0X1BhdGgAPEZpbGVQcmVmaXg+a19fQmFja2luZ0Zp
ZWxkADxJbmRleFByZWZpeD5rX19CYWNraW5nRmllbGQAPFBhdGg+a19fQmFja2luZ0ZpZWxkAEZp
bGVQcmVmaXgASW5kZXhQcmVmaXgAUGF0aABTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdl
cgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1
bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJl
AGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNz
AEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtB
dHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVy
ZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9z
dGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRN
b2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUALmNjdG9y
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRf
RHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9W
YWx1ZQBUb1N0cmluZwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0YDEARW51bWVyYXRv
cgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AFN0cmluZwBDb25jYXQATW92ZU5leHQASURpc3Bv
c2FibGUARGlzcG9zZQBzZXRfVGFza1Jlc3VsdABTVF8yMDAzYzM2YTNiYTA0ZjAxYTA3OTI4MmYz
OWY1OWVkMy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAcVMAVABfADIAMAAwADMA
YwAzADYAYQAzAGIAYQAwADQAZgAwADEAYQAwADcAOQAyADgAMgBmADMAOQBmADUAOQBlAGQAMwAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAKSQAUABhAGMAawBhAGcA
ZQA6ADoAaQBuAGQAZQB4AF8AcABhAHQAaAAAKVUAcwBlAHIAOgA6AGkAbgBkAGUAeABfAHAAcgBl
AGYAaQB4AGUAcwAAA1wAAAkuAGMAcwB2AAAAAAA+137wHHieQrpH/90RqAO/AAi3elxWGTTgiQiJ
hF3NgIDMkQYgAwEODg4DIAAOBCABAQ4CBg4DKAAOAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQES
GQQIABIVBAgAEhkDBhIQBAAAEhAECAASEAIGCAMGERgEAAAAAAQBAAAABCABAQgGAAESVRFZBCAA
El0GIAIBDhJdBAcBEhUFIAEBEWUIAQACAAAAAAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwFFRJ5
AQ4IIAAVEX0BEwAFFRF9AQ4EIAATAAcABA4ODg4OAyAAAg4HBA4VEnkBDg4VEX0BDkcBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFt
ZXdvcmsgNCgBACNTVF8yMDAzYzM2YTNiYTA0ZjAxYTA3OTI4MmYzOWY1OWVkMwAABQEAAAAAFgEA
EUNvcHlyaWdodCBAICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBAACMMQAAAAAAAAAAAACuMQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoDEAAAAAAAAAAAAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABADZzEhgAAAEANnMSGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwAyADAAMAAzAGMAMwA2AGEAMwBiAGEAMAA0AGYAMAAxAGEAMAA3ADkAMgA4ADIAZgAzADkAZgA1
ADkAZQBkADMAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAxADYA
MgAuADIAOQA0ADkANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwAy
ADAAMAAzAGMAMwA2AGEAMwBiAGEAMAA0AGYAMAAxAGEAMAA3ADkAMgA4ADIAZgAzADkAZgA1ADkA
ZQBkADMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwAyADAAMAAzAGMAMwA2AGEAMwBiAGEAMAA0AGYAMAAxAGEAMAA3
ADkAMgA4ADIAZgAzADkAZgA1ADkAZQBkADMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8AMgAwADAAMwBjADMANgBhADMAYgBhADAANABmADAAMQBhADAANwA5
ADIAOAAyAGYAMwA5AGYANQA5AGUAZAAzAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADEANgAyAC4AMgA5ADQAOQA0AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADEANgAyAC4AMgA5ADQAOQA0AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAMAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="105"
                Column="13" />
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index Generation\SCR - Get prefixes and destination paths"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{2276FBC2-A8B7-42A5-931E-1F54739003B1}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR - Get prefixes and destination paths"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4fdbaf3ce9d84afeb160b40b867ea522"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="$Package::connection_string"
              ReadWriteVariables="User::index_prefixes,User::prefixes_and_destinations_paths">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4fdbaf3ce9d84afeb160b40b867ea522")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4fdbaf3ce9d84afeb160b40b867ea522")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Argument.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    public sealed class Argument
    {
        public Argument(string FilePrefix, string IndexPrefix, string Path)
        {
            this.FilePrefix = FilePrefix;
            this.IndexPrefix = IndexPrefix;
            this.Path = Path;
        }

        public string FilePrefix { get; set; }
        public string IndexPrefix { get; set; }
        public string Path { get; set; }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="MedhokDataContext.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    public sealed class MedhokDataContext : DataContext
    {
        public Table<FileType> FileTypes;
        public Table<FileDestination> FileDestinations;
        public MedhokDataContext(string connection) : base(connection) { }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Linq;
using System.Collections.Generic;
#endregion

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            MedhokDataContext db = null;
            try
            {
                string cnn_str = Dts.Variables["$Package::connection_string"].Value.ToString();         //Get the connection string      
                db = new MedhokDataContext(cnn_str);                                                    //Use medhok context previously defined and connect to it
                var query = from f in db.FileTypes
                            orderby f.FileTypePrefix
                            select new
                            {
                                FilePrefix = f.FileTypePrefix,
                                IndexPrefix = f.Destination.IndexFilePrefix,
                                Path = f.Destination.DestPath
                            };
                

                List<string> unique_prefixes = (    from q in query
                                                    orderby q.FilePrefix
                                                    select q.IndexPrefix
                                                ).Distinct().ToList();
                Dts.Variables["User::index_prefixes"].Value = unique_prefixes;


                List<Tuple<string, string, string>> arguments = new List<Tuple<string, string, string>>();
                foreach (var row in query)
                {
                    arguments.Add( Tuple.Create( row.FilePrefix, row.IndexPrefix, row.Path ) );
                }
                Dts.Variables["User::prefixes_and_destinations_paths"].Value = arguments;
            }
            catch
            {
            }
            finally
            {
                db.Connection.Close();
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="FileType.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq.Mapping;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    [Table(Name="Medhok.Mailing_Data_File_Type")]
    public sealed class FileType
    {
        [Column(IsPrimaryKey=true)]
        public int ID;

        [Column]
        public string FileTypePrefix;

        [Column]
        public int DestID;

        [Association(ThisKey = "DestID", IsForeignKey = true)]
        public FileDestination Destination;

    }
}]]></ProjectItem>
              <ProjectItem
                Name="FileDestination.cs"
                Encoding="UTF8"><![CDATA[using System.Collections.Generic;
using System.Data.Linq.Mapping;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    [Table(Name="Medhok.Mailing_Data_File_Dest")]
    public sealed class FileDestination
    {
        [Column(IsPrimaryKey=true)]
        public int ID;

        [Column]
        public string DestPath;

        [Column]
        public string IndexFilePrefix;

        [Association(OtherKey = "DestID")]
        public List<FileType> FileTypes;
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_4fdbaf3ce9d84afeb160b40b867ea522</msb:CodeName>
		<msb:DisplayName>ST_4fdbaf3ce9d84afeb160b40b867ea522</msb:DisplayName>
		<msb:ProjectId>{F3366BAD-25B7-4DDC-BCF9-D1AE339070CC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4fdbaf3ce9d84afeb160b40b867ea522.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="MedhokDataContext.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="FileType.cs"/>
		<msb:File Include="FileDestination.cs"/>
		<msb:File Include="Argument.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Settings.get_Default():ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Sett" +
    "ings")]

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_4fdbaf3ce9d84afeb160b40b867ea522.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6A4C00A5-8759-4757-A987-979F1E4D7BB6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4fdbaf3ce9d84afeb160b40b867ea522</RootNamespace>
    <AssemblyName>ST_4fdbaf3ce9d84afeb160b40b867ea522</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.Linq" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Argument.cs" />
    <Compile Include="FileDestination.cs" />
    <Compile Include="FileType.cs" />
    <Compile Include="MedhokDataContext.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_4fdbaf3ce9d84afeb160b40b867ea522.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKYVKlgAAAAAAAAAAOAAAiELAQsAACIAAAAIAAAAAAAArkEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFxBAABPAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtCEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
QQAAAAAAAEgAAAACAAUAeCYAAOQaAAABAAAAAAAAAMAlAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHICKA0AAAoCAygDAAAGAgQoBQAABgIFKAcAAAYqHgJ7AQAA
BCoiAgN9AQAABCoeAnsCAAAEKiICA30CAAAEKh4CewMAAAQqIgIDfQMAAAQqHgIoDQAACioeAigN
AAAKKiICAygSAAAKKh4CKA0AAAoqAAAAEzACAC0AAAABAAARfg4AAAQtIHIBAABw0AYAAAIoFAAA
Cm8VAAAKcxYAAAoKBoAOAAAEfg4AAAQqGn4PAAAEKh4CgA8AAAQqGn4QAAAEKi5zEAAABoAQAAAE
Kh4CKBgAAAoqcgIoDQAACgIDfRwAAAoCBH0dAAAKAgV9HgAACioeAnscAAAKKh4Cex0AAAoqHgJ7
HgAACioTMAIAcwAAAAIAABFzHwAACgoGcnMAAHBvIAAACiYGAnscAAAKjAIAABtvIQAACiYGcpMA
AHBvIAAACiYGAnsdAAAKjAMAABtvIQAACiYGcrUAAHBvIAAACiYGAnseAAAKjAQAABtvIQAACiYG
cskAAHBvIAAACiYGbyIAAAoqABMwAwBTAAAAAwAAEQN1AQAAGwoGLEcoIwAACgJ7HAAACgZ7HAAA
Cm8kAAAKLC8oJQAACgJ7HQAACgZ7HQAACm8mAAAKLBcoJwAACgJ7HgAACgZ7HgAACm8oAAAKKhYq
ABMwAwBTAAAABAAAESBFr8wwCiApVVWlBlooIwAACgJ7HAAACm8pAAAKWAogKVVVpQZaKCUAAAoC
ex0AAApvKgAAClgKIClVVaUGWignAAAKAnseAAAKbysAAApYCgYqABswBwC+AgAABQAAERQKAigs
AAAKby0AAApyzwAAcG8uAAAKby8AAApvIgAACgsHcwoAAAYKBnsMAAAE0AQAAAIoFAAACnIHAQBw
KDAAAAoTBhEG0AkAAAQoMQAACigyAAAKF40qAAABEwcRBxYRBqIRBygBAAArKAIAACvQBAAAAigU
AAAKcgcBAHAoMAAAChMI0DUAAArQCAAAGyg2AAAKdDUAAAEZjSkAAAETCREJFhEI0AkAAAQoMQAA
CigyAAAKohEJFxEI0AsAAAQoMQAACigyAAAK0AYAAAQoMQAACigyAAAKohEJGBEI0AsAAAQoMQAA
CigyAAAK0AUAAAQoMQAACigyAAAKohEJGY02AAABEwoRChbQNwAACtAIAAAbKDYAAAp0NgAAAaIR
ChfQOAAACtAIAAAbKDYAAAp0NgAAAaIRChjQOQAACtAIAAAbKDYAAAp0NgAAAaIRCig6AAAKF40q
AAABEwsRCxYRCKIRCygDAAArKAQAACsMCNAIAAAbKBQAAApyCwEAcCgwAAAKEwwRDNA3AAAK0AgA
ABsoNgAACnQ2AAABKDwAAAoXjSoAAAETDRENFhEMohENKAUAACsoBgAAK9AIAAAbKBQAAApyCwEA
cCgwAAAKEw4RDtA4AAAK0AgAABsoNgAACnQ2AAABKDwAAAoXjSoAAAETDxEPFhEOohEPKAUAACso
BwAAKygIAAArKAkAACsNAigsAAAKby0AAApyDwEAcG8uAAAKCW8/AAAKc0AAAAoTBAhvQQAAChMQ
KyoREG9CAAAKEwURBBEFbzcAAAoRBW84AAAKEQVvOQAACigKAAArb0QAAAoREG9FAAAKLc3eDBEQ
LAcREG9GAAAK3AIoLAAACm8tAAAKcjkBAHBvLgAAChEEbz8AAAreAybeAN4MBm9HAAAKb0gAAArc
AigsAAAKFm9JAAAKKgAAQUwAAAIAAAA/AgAANwAAAHYCAAAMAAAAAAAAAAAAAAACAAAAngIAAKAC
AAADAAAAAQAAAQIAAAACAAAAowIAAKUCAAAMAAAAAAAAAB4CKEoAAAoqAAAAALQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAkCQAAI34AAJAJAAAICwAAI1N0
cmluZ3MAAAAAmBQAAIgBAAAjVVMAIBYAABAAAAAjR1VJRAAAADAWAAC0BAAAI0Jsb2IAAAAAAAAA
AgAAAVcdogkJDwAAAPolMwAWAAABAAAAQAAAAAoAAAAWAAAAGgAAAAwAAABKAAAAAgAAACoAAAAF
AAAABAAAAAkAAAANAAAACwAAAAEAAAAHAAAAAQAAAAEAAAADAAAACgAAAAAACgABAAAAAAAGAPUA
7gAKAA0B/AAOAC4BGQESAI4BZQEGAKoB7gAGAKcCjAIKANoC/AAGAAQD8wIGADUDIAMGAPED1wMG
ABwECgQGADMECgQGAFAECgQGAG8ECgQGAIgECgQGAKEECgQGALwECgQGANcECgQGAPAECgQGACkF
CQUGAEkFCQUGAGcFCQUKAJsFggUKAKoFggUKALoFggUGAOIFzwUGAP8F7gAGAAQG7gAGACgGCgQO
AFQGPgYOAG0GPgYSAIkGZQEGAE4HzwUGAGkHzwUGAIAHzwUGAKQHmAcGALkHjAISAMwHZQEWACUI
BQgWAD0IBQgaAH0IZQgaAIgIZQgGAKYICgQGALAI7gAaANYIZQgaAO0IZQgGAAEJ7gAaABQJCAka
AB4JCAkaADIJCAkGAEcJCgQGAFIJ7gAGAHoJCgQGAIoJCgQaAJUJZQgGAKMJjAIGALEJCgQaANkJ
CAkGAPUJ7gAGAP0JjAIGACUK7gAGAEkKNgoGAF4K7gAeAJEKfgoAAAAAAQAAAAAAAQABAAEBEAAy
ADsABQABAAEAAQEQAF8AOwAFAAQACAABARAAbwA7AAUACAAJAAEBEAB4ADsACQAMAAoAAAAQAIoA
lAAFAA4ACwAAARAAwwCUAA0AEAAPAAEAEADMADsAEQARABIAAwEAANcAAAAVABEAFAAAARAAqwYA
AAUAFAAUAAEABQIjAAEAIQIjAAEAPgIjAAYAcAIqAAYAcwIjAAYAfAIjAAYArgItAAYAcAIqAAYA
uAIjAAYAxwIqAAYAzgI5AAYArgI9AAYA4gJFABEAFANNABEAQQNRABEAhQNvAAYGrgMqAFaAtgN9
AFaAvgN9ACEA+AZrASEADQd0ASEAIwd9AVAgAAAAAIYYrwETAAEAbSAAAAAAhgi1ARoABAB1IAAA
AACGCMQBHgAEAH4gAAAAAIYI0wEaAAUAhiAAAAAAhgjjAR4ABQCPIAAAAACGCPMBGgAGAJcgAAAA
AIYI/AEeAAYAoCAAAAAAhhivATUABwCoIAAAAACGGK8BNQAHALAgAAAAAIYYrwEeAAcAuSAAAAAA
gxivATUACADEIAAAAACTCFEDVQAIAP0gAAAAAJMIZQNaAAgABCEAAAAAkwhxA18ACAAMIQAAAACW
CJUDcwAJAB8hAAAAAIYYrwE1AAkAEyEAAAAAkRiCBl0BCQCcIgAAAACGAKkDNQAJALQlAAAAAIYY
rwE1AAkAJyEAAAAAhhivAWEBCQBEIQAAAACGCLUBbwEMAEwhAAAAAIYI0wF4AQwAVCEAAAAAhgjz
AYEBDABcIQAAAADGADIHGgAMANwhAAAAAMYAOweGAQwAPCIAAAAAxgBCB4sBDQAAAAEAVAIAAAIA
XwIAAAMAawIAAAEAxgMAAAEAxgMAAAEAxgMAAAEAzAMAAAEAxgMAAAEAVAIAAAIAXwIAAAMAawIA
AAEAxgNRAK8BHgBZAK8BHgBhAK8BHgBpAK8BHgBxAK8BHgB5AK8BHgCBAK8BHgCJAK8BHgCRAK8B
HgCZAK8BHgChAK8BiwCpAK8BNQAJAK8BNQCxAK8BNQC5AK8BNQDBAK8BNQDJAK8BNQARAK8BHgDR
AK8BNQDZABYGNgHZADEGPQFBAK8BQgHxAK8BTgEZAK8BNQABAa8BNQAJAa8BngEZAa8BNQAMAPgG
awEMAA0HdAEMACMHfQEhAa8BNQAhAbIHuQEhAbIHwwEJADIHGgAsAJUD3gEsADsH6AE0AJUD3gE0
ADsH6AE8AJUD3gE8ADsH6AEsAEIHDQI0AEIHDQI8AEIHDQIhAN4HFwIxAS8IHQI5AUYIIwJBAU8I
KgJJAZwILgJZAcMINwJJAecIQAJJAfoITAKBAT8JaQJEAK8BYQGZAWYJlwJEALUBbwFEANMBeAFE
APMBgQFJAbwJogKBAcAJyAJJAccJ9AKBAdAJGwPRAeQJMQNBAesJQgNMAK8BNQBUAAsKYQNcABkK
bwHpASsKeANMADIKkwPxAVUKmQP5AWoKNQARAJ4KnQMBAq0KNQAxAbMKiwAhAK8BNQAIAEgAgQAI
AEwAhgAhAHMAhgAuAFsAiwQuAGMAlAQuAAsA/QMuABMARQQuABsAbgQuACMAbgQuACsAbgQuADMA
RQQuADsAdAQuAEMAbgRAAHMAhgBBAHMAhgBgAHMAhgBhAHMAhgBjAHsAkACAAHMAhgCBAIMAugCD
AHsA5gCJALsAVAGgAHMAhgChAIMAhgCpALsAVAHAAHMAhgDBAIMAhgDDAJsAhgDgAHMAhgDhAIsA
zwABAYMAugADAcsAhgAhAYMAhgBBAYMAhgBDAXMAhgBhAYsAEAEBAnMAhgCAAtsAhgCBAtMApQGh
AtMApQHBAtMApQEAA9sAhgAgA9sAhgBAA9sAhgBJAdABAAITAqMDAgABAAYABAAHAAYACgAHAAAA
VAImAAAAXwImAAAAawImAAAABANlAAAAfQNqAAAAoQN4AAAAVAKPAQAAXwKUAQAAawKZAQIAAgAD
AAEAAwADAAIABAAFAAEABQAFAAIABgAHAAEABwAHAAIADAAJAAIADQALAAEADgALAAIADwANAAIA
FQAPAAIAFgARAAIAFwATAK4BwAHKAc0B1gHwAfgBjwJHA1QDawMEgAAAAQAAABIYc28AAAAAAAA7
AAAABAAAAAAAAAAAAAAAAQDlAAAAAAAEAAAAAAAAAAAAAAABAPwAAAAAAAQAAAAAAAAAAAAAAAEA
7gAAAAAACwAAAAAAAAAAAAAACgBGAQAAAAALAAAAAAAAAAAAAAAKAOYHAAAAAAQAAAAAAAAAAAAA
AAEAWQgAAAAABAAAAAAAAAAAAAAAAQByCgAAAAAAAAAAAQAAAMIKAAAJAAgAAAAAABQAwQYBAAAA
FADVBgIAAAAUAOoGZwBeAmkAiQJnALcCdwDoAmcAAANpABADdwAQA3sALQN9AC0DhwCNAwAAAAAA
PE1vZHVsZT4AU1RfNGZkYmFmM2NlOWQ4NGFmZWIxNjBiNDBiODY3ZWE1MjIuZGxsAEFyZ3VtZW50
AFNUXzRmZGJhZjNjZTlkODRhZmViMTYwYjQwYjg2N2VhNTIyAEZpbGVEZXN0aW5hdGlvbgBGaWxl
VHlwZQBNZWRob2tEYXRhQ29udGV4dABSZXNvdXJjZXMAU1RfNGZkYmFmM2NlOWQ4NGFmZWIxNjBi
NDBiODY3ZWE1MjIuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMA
bXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uRGF0YS5MaW5xAERhdGFDb250ZXh0AFN5c3Rl
bS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZT
VEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAC5jdG9yAGdldF9GaWxlUHJlZml4AHNldF9G
aWxlUHJlZml4AGdldF9JbmRleFByZWZpeABzZXRfSW5kZXhQcmVmaXgAZ2V0X1BhdGgAc2V0X1Bh
dGgAPEZpbGVQcmVmaXg+a19fQmFja2luZ0ZpZWxkADxJbmRleFByZWZpeD5rX19CYWNraW5nRmll
bGQAPFBhdGg+a19fQmFja2luZ0ZpZWxkAEZpbGVQcmVmaXgASW5kZXhQcmVmaXgAUGF0aABJRABE
ZXN0UGF0aABJbmRleEZpbGVQcmVmaXgAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMATGlzdGAx
AEZpbGVUeXBlcwBGaWxlVHlwZVByZWZpeABEZXN0SUQARGVzdGluYXRpb24AVGFibGVgMQBGaWxl
RGVzdGluYXRpb25zAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFu
AFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVz
b3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3Rh
bmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1
ZQBjb25uZWN0aW9uAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVB
dHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp
bGl0eUF0dHJpYnV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBTeXN0ZW0uRGF0YS5MaW5x
Lk1hcHBpbmcAVGFibGVBdHRyaWJ1dGUAQ29sdW1uQXR0cmlidXRlAEFzc29jaWF0aW9uQXR0cmli
dXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5
AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQA8PmZf
X0Fub255bW91c1R5cGUwYDMAPEZpbGVQcmVmaXg+al9fVFBhcgA8SW5kZXhQcmVmaXg+al9fVFBh
cgA8UGF0aD5qX19UUGFyADxGaWxlUHJlZml4PmlfX0ZpZWxkADxJbmRleFByZWZpeD5pX19GaWVs
ZAA8UGF0aD5pX19GaWVsZABUb1N0cmluZwBFcXVhbHMAR2V0SGFzaENvZGUARGVidWdnZXJCcm93
c2FibGVBdHRyaWJ1dGUARGVidWdnZXJCcm93c2FibGVTdGF0ZQBEZWJ1Z2dlckhpZGRlbkF0dHJp
YnV0ZQBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVyAEFwcGVuZABFcXVhbGl0eUNvbXBhcmVyYDEA
U2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBW
YXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAU3lzdGVtLkNvcmUAU3lzdGVtLkxpbnEuRXhwcmVz
c2lvbnMARXhwcmVzc2lvbgBQYXJhbWV0ZXJFeHByZXNzaW9uAFBhcmFtZXRlcgBGaWVsZEluZm8A
UnVudGltZUZpZWxkSGFuZGxlAEdldEZpZWxkRnJvbUhhbmRsZQBNZW1iZXJFeHByZXNzaW9uAEZp
ZWxkAEV4cHJlc3Npb25gMQBMYW1iZGEARnVuY2AyAFN5c3RlbS5MaW5xAFF1ZXJ5YWJsZQBJT3Jk
ZXJlZFF1ZXJ5YWJsZWAxAElRdWVyeWFibGVgMQBPcmRlckJ5AE1ldGhvZEJhc2UAUnVudGltZU1l
dGhvZEhhbmRsZQBHZXRNZXRob2RGcm9tSGFuZGxlAENvbnN0cnVjdG9ySW5mbwBNZXRob2RJbmZv
AE5ld0V4cHJlc3Npb24ASUVudW1lcmFibGVgMQBNZW1iZXJJbmZvAE5ldwBTZWxlY3QAUHJvcGVy
dHkARGlzdGluY3QARW51bWVyYWJsZQBUb0xpc3QAc2V0X1ZhbHVlAFR1cGxlYDMASUVudW1lcmF0
b3JgMQBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AFR1cGxlAENyZWF0ZQBBZGQAU3lzdGVtLkNv
bGxlY3Rpb25zAElFbnVtZXJhdG9yAE1vdmVOZXh0AElEaXNwb3NhYmxlAERpc3Bvc2UAU3lzdGVt
LkRhdGEAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29ubmVjdGlvbgBnZXRfQ29ubmVjdGlvbgBDbG9z
ZQBzZXRfVGFza1Jlc3VsdABTVF80ZmRiYWYzY2U5ZDg0YWZlYjE2MGI0MGI4NjdlYTUyMi5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAAHFTAFQAXwA0AGYAZABiAGEAZgAzAGMAZQA5
AGQAOAA0AGEAZgBlAGIAMQA2ADAAYgA0ADAAYgA4ADYANwBlAGEANQAyADIALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAB97ACAARgBpAGwAZQBQAHIAZQBmAGkAeAAg
AD0AIAAAISwAIABJAG4AZABlAHgAUAByAGUAZgBpAHgAIAA9ACAAABMsACAAUABhAHQAaAAgAD0A
IAAABSAAfQAANyQAUABhAGMAawBhAGcAZQA6ADoAYwBvAG4AbgBlAGMAdABpAG8AbgBfAHMAdABy
AGkAbgBnAAADZgAAA3EAAClVAHMAZQByADoAOgBpAG4AZABlAHgAXwBwAHIAZQBmAGkAeABlAHMA
AEtVAHMAZQByADoAOgBwAHIAZQBmAGkAeABlAHMAXwBhAG4AZABfAGQAZQBzAHQAaQBuAGEAdABp
AG8AbgBzAF8AcABhAHQAaABzAAAAAAAyhr4QhEKET42CR40sjeliAAi3elxWGTTgiQiJhF3NgIDM
kQYgAwEODg4DIAAOBCABAQ4CBg4DKAAOAgYIBwYVEhkBEhADIAABAwYSDAcGFRIdARIQBwYVEh0B
EgwDBhIhAwYSJQQAABIhBAAAEiUFAAEBEiUECAASIQQIABIlAwYSHAQAABIcBAgAEhwDBhEkBAAA
AAAEAQAAAAQgAQEIKQEAAQBUDgROYW1lHU1lZGhvay5NYWlsaW5nX0RhdGFfRmlsZV9EZXN0FAEA
AQBUAgxJc1ByaW1hcnlLZXkBFgEAAQBUDghPdGhlcktleQZEZXN0SUQpAQABAFQOBE5hbWUdTWVk
aG9rLk1haWxpbmdfRGF0YV9GaWxlX1R5cGUlAQACAFQOB1RoaXNLZXkGRGVzdElEVAIMSXNGb3Jl
aWduS2V5AQYAARJtEXEEIAASdQYgAgEOEnUEBwESIQUgAQERfQgBAAIAAAAAAAMAAAEJIAMBEwAT
ARMCAwYTAAQgABMAAwYTAQQgABMBAwYTAgQgABMCBCABAhwDIAAIBCgAEwAEKAATAQQoABMCBiAB
ARGAiQgBAAAAAAAAAAoVEigDEwATARMCBiABEoCRDgITAAYgARKAkRwCEwECEwIFBwESgJEHFRKA
lQETAAkAABUSgJUBEwAHIAICEwATAAcVEoCVARMBBxUSgJUBEwIMBwEVEigDEwATARMCBSABCBMA
AwcBCAUgABKAmQUgABKAnQYgARKAoRwDIAAcCAACEoCpEm0OCAABEoCtEYCxCwACEoC1EoClEoCt
ERABAhUSgLkBHgASgKUdEoCpCgoBFRKAvQISEA4fEAICFRKAxQEeABUSgMkBHgAVEoC5ARUSgL0C
HgAeAQUKAhIQDgcVEigDDg4OCgACEoDNEYDREXEUAAMSgN0SgNUVEoDhARKApR0SgOUQCgEVEoC9
AhIQFRIoAw4ODh8QAgIVEoDJAR4BFRKAyQEeABUSgLkBFRKAvQIeAB4BCwoCEhAVEigDDg4OCwAC
EoC1EoClEoDZDwoBFRKAvQIVEigDDg4ODgoKAhUSKAMODg4OERABARUSgMkBHgAVEoDJAR4AAwoB
DhAQAQEVEhkBHgAVEoDhAR4ABCABARwMFRIZARUSgO0DDg4ODBUSgOEBFRIoAw4ODgkgABUSgPEB
EwAMFRKA8QEVEigDDg4OFBADAxUSgO0DHgAeAR4CHgAeAR4CBQoDDg4OBSABARMAAyAAAgUgABKB
AVkHERIUDhUSgMkBFRIoAw4ODhUSGQEOFRIZARUSgO0DDg4OFRIoAw4ODhKAqR0SgKkSgKkdEoCl
HRKA2R0SgKkSgKkdEoCpEoCpHRKAqRUSgPEBFRIoAw4ODkcBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF80
ZmRiYWYzY2U5ZDg0YWZlYjE2MGI0MGI4NjdlYTUyMgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAIRBAAAAAAAAAAAA
AJ5BAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQQQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQBzbxIYAAABAHNvEhg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABi
ADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8ANABmAGQA
YgBhAGYAMwBjAGUAOQBkADgANABhAGYAZQBiADEANgAwAGIANAAwAGIAOAA2ADcAZQBhADUAMgAy
AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQA2ADIALgAyADgA
NQAzADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8ANABmAGQAYgBh
AGYAMwBjAGUAOQBkADgANABhAGYAZQBiADEANgAwAGIANAAwAGIAOAA2ADcAZQBhADUAMgAyAC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8ANABmAGQAYgBhAGYAMwBjAGUAOQBkADgANABhAGYAZQBiADEANgAwAGIANAAw
AGIAOAA2ADcAZQBhADUAMgAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADQAZgBkAGIAYQBmADMAYwBlADkAZAA4ADQAYQBmAGUAYgAxADYAMABiADQAMABi
ADgANgA3AGUAYQA1ADIAMgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAxADYAMgAuADIAOAA1ADMAMQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADYAMgAuADIAOAA1ADMAMQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACwMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CAE44ED0-2853-442E-A8CD-00BF37F3B716}"
          DTS:From="Package\SEQC - Index Generation\FELC - Iterate Index Directory for clean up"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQC - Index Generation\SCR - Get prefixes and destination paths" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{2E79DEE8-19A3-41A3-AEFE-0CDC268D22E1}"
          DTS:From="Package\SEQC - Index Generation\SCR - Get prefixes and destination paths"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SEQC - Index Generation\SCR - Create new index files" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{5D7E1B12-21A2-4FB6-8360-4B0D86FFF077}"
          DTS:From="Package\SEQC - Index Generation\SCR - Create new index files"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SEQC - Index Generation\FELC - Iterate the manifest directory" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\SEQC - Index Generation\FELC - Iterate Index Directory for clean up\FSYS - Delete File"
          TopLeft="71.0730192087133,18.1333364935483" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="316,93.6"
          Size="316,136.8"
          Id="Package\SEQC - Index Generation\FELC - Iterate Index Directory for clean up"
          TopLeft="42.8444458144052,20.9777791715136" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="276,55.2"
          Size="276,98.4"
          Id="Package\SEQC - Index Generation\FELC - Iterate the manifest directory"
          TopLeft="58.0897976978178,362.924375917672" />
        <NodeLayout
          Size="276.8,41.6"
          Id="Package\SEQC - Index Generation\SCR - Create new index files"
          TopLeft="64.3142875997386,279.249304173197" />
        <NodeLayout
          Size="276.8,41.6"
          Id="Package\SEQC - Index Generation\SCR - Get prefixes and destination paths"
          TopLeft="64.3142875997386,193.78991932935" />
        <EdgeLayout
          Id="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint]"
          TopLeft="201.779366707072,157.777779171514">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.0121401578361"
              Start="0,0"
              End="0,28.5121401578361">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5121401578361" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 1]"
          TopLeft="202.714287599739,235.38991932935">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.8593848438468"
              Start="0,0"
              End="0,36.3593848438468">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.3593848438468" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 2]"
          TopLeft="199.402042648778,320.849304173197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.0750717444752"
              Start="0,0"
              End="0,34.5750717444752">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5750717444752" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="416.8,488"
          Size="416.8,531.2"
          Id="Package\SEQC - Index Generation"
          TopLeft="46.2857150739553,49.0771248712948" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>