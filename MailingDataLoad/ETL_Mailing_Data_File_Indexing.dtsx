<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/26/2016 12:51:29 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="WINDOWSDEV"
  DTS:CreatorName="WINDOWSDEV\Ernesto Rodriguez"
  DTS:DTSID="{BF453B37-5CE4-4E7D-9E0D-C782DBD7CC5C}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.3436.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ETL_Mailing_Data_File_Indexing"
  DTS:PackageType="5"
  DTS:VersionBuild="70"
  DTS:VersionGUID="{32F30E8F-76AC-4D87-9D07-D93B6A6A7CCA}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MSSQLSERVER.testdb.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{BD28FC6D-BE54-4853-AB58-C13FB16CEE86}"
      DTS:ObjectName="MSSQLSERVER.testdb.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=MSSQLSERVER;User ID=sa;Initial Catalog=testdb;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAPXQ7jZTnV0GKV9nuEcqtfwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAAPwYf5d5kBKEk7FDXgO+IccqIGxjUYq5hPASWVmVhnbgAAAAAOgAAAAAIAACAAAABaVIBXc56GVZ9TDxkq6s/Owx3rEW29wgJyPDtzUKEU/hAAAADccnEffsXcOIHgik0ULbiLQAAAABI/Omxpgjq5ftivtaqFlFf3g7ZEaeqZ4fdewfBY7utrMar2voJkUgPSsNoaSv9MxBE0OB1xg6tBXo0NJtIutVE</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{0E208039-65CF-4A21-8E6A-EDB45DECD8FA}"
      DTS:ObjectName="connection_string">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=MSSQLSERVER; User ID=sa; Password=sa; Initial Catalog=testdb; Connection Timeout=60;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{EE813E6B-8A7B-45BD-AF98-C51D7B9F51B0}"
      DTS:ObjectName="execution_log_id">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{11CBFC64-B6FE-49E1-B220-55F0375615CE}"
      DTS:ObjectName="index_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Index</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A9382C1B-15E6-4EE6-8C55-51A61E6F0052}"
      DTS:ObjectName="manifest_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_2</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5612BC14-656D-4FD3-8035-33311E620AE9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="exception_message">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CB22605E-DC04-485B-A0B6-3D5D82547856}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_name">
      <DTS:VariableValue
        DTS:DataType="8">Default</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{81307A0F-309D-4D8E-A700-6B484AA80E90}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="index_prefixes">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{15EF2949-8D3F-44D4-89FC-B34899C88137}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="prefixes_and_destinations_paths">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SEQC - Index Generation"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{3B8EB5C9-6EE6-4122-8203-7BA563928D6C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQC - Index Generation">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index Generation\FELC - Iterate Index Directory for clean up"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{5E34496B-1E7C-4027-BDCF-717D1A173952}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="FELC - Iterate Index Directory for clean up">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{29CBE00F-C648-42ED-B715-4E43F6105783}"
            DTS:ObjectName="{29CBE00F-C648-42ED-B715-4E43F6105783}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Package::index_path]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Index" />
                <FEFEProperty
                  FileSpec="*.*" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SEQC - Index Generation\FELC - Iterate Index Directory for clean up\FSYS - Delete File"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="File System Task"
              DTS:DTSID="{693C3C00-B789-45C5-BFED-57A965EE24D3}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="FSYS - Delete File"
              DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="DeleteFile"
                  TaskSourcePath="User::file_name"
                  TaskIsSourceVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{041BC27D-DBED-48F0-A6D8-7297D68EFBEA}"
              DTS:ObjectName="{041BC27D-DBED-48F0-A6D8-7297D68EFBEA}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::file_name" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index Generation\FELC - Iterate the manifest directory"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{7C1DE02D-23C7-44EA-A763-DB970341F199}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="FELC - Iterate the manifest directory">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{00779E3F-87F6-4C94-8C76-C577428A9991}"
            DTS:ObjectName="{00779E3F-87F6-4C94-8C76-C577428A9991}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Package::manifest_path]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_2" />
                <FEFEProperty
                  FileSpec="*.csv" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SEQC - Index Generation\FELC - Iterate the manifest directory\Script Task"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{35E8B368-6185-4701-9641-451F16A9E1B1}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Script Task"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_0189a9b6e7394e689eb9e69765fb2632"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::file_name,User::prefixes_and_destinations_paths">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0189a9b6e7394e689eb9e69765fb2632.Properties.Settings.get_Default():ST_0189a9b6e7394e689eb9e69765fb2632.Properties.Sett" +
    "ings")]

namespace ST_0189a9b6e7394e689eb9e69765fb2632.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
#endregion

namespace ST_0189a9b6e7394e689eb9e69765fb2632
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            List<Tuple<string, string, string>> args = 
                (List<Tuple<string, string, string>>)Dts.Variables["User::prefixes_and_destinations_paths"].Value;
            string file_name = Dts.Variables["User::file_name"].Value.ToString();
            file_name = Path.GetFileName(file_name);
            string[] tokens = file_name.Split('_');
            string curr_file_prefix = tokens[0];

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0189a9b6e7394e689eb9e69765fb2632.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0189a9b6e7394e689eb9e69765fb2632.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0189a9b6e7394e689eb9e69765fb2632.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0189a9b6e7394e689eb9e69765fb2632.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0189a9b6e7394e689eb9e69765fb2632.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_0189a9b6e7394e689eb9e69765fb2632</msb:CodeName>
		<msb:DisplayName>ST_0189a9b6e7394e689eb9e69765fb2632</msb:DisplayName>
		<msb:ProjectId>{6E0A308F-7B50-4680-8DE4-82AF0B537A03}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0189a9b6e7394e689eb9e69765fb2632.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="c1b3571ce1114050884a94d375e61b99">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>4</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>102</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0189a9b6e7394e689eb9e69765fb2632")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0189a9b6e7394e689eb9e69765fb2632")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_0189a9b6e7394e689eb9e69765fb2632.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DB259645-750A-4748-9B92-45FD069F1EDD}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0189a9b6e7394e689eb9e69765fb2632</RootNamespace>
    <AssemblyName>ST_0189a9b6e7394e689eb9e69765fb2632</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <BinaryItem
                    Name="ST_0189a9b6e7394e689eb9e69765fb2632.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJi/LFgAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAAHi8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMQuAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJA8AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
LwAAAAAAAEgAAAACAAUA+CEAAMwMAAABAAAAAAAAAEAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBABsAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdAEA
ABsmAigWAAAKbxcAAApyvwAAcG8YAAAKbxkAAApvGgAACgoGKBsAAAoKBheNIQAAAQwIFh9fnQhv
HAAACgsHFpomAigWAAAKFm8dAAAKKh4CKB4AAAoqAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADwAwAAI34AAFwEAAAEBgAAI1N0cmluZ3MAAAAAYAoA
AOAAAAAjVVMAQAsAABAAAAAjR1VJRAAAAFALAAB8AQAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAwAA
APolMwAWAAABAAAAIgAAAAUAAAAGAAAACQAAAAEAAAAeAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAE
AAAAAQAAAAEAAAAEAAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboA
BgBvAV4BBgCgAYsBBgBXAj0CBgCCAnACBgCZAnACBgC2AnACBgDVAnACBgDuAnACBgAHA3ACBgAi
A3ACBgA9A3ACBgBWA3ACBgCPA28DBgCvA28DBgDgA80DBgD9A7oABgACBLoABgAmBHACCgBSBDwE
CgBrBDwEBgCABG8DDgCiBBQBDgDEBBQBEgAdBf0EEgA1Bf0EBgBsBVEFBgBzBboABgCOBYQFBgCf
BboABgCkBboAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQA
fwANAAQACAADAQAAowAAABEABAAKABEAfwETABEArAEXABEA9gE5AAYGHwJHAFaAJwJKAFaALwJK
AFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEA
oCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYmwSJAAIAvCAAAAAAhgAaAhsAAgA0
IQAAAACGGLwBGwACAAAAAQA3AjkAvAFYAEEAvAFYAEkAvAFYAFEAvAFYAFkAvAFYAGEAvAFYAGkA
vAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEbAJkAvAEbAAkAvAEbAKEAFARiAKEALwRp
ACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA1gSNANkAJwWSAOEAPgWXAOkARwWdAAkA
ewWtAAEBkwWxABEBqwW2ANkAsQVdABkAvAEbAAgAFABOAAgAGABTACkAkwCAAC4AGwA2AS4AIwA2
AS4AYwBcAS4ACwDFAC4AEwANAS4AMwANAS4AKwA2AS4AOwA8AS4AQwA2AS4AWwBTAUMAawBTAEkA
kwCAAGEAmwBTAIMAqwBTAHUAvQACAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAF
AAEABAAFAAIABQAHAKEABIAAAAEAAAAUGOxyAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAA
BAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAAAAAAAAoA3gQA
AAAAAAAAAAEAAADABQAABQAEAAAAAAAAPE1vZHVsZT4AU1RfMDE4OWE5YjZlNzM5NGU2ODllYjll
Njk3NjVmYjI2MzIuZGxsAFJlc291cmNlcwBTVF8wMTg5YTliNmU3Mzk0ZTY4OWViOWU2OTc2NWZi
MjYzMi5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfMDE4OWE5YjZlNzM5NGU2ODll
YjllNjk3NjVmYjI2MzIAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3Rl
bS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZT
VEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VN
YW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291
cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2YWx1
ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmli
dXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVu
dGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJp
YnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9iamVj
dE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0
X0l0ZW0AZ2V0X1ZhbHVlAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAExpc3RgMQBUdXBsZWAz
AFRvU3RyaW5nAFN5c3RlbS5JTwBQYXRoAEdldEZpbGVOYW1lAENoYXIAU3RyaW5nAFNwbGl0AHNl
dF9UYXNrUmVzdWx0AFNUXzAxODlhOWI2ZTczOTRlNjg5ZWI5ZTY5NzY1ZmIyNjMyLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAHFTAFQAXwAwADEAOAA5AGEAOQBiADYAZQA3ADMAOQA0
AGUANgA4ADkAZQBiADkAZQA2ADkANwA2ADUAZgBiADIANgAzADIALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAEtVAHMAZQByADoAOgBwAHIAZQBmAGkAeABlAHMAXwBh
AG4AZABfAGQAZQBzAHQAaQBuAGEAdABpAG8AbgBzAF8AcABhAHQAaABzAAAfVQBzAGUAcgA6ADoA
ZgBpAGwAZQBfAG4AYQBtAGUAAAA++h1y+Kv8ToDd4SJrgmJoAAi3elxWGTTgiQiJhF3NgIDMkQMG
EhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEU
BAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAA
AAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwLFRJ5ARUSfQMODg4DIAAOBAABDg4GIAEdDh0DBwcD
Dh0OHQNHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU1RfMDE4OWE5YjZlNzM5NGU2ODllYjllNjk3NjVmYjI2
MzIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQDsLgAAAAAAAAAAAAAOLwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AC8AAAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDschQYAAABAOxyFBg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AMAAxADgAOQBhADkAYgA2AGUANwAzADkANABlADYAOAA5AGUAYgA5AGUANgA5ADcANgA1AGYA
YgAyADYAMwAyAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQA2
ADQALgAyADkANAAyADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
MAAxADgAOQBhADkAYgA2AGUANwAzADkANABlADYAOAA5AGUAYgA5AGUANgA5ADcANgA1AGYAYgAy
ADYAMwAyAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AMAAxADgAOQBhADkAYgA2AGUANwAzADkANABlADYAOAA5AGUA
YgA5AGUANgA5ADcANgA1AGYAYgAyADYAMwAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADAAMQA4ADkAYQA5AGIANgBlADcAMwA5ADQAZQA2ADgAOQBlAGIA
OQBlADYAOQA3ADYANQBmAGIAMgA2ADMAMgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAxADYANAAuADIAOQA0ADIAMAAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADYANAAuADIAOQA0ADIAMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                  <Breakpoint
                    Enabled="True"
                    File="ScriptMain.cs"
                    Line="102"
                    Column="4" />
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{4904BD7A-8582-4754-92A8-B954DAF7BA8F}"
              DTS:ObjectName="{4904BD7A-8582-4754-92A8-B954DAF7BA8F}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::file_name" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index Generation\SCR - Create new index files"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{0FEEA7FF-AA26-4A77-87F0-0F42FB0B4B0A}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR - Create new index files"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_2003c36a3ba04f01a079282f39f59ed3"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,User::index_prefixes,$Package::index_path"
              ReadWriteVariables="User::exception_message">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Argument.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ST_2003c36a3ba04f01a079282f39f59ed3
{
    public sealed class Argument
    {
        public Argument(string FilePrefix, string IndexPrefix, string Path)
        {
            this.FilePrefix = FilePrefix;
            this.IndexPrefix = IndexPrefix;
            this.Path = Path;
        }

        public string FilePrefix { get; set; }
        public string IndexPrefix { get; set; }
        public string Path { get; set; }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_2003c36a3ba04f01a079282f39f59ed3.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3E54B56D-2D04-43BE-84B4-F93B0B0B1D69}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_2003c36a3ba04f01a079282f39f59ed3</RootNamespace>
    <AssemblyName>ST_2003c36a3ba04f01a079282f39f59ed3</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Argument.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Settings.get_Default():ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Sett" +
    "ings")]

namespace ST_2003c36a3ba04f01a079282f39f59ed3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
#endregion

namespace ST_2003c36a3ba04f01a079282f39f59ed3
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string index_path = Dts.Variables["$Package::index_path"].Value.ToString();
            List<string> index_prefixes = (List<string>)Dts.Variables["User::index_prefixes"].Value;
            int result = (int)ScriptResults.Success;

            try
            {
                foreach (string prefix in index_prefixes)
                {
                    string full_path = index_path + @"\" + prefix + "-" + GetTimeStamp(DateTime.Now) + ".csv";
                    using (StreamWriter sw = File.CreateText(full_path)) { }
                }
            }
            catch(Exception e)
            {
                string task_name = Dts.Variables["System::TaskName"].Value.ToString();
                Dts.Variables["User::exception_message"].Value =
                    string.Format("Task : [{0}]; Message: [{1}]", task_name, e.Message);
                result = (int)ScriptResults.Failure;
            }
            finally
            {
                Dts.TaskResult = result;
            }
            
           

		}


        string GetTimeStamp(DateTime value)
        {
            return value.ToString("yyyyMMddHHmmss");
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_2003c36a3ba04f01a079282f39f59ed3</msb:CodeName>
		<msb:DisplayName>ST_2003c36a3ba04f01a079282f39f59ed3</msb:DisplayName>
		<msb:ProjectId>{1335D4F0-90B2-410E-9033-4C6AE7DF2418}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_2003c36a3ba04f01a079282f39f59ed3.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Argument.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_2003c36a3ba04f01a079282f39f59ed3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_2003c36a3ba04f01a079282f39f59ed3")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_2003c36a3ba04f01a079282f39f59ed3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_2003c36a3ba04f01a079282f39f59ed3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_2003c36a3ba04f01a079282f39f59ed3.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIy3LFgAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAALjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANQzAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
NAAAAAAAAEgAAAACAAUAUCMAAIQQAAABAAAAAAAAAJgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHICKA0AAAoCAygDAAAGAgQoBQAABgIFKAcAAAYqHgJ7AQAA
BCoiAgN9AQAABCoeAnsCAAAEKiICA30CAAAEKh4CewMAAAQqIgIDfQMAAAQqHgIoDQAACioTMAIA
LQAAAAEAABF+BAAABC0gcgEAAHDQAwAAAigQAAAKbxEAAApzEgAACgoGgAQAAAR+BAAABCoafgUA
AAQqHgKABQAABCoafgYAAAQqLnMNAAAGgAYAAAQqHgIoFAAACioAGzAEAC8BAAACAAARAigWAAAK
bxcAAApycwAAcG8YAAAKbxkAAApvGgAACgoCKBYAAApvFwAACnKdAABwbxgAAApvGQAACnQBAAAb
CxYMB28bAAAKEwgrZBIIKBwAAAoNHI0hAAABEwkRCRYGohEJF3LHAABwohEJGAmiEQkZcssAAHCi
EQkaAigdAAAKKBAAAAaiEQkbcs8AAHCiEQkoHgAAChMEEQQoHwAAChMF3gwRBSwHEQVvIAAACtwS
CCghAAAKLZPeDhII/hYCAAAbbyAAAArc3lQTBgIoFgAACm8XAAAKctkAAHBvGAAACm8ZAAAKbxoA
AAoTBwIoFgAACm8XAAAKcvsAAHBvGAAACnIrAQBwEQcRBm8iAAAKKCMAAApvJAAAChcM3gDeDQIo
FgAACghvJQAACtwqAAE0AAACAKIAAqQADAAAAAACAEoAcbsADgAAAAAAAEIAicsAVCUAAAECAEIA
3yEBDQAAAAA2DwFyZQEAcCgmAAAKKh4CKCcAAAoqAAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEA
AAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAGQFAAAjfgAA0AUAAFAHAAAjU3RyaW5ncwAAAAAg
DQAAhAEAACNVUwCkDgAAEAAAACNHVUlEAAAAtA4AANABAAAjQmxvYgAAAAAAAAACAAABVx2iCQkD
AAAA+iUzABYAAAEAAAAlAAAABgAAAAkAAAARAAAACAAAACcAAAACAAAAGAAAAAIAAAADAAAABgAA
AAoAAAACAAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAAAAAGAMoAwwAKAOYA0QAOAEYBHQEGAGIB
wwAGADkCKAIGAGoCVQIGAOMCwwAGADEDFwMGAFwDSgMGAHMDSgMGAJADSgMGAK8DSgMGAMgDSgMG
AOEDSgMGAPwDSgMGABcESgMGADAESgMGAGkESQQGAIkESQQGAKcESQQGANUEwgQGAPIEwwAGAPcE
wwAGABsFSgMKAEcFMQUKAGAFMQUOAHwFHQEOAJ4FHQESAPcF1wUSAA8G1wUGAE8GNAZ/AFYGAAAG
AHsGwwAGAJsGkQYGAKAGkQYGALgGwwAGANUGwwAAAAAAAQAAAAAAAQABAAEBEAAyADsABQABAAEA
AAAQAF8AaQAFAAQACAAAARAAmABpAAkABgAMAAEAEAChADsADQAHAA8AAwEAAKwAAAARAAcAEgAB
AL0BIwABANkBIwABAPYBIwARAEkCKgARAHYCLgARALoCUAAGBvkCZABWgAEDZwBWgAkDZwBQIAAA
AACGGGcBEwABAG0gAAAAAIYIbQEaAAQAdSAAAAAAhgh8AR4ABAB+IAAAAACGCIsBGgAFAIYgAAAA
AIYImwEeAAUAjyAAAAAAhgirARoABgCXIAAAAACGCLQBHgAGAKAgAAAAAIMYZwEyAAcAqCAAAAAA
kwiGAjYABwDhIAAAAACTCJoCOwAHAOggAAAAAJMIpgJAAAcA8CAAAAAAlgjKAlQACAADIQAAAACG
GGcBMgAIAPcgAAAAAJEYdQWhAAgADCEAAAAAhgDeAjIACAB8IgAAAACBAOwCXgAIAIoiAAAAAIYY
ZwEyAAkAAAABAAwCAAACABcCAAADACMCAAABABEDAAABABEDAAABABEDAAABABEDAAABABEDQQBn
AR4ASQBnAR4AUQBnAR4AWQBnAR4AYQBnAR4AaQBnAR4AcQBnAR4AeQBnAR4AgQBnAR4AiQBnAR4A
kQBnAXUAmQBnATIACQBnATIAoQBnATIAqQBnATIAsQAJBXoAsQAkBYEAKQBnAYYAyQBnAZIAEQBn
ATIA2QBnATIAGQCwBaUA4QABBqoA6QAYBq8A8QAhBrUACQArBhoADABhBr8AFABvBtAAOQCCBtUA
CQGKBtoAEQGtBuAAIQHEBjIAFADMBucAKQHfBhoACQHrBusA8QDyBvIA4QD8BnUAOQArBhIBGQBn
ATIACAAgAGsACAAkAHAAIQBzAHAALgBbAKUBLgBjAK4BLgALABcBLgATAF8BLgAbAIgBLgAjAIgB
LgArAIgBLgAzAF8BLgA7AI4BLgBDAIgBQABzAHAAQQBzAHAAYABzAHAAYQBzAHAAYwB7AHAAgABz
AHAAiQCbAJgAoABzAHAAowCrAHAAqQCbAJgAwABzAHAAwQBzAHAA4ABzAHAAjQD3AAIAAQADAAQA
BAAGAAAADAImAAAAFwImAAAAIwImAAAAOQJGAAAAsgJLAAAA1gJZAAIAAgADAAEAAwADAAIABAAF
AAEABQAFAAIABgAHAAEABwAHAAIACQAJAAIACgALAAEACwALAAIADAANALkAyQAEgAAAAQAAABQY
5m4AAAAAAAA7AAAABAAAAAAAAAAAAAAAAQC6AAAAAAAEAAAAAAAAAAAAAAABAMMAAAAAAAsAAAAA
AAAAAAAAAAoA/gAAAAAACwAAAAAAAAAAAAAACgC4BQAAAAAAAAAAAQAAAAsHAAAGAAUAAAAAAAA8
TW9kdWxlPgBTVF8yMDAzYzM2YTNiYTA0ZjAxYTA3OTI4MmYzOWY1OWVkMy5kbGwAQXJndW1lbnQA
U1RfMjAwM2MzNmEzYmEwNGYwMWEwNzkyODJmMzlmNTllZDMAUmVzb3VyY2VzAFNUXzIwMDNjMzZh
M2JhMDRmMDFhMDc5MjgyZjM5ZjU5ZWQzLlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0TWFpbgBT
Y3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24A
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEVudW0ALmN0b3IAZ2V0X0ZpbGVQcmVmaXgAc2V0X0ZpbGVQcmVmaXgAZ2V0X0lu
ZGV4UHJlZml4AHNldF9JbmRleFByZWZpeABnZXRfUGF0aABzZXRfUGF0aAA8RmlsZVByZWZpeD5r
X19CYWNraW5nRmllbGQAPEluZGV4UHJlZml4PmtfX0JhY2tpbmdGaWVsZAA8UGF0aD5rX19CYWNr
aW5nRmllbGQARmlsZVByZWZpeABJbmRleFByZWZpeABQYXRoAFN5c3RlbS5SZXNvdXJjZXMAUmVz
b3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZv
AHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBEYXRl
VGltZQBHZXRUaW1lU3RhbXAAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1
bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rp
b24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNp
b25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2Rl
QXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1i
bHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2lu
dEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
TWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRf
VmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBTeXN0ZW0uQ29s
bGVjdGlvbnMuR2VuZXJpYwBMaXN0YDEARW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJy
ZW50AFN0cmluZwBnZXRfTm93AENvbmNhdABTeXN0ZW0uSU8ARmlsZQBTdHJlYW1Xcml0ZXIAQ3Jl
YXRlVGV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAE1vdmVOZXh0AEV4Y2VwdGlvbgBnZXRfTWVzc2Fn
ZQBGb3JtYXQAc2V0X1ZhbHVlAHNldF9UYXNrUmVzdWx0AFNUXzIwMDNjMzZhM2JhMDRmMDFhMDc5
MjgyZjM5ZjU5ZWQzLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABxUwBUAF8AMgAw
ADAAMwBjADMANgBhADMAYgBhADAANABmADAAMQBhADAANwA5ADIAOAAyAGYAMwA5AGYANQA5AGUA
ZAAzAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAApJABQAGEAYwBr
AGEAZwBlADoAOgBpAG4AZABlAHgAXwBwAGEAdABoAAApVQBzAGUAcgA6ADoAaQBuAGQAZQB4AF8A
cAByAGUAZgBpAHgAZQBzAAADXAAAAy0AAQkuAGMAcwB2AAAhUwB5AHMAdABlAG0AOgA6AFQAYQBz
AGsATgBhAG0AZQAAL1UAcwBlAHIAOgA6AGUAeABjAGUAcAB0AGkAbwBuAF8AbQBlAHMAcwBhAGcA
ZQAAOVQAYQBzAGsAIAA6ACAAWwB7ADAAfQBdADsAIABNAGUAcwBzAGEAZwBlADoAIABbAHsAMQB9
AF0AAB15AHkAeQB5AE0ATQBkAGQASABIAG0AbQBzAHMAAAAheEr7+xR4TLJ9pnFpGh4CAAi3elxW
GTTgiQiJhF3NgIDMkQYgAwEODg4DIAAOBCABAQ4CBg4DKAAOAwYSFQMGEhkDIAABBAAAEhUEAAAS
GQUAAQESGQQIABIVBAgAEhkDBhIQBAAAEhAECAASEAUgAQ4RHQIGCAMGERgEAAAAAAQBAAAABCAB
AQgGAAESWRFdBCAAEmEGIAIBDhJhBAcBEhUFIAEBEWkIAQACAAAAAAADAAABBCAAEnEEIAASdQUg
ARJ5HAMgABwFFRJ9AQ4JIAAVEYCBARMABhURgIEBDgQgABMABAAAER0FAAEOHQ4GAAESgI0OAyAA
AgYAAw4OHBwEIAEBHBoHCg4VEn0BDggODhKAjRKAlQ4VEYCBAQ4dDgQgAQ4ORwEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29y
ayA0KAEAI1NUXzIwMDNjMzZhM2JhMDRmMDFhMDc5MjgyZjM5ZjU5ZWQzAAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTYAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEA
AAD8MwAAAAAAAAAAAAAeNAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDQAAAAAAAAAAAAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDmbhQYAAABAOZuFBg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAw
ADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8A
MgAwADAAMwBjADMANgBhADMAYgBhADAANABmADAAMQBhADAANwA5ADIAOAAyAGYAMwA5AGYANQA5
AGUAZAAzAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMQA2ADQA
LgAyADgAMwA5ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AMgAw
ADAAMwBjADMANgBhADMAYgBhADAANABmADAAMQBhADAANwA5ADIAOAAyAGYAMwA5AGYANQA5AGUA
ZAAzAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5
AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
ZQBuAGEAbQBlAAAAUwBUAF8AMgAwADAAMwBjADMANgBhADMAYgBhADAANABmADAAMQBhADAANwA5
ADIAOAAyAGYAMwA5AGYANQA5AGUAZAAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4A
YQBtAGUAAAAAAFMAVABfADIAMAAwADMAYwAzADYAYQAzAGIAYQAwADQAZgAwADEAYQAwADcAOQAy
ADgAMgBmADMAOQBmADUAOQBlAGQAMwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8A
bgAAADEALgAwAC4ANgAxADYANAAuADIAOAAzADkAMAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5
ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAxADYANAAuADIAOAAzADkAMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAwNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index Generation\SCR - Get prefixes and destination paths"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{2276FBC2-A8B7-42A5-931E-1F54739003B1}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR - Get prefixes and destination paths"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4fdbaf3ce9d84afeb160b40b867ea522"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="System::TaskName,$Package::connection_string"
              ReadWriteVariables="User::exception_message,User::index_prefixes,User::prefixes_and_destinations_paths">
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Linq;
using System.Collections.Generic;
#endregion

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called to get the arguments to create 
        /// and distribute the index files along with their 
        /// corresponding data mailing manifests.
        /// </summary>
		public void Main()
		{
            MedhokDataContext db = null;
            int result = (int)ScriptResults.Success;

            try
            {
                string cnn_str = Dts.Variables["$Package::connection_string"].Value.ToString();             //Get the connection string      
                db = new MedhokDataContext(cnn_str);                                                        //Use medhok context previously defined and connect to it
                var query = from f in db.FileTypes                                                          //Get index prefix, manifest destination paths paths
                            orderby f.FileTypePrefix
                            select new
                            {
                                FilePrefix = f.FileTypePrefix,
                                IndexPrefix = f.Destination.IndexFilePrefix,
                                Path = f.Destination.DestPath
                            };
                

                List<string> unique_prefixes = (    from q in query                                         //Get a list of unique index-prefixes from the previous set
                                                    orderby q.FilePrefix
                                                    select q.IndexPrefix
                                                ).Distinct().ToList();
                Dts.Variables["User::index_prefixes"].Value = unique_prefixes;

                List<Tuple<string, string, string>> arguments = new List<Tuple<string, string, string>>();  //Create a list containing tuples to store arguments from previous results
                foreach (var row in query)                                                                   
                {
                    arguments.Add( Tuple.Create( row.FilePrefix, row.IndexPrefix, row.Path ) );             //Store new arguments tuple in the list
                }
                Dts.Variables["User::prefixes_and_destinations_paths"].Value = arguments;
            }
            catch(Exception e)
            {
                string task_name = Dts.Variables["System::TaskName"].Value.ToString();
                Dts.Variables["User::exception_message"].Value =
                    string.Format("Task : [{0}]; Message: [{1}]", task_name, e.Message);
                result = (int)ScriptResults.Failure;
            }
            finally
            {
                Dts.TaskResult = result;
                db.Connection.Close();
            }
			
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Argument.cs"
                Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    public sealed class Argument
    {
        public Argument(string FilePrefix, string IndexPrefix, string Path)
        {
            this.FilePrefix = FilePrefix;
            this.IndexPrefix = IndexPrefix;
            this.Path = Path;
        }

        public string FilePrefix { get; set; }
        public string IndexPrefix { get; set; }
        public string Path { get; set; }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Settings.get_Default():ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Sett" +
    "ings")]

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="MedhokDataContext.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    public sealed class MedhokDataContext : DataContext
    {
        public Table<FileType> FileTypes;
        public Table<FileDestination> FileDestinations;
        public MedhokDataContext(string connection) : base(connection) { }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_4fdbaf3ce9d84afeb160b40b867ea522.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6A4C00A5-8759-4757-A987-979F1E4D7BB6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4fdbaf3ce9d84afeb160b40b867ea522</RootNamespace>
    <AssemblyName>ST_4fdbaf3ce9d84afeb160b40b867ea522</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.Linq" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Argument.cs" />
    <Compile Include="FileDestination.cs" />
    <Compile Include="FileType.cs" />
    <Compile Include="MedhokDataContext.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="FileType.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq.Mapping;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    [Table(Name="Medhok.Mailing_Data_File_Type")]
    public sealed class FileType
    {
        [Column(IsPrimaryKey=true)]
        public int ID;

        [Column]
        public string FileTypePrefix;

        [Column]
        public int DestID;

        [Association(ThisKey = "DestID", IsForeignKey = true)]
        public FileDestination Destination;

    }
}]]></ProjectItem>
              <ProjectItem
                Name="FileDestination.cs"
                Encoding="UTF8"><![CDATA[using System.Collections.Generic;
using System.Data.Linq.Mapping;

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522
{
    [Table(Name="Medhok.Mailing_Data_File_Dest")]
    public sealed class FileDestination
    {
        [Column(IsPrimaryKey=true)]
        public int ID;

        [Column]
        public string DestPath;

        [Column]
        public string IndexFilePrefix;

        [Association(OtherKey = "DestID")]
        public List<FileType> FileTypes;
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_4fdbaf3ce9d84afeb160b40b867ea522</msb:CodeName>
		<msb:DisplayName>ST_4fdbaf3ce9d84afeb160b40b867ea522</msb:DisplayName>
		<msb:ProjectId>{F3366BAD-25B7-4DDC-BCF9-D1AE339070CC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4fdbaf3ce9d84afeb160b40b867ea522.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="MedhokDataContext.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="FileType.cs"/>
		<msb:File Include="FileDestination.cs"/>
		<msb:File Include="Argument.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4fdbaf3ce9d84afeb160b40b867ea522")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4fdbaf3ce9d84afeb160b40b867ea522")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4fdbaf3ce9d84afeb160b40b867ea522.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_4fdbaf3ce9d84afeb160b40b867ea522.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGSyLFgAAAAAAAAAAOAAAiELAQsAACQAAAAIAAAAAAAAzkIA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIBCAABLAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1CIAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
QgAAAAAAAEgAAAACAAUAyCYAALgbAAABAAAAAAAAABAmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHICKA0AAAoCAygDAAAGAgQoBQAABgIFKAcAAAYqHgJ7AQAA
BCoiAgN9AQAABCoeAnsCAAAEKiICA30CAAAEKh4CewMAAAQqIgIDfQMAAAQqHgIoDQAACioeAigN
AAAKKiICAygSAAAKKh4CKA0AAAoqAAAAEzACAC0AAAABAAARfg4AAAQtIHIBAABw0AYAAAIoFAAA
Cm8VAAAKcxYAAAoKBoAOAAAEfg4AAAQqGn4PAAAEKh4CgA8AAAQqGn4QAAAEKi5zEAAABoAQAAAE
Kh4CKBgAAAoqcgIoDQAACgIDfRwAAAoCBH0dAAAKAgV9HgAACioeAnscAAAKKh4Cex0AAAoqHgJ7
HgAACioTMAIAcwAAAAIAABFzHwAACgoGcnMAAHBvIAAACiYGAnscAAAKjAIAABtvIQAACiYGcpMA
AHBvIAAACiYGAnsdAAAKjAMAABtvIQAACiYGcrUAAHBvIAAACiYGAnseAAAKjAQAABtvIQAACiYG
cskAAHBvIAAACiYGbyIAAAoqABMwAwBTAAAAAwAAEQN1AQAAGwoGLEcoIwAACgJ7HAAACgZ7HAAA
Cm8kAAAKLC8oJQAACgJ7HQAACgZ7HQAACm8mAAAKLBcoJwAACgJ7HgAACgZ7HgAACm8oAAAKKhYq
ABMwAwBTAAAABAAAESBFr8wwCiApVVWlBlooIwAACgJ7HAAACm8pAAAKWAogKVVVpQZaKCUAAAoC
ex0AAApvKgAAClgKIClVVaUGWignAAAKAnseAAAKbysAAApYCgYqABswBwATAwAABQAAERQKFgsC
KCwAAApvLQAACnLPAABwby4AAApvLwAACm8iAAAKDAhzCgAABgoGewwAAATQBAAAAigUAAAKcgcB
AHAoMAAAChMJEQnQCQAABCgxAAAKKDIAAAoXjSoAAAETChEKFhEJohEKKAEAACsoAgAAK9AEAAAC
KBQAAApyBwEAcCgwAAAKEwvQNQAACtAIAAAbKDYAAAp0NQAAARmNKQAAARMMEQwWEQvQCQAABCgx
AAAKKDIAAAqiEQwXEQvQCwAABCgxAAAKKDIAAArQBgAABCgxAAAKKDIAAAqiEQwYEQvQCwAABCgx
AAAKKDIAAArQBQAABCgxAAAKKDIAAAqiEQwZjTYAAAETDRENFtA3AAAK0AgAABsoNgAACnQ2AAAB
ohENF9A4AAAK0AgAABsoNgAACnQ2AAABohENGNA5AAAK0AgAABsoNgAACnQ2AAABohENKDoAAAoX
jSoAAAETDhEOFhELohEOKAMAACsoBAAAKw0J0AgAABsoFAAACnILAQBwKDAAAAoTDxEP0DcAAArQ
CAAAGyg2AAAKdDYAAAEoPAAACheNKgAAARMQERAWEQ+iERAoBQAAKygGAAAr0AgAABsoFAAACnIL
AQBwKDAAAAoTERER0DgAAArQCAAAGyg2AAAKdDYAAAEoPAAACheNKgAAARMSERIWERGiERIoBQAA
KygHAAArKAgAACsoCQAAKxMEAigsAAAKby0AAApyDwEAcG8uAAAKEQRvPwAACnNAAAAKEwUJb0EA
AAoTEysqERNvQgAAChMGEQURBm83AAAKEQZvOAAAChEGbzkAAAooCgAAK29EAAAKERNvRQAACi3N
3gwREywHERNvRgAACtwCKCwAAApvLQAACnI5AQBwby4AAAoRBW8/AAAK3lQTBwIoLAAACm8tAAAK
coUBAHBvLgAACm8vAAAKbyIAAAoTCAIoLAAACm8tAAAKcqcBAHBvLgAACnLXAQBwEQgRB29HAAAK
KEgAAApvPwAAChcL3gDeGAIoLAAACgdvSQAACgZvSgAACm9LAAAK3CoAQUwAAAIAAABDAgAANwAA
AHoCAAAMAAAAAAAAAAAAAAAEAAAAoAIAAKQCAABUAAAAQAAAAQIAAAAEAAAA9gIAAPoCAAAYAAAA
AAAAAB4CKEwAAAoqtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUA
bAAAADwJAAAjfgAAqAkAACwLAAAjU3RyaW5ncwAAAADUFAAAFAIAACNVUwDoFgAAEAAAACNHVUlE
AAAA+BYAAMAEAAAjQmxvYgAAAAAAAAACAAABVx2iCQkPAAAA+iUzABYAAAEAAABCAAAACgAAABYA
AAAaAAAADAAAAEwAAAACAAAAKgAAAAUAAAAEAAAACQAAAA0AAAALAAAAAQAAAAcAAAABAAAAAQAA
AAMAAAAKAAAAAAAKAAEAAAAAAAYA9QDuAAoADQH8AA4ALgEZARIAjgFlAQYAqgHuAAYApwKMAgoA
2gL8AAYABAPzAgYANQMgAwYA8QPXAwYAHAQKBAYAMwQKBAYAUAQKBAYAbwQKBAYAiAQKBAYAoQQK
BAYAvAQKBAYA1wQKBAYA8AQKBAYAKQUJBQYASQUJBQYAZwUJBQoAmwWCBQoAqgWCBQoAugWCBQYA
4gXPBQYA/wXuAAYABAbuAAYAKAYKBA4AVAY+Bg4AbQY+BhIAiQZlAQYATgfPBQYAaQfPBQYAgAfP
BQYApAeYBwYAuQeMAhIAzAdlARYAJQgFCBYAPQgFCBoAfQhlCBoAiAhlCAYApggKBAYAsAjuABoA
1ghlCBoA7QhlCAYAAQnuABoAFAkICRoAHgkICRoAMgkICQYARwkKBAYAUgnuAAYAegkKBAYAigkK
BBoAlQllCAYAowmMAgYAsQkKBBoA2QkICQYA9QnuAAYA/QmMAgYAJQruAAYASQo2CgYAXgruAAYA
cgruAAYAiAruAB4AxAqxCgAAAAABAAAAAAABAAEAAQEQADIAOwAFAAEAAQABARAAXwA7AAUABAAI
AAEBEABvADsABQAIAAkAAQEQAHgAOwAJAAwACgAAABAAigCUAAUADgALAAABEADDAJQADQAQAA8A
AQAQAMwAOwARABEAEgADAQAA1wAAABUAEQAUAAABEACrBgAABQAUABQAAQAFAiMAAQAhAiMAAQA+
AiMABgBwAioABgBzAiMABgB8AiMABgCuAi0ABgBwAioABgC4AiMABgDHAioABgDOAjkABgCuAj0A
BgDiAkUAEQAUA00AEQBBA1EAEQCFA28ABgauAyoAVoC2A30AVoC+A30AIQD4BmsBIQANB3QBIQAj
B30BUCAAAAAAhhivARMAAQBtIAAAAACGCLUBGgAEAHUgAAAAAIYIxAEeAAQAfiAAAAAAhgjTARoA
BQCGIAAAAACGCOMBHgAFAI8gAAAAAIYI8wEaAAYAlyAAAAAAhgj8AR4ABgCgIAAAAACGGK8BNQAH
AKggAAAAAIYYrwE1AAcAsCAAAAAAhhivAR4ABwC5IAAAAACDGK8BNQAIAMQgAAAAAJMIUQNVAAgA
/SAAAAAAkwhlA1oACAAEIQAAAACTCHEDXwAIAAwhAAAAAJYIlQNzAAkAHyEAAAAAhhivATUACQAT
IQAAAACRGIIGXQEJAJwiAAAAAIYAqQM1AAkACCYAAAAAhhivATUACQAnIQAAAACGGK8BYQEJAEQh
AAAAAIYItQFvAQwATCEAAAAAhgjTAXgBDABUIQAAAACGCPMBgQEMAFwhAAAAAMYAMgcaAAwA3CEA
AAAAxgA7B4YBDAA8IgAAAADGAEIHiwENAAAAAQBUAgAAAgBfAgAAAwBrAgAAAQDGAwAAAQDGAwAA
AQDGAwAAAQDMAwAAAQDGAwAAAQBUAgAAAgBfAgAAAwBrAgAAAQDGA1EArwEeAFkArwEeAGEArwEe
AGkArwEeAHEArwEeAHkArwEeAIEArwEeAIkArwEeAJEArwEeAJkArwEeAKEArwGLAKkArwE1AAkA
rwE1ALEArwE1ALkArwE1AMEArwE1AMkArwE1ABEArwEeANEArwE1ANkAFgY2AdkAMQY9AUEArwFC
AfEArwFOARkArwE1AAEBrwE1AAkBrwGeARkBrwE1AAwA+AZrAQwADQd0AQwAIwd9ASEBrwE1ACEB
sge5ASEBsgfDAQkAMgcaACwAlQPeASwAOwfoATQAlQPeATQAOwfoATwAlQPeATwAOwfoASwAQgcN
AjQAQgcNAjwAQgcNAiEA3gcXAjEBLwgdAjkBRggjAkEBTwgqAkkBnAguAlkBwwg3AkkB5whAAkkB
+ghMAoEBPwlpAkQArwFhAZkBZgmXAkQAtQFvAUQA0wF4AUQA8wGBAUkBvAmiAoEBwAnIAkkBxwn0
AoEB0AkbA9EB5AkxA0EB6wlCA0wArwE1AFQACwphA1wAGQpvAekBKwp4A0wAMgqTA/EBVQqZA/kB
ago1AAECfAoaAAkCjwqdAzEBlgqLABEA0QqkAxEC4Ao1ACEArwE1AAgASACBAAgATACGACEAcwCG
AC4AWwCXBC4AYwCgBC4ACwAJBC4AEwBRBC4AGwB6BC4AIwB6BC4AKwB6BC4AMwBRBC4AOwCABC4A
QwB6BEAAcwCGAEEAcwCGAGAAcwCGAGEAcwCGAGMAewCQAIAAcwCGAIEAgwC6AIMAewDmAIkAuwBU
AaAAcwCGAKEAgwCGAKkAuwBUAcAAcwCGAMEAgwCGAMMAmwCGAOAAcwCGAOEAiwDPAAEBgwC6AAMB
ywCGACEBgwCGAEEBgwCGAEMBcwCGAGEBiwAQAQECcwCGAIAC2wCGAIEC0wClAaEC0wClAcEC0wCl
AQAD2wCGACAD2wCGAEAD2wCGAEkB0AEAAhMCqgMCAAEABgAEAAcABgAKAAcAAABUAiYAAABfAiYA
AABrAiYAAAAEA2UAAAB9A2oAAAChA3gAAABUAo8BAABfApQBAABrApkBAgACAAMAAQADAAMAAgAE
AAUAAQAFAAUAAgAGAAcAAQAHAAcAAgAMAAkAAgANAAsAAQAOAAsAAgAPAA0AAgAVAA8AAgAWABEA
AgAXABMArgHAAcoBzQHWAfAB+AGPAkcDVANrAwSAAAABAAAAFBhSbAAAAAAAADsAAAAEAAAAAAAA
AAAAAAABAOUAAAAAAAQAAAAAAAAAAAAAAAEA/AAAAAAABAAAAAAAAAAAAAAAAQDuAAAAAAALAAAA
AAAAAAAAAAAKAEYBAAAAAAsAAAAAAAAAAAAAAAoA5gcAAAAABAAAAAAAAAAAAAAAAQBZCAAAAAAE
AAAAAAAAAAAAAAABAKUKAAAAAAAAAAABAAAA5goAAAkACAAAAAAAFADBBgEAAAAUANUGAgAAABQA
6gZnAF4CaQCJAmcAtwJ3AOgCZwAAA2kAEAN3ABADewAtA30ALQOHAI0DAAAAAAA8TW9kdWxlPgBT
VF80ZmRiYWYzY2U5ZDg0YWZlYjE2MGI0MGI4NjdlYTUyMi5kbGwAQXJndW1lbnQAU1RfNGZkYmFm
M2NlOWQ4NGFmZWIxNjBiNDBiODY3ZWE1MjIARmlsZURlc3RpbmF0aW9uAEZpbGVUeXBlAE1lZGhv
a0RhdGFDb250ZXh0AFJlc291cmNlcwBTVF80ZmRiYWYzY2U5ZDg0YWZlYjE2MGI0MGI4NjdlYTUy
Mi5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBT
eXN0ZW0AT2JqZWN0AFN5c3RlbS5EYXRhLkxpbnEARGF0YUNvbnRleHQAU3lzdGVtLkNvbmZpZ3Vy
YXRpb24AQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0
T2JqZWN0TW9kZWxCYXNlAEVudW0ALmN0b3IAZ2V0X0ZpbGVQcmVmaXgAc2V0X0ZpbGVQcmVmaXgA
Z2V0X0luZGV4UHJlZml4AHNldF9JbmRleFByZWZpeABnZXRfUGF0aABzZXRfUGF0aAA8RmlsZVBy
ZWZpeD5rX19CYWNraW5nRmllbGQAPEluZGV4UHJlZml4PmtfX0JhY2tpbmdGaWVsZAA8UGF0aD5r
X19CYWNraW5nRmllbGQARmlsZVByZWZpeABJbmRleFByZWZpeABQYXRoAElEAERlc3RQYXRoAElu
ZGV4RmlsZVByZWZpeABTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0YDEARmlsZVR5cGVz
AEZpbGVUeXBlUHJlZml4AERlc3RJRABEZXN0aW5hdGlvbgBUYWJsZWAxAEZpbGVEZXN0aW5hdGlv
bnMAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkds
b2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFn
ZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0Rl
ZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAGNvbm5lY3Rp
b24AU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lz
dGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBB
c3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAFN5c3RlbS5EYXRhLkxpbnEuTWFwcGluZwBU
YWJsZUF0dHJpYnV0ZQBDb2x1bW5BdHRyaWJ1dGUAQXNzb2NpYXRpb25BdHRyaWJ1dGUAU3lzdGVt
LkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlADw+Zl9fQW5vbnltb3Vz
VHlwZTBgMwA8RmlsZVByZWZpeD5qX19UUGFyADxJbmRleFByZWZpeD5qX19UUGFyADxQYXRoPmpf
X1RQYXIAPEZpbGVQcmVmaXg+aV9fRmllbGQAPEluZGV4UHJlZml4PmlfX0ZpZWxkADxQYXRoPmlf
X0ZpZWxkAFRvU3RyaW5nAEVxdWFscwBHZXRIYXNoQ29kZQBEZWJ1Z2dlckJyb3dzYWJsZUF0dHJp
YnV0ZQBEZWJ1Z2dlckJyb3dzYWJsZVN0YXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAFN5c3Rl
bS5UZXh0AFN0cmluZ0J1aWxkZXIAQXBwZW5kAEVxdWFsaXR5Q29tcGFyZXJgMQBTY3JpcHRPYmpl
Y3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdl
dF9JdGVtAGdldF9WYWx1ZQBTeXN0ZW0uQ29yZQBTeXN0ZW0uTGlucS5FeHByZXNzaW9ucwBFeHBy
ZXNzaW9uAFBhcmFtZXRlckV4cHJlc3Npb24AUGFyYW1ldGVyAEZpZWxkSW5mbwBSdW50aW1lRmll
bGRIYW5kbGUAR2V0RmllbGRGcm9tSGFuZGxlAE1lbWJlckV4cHJlc3Npb24ARmllbGQARXhwcmVz
c2lvbmAxAExhbWJkYQBGdW5jYDIAU3lzdGVtLkxpbnEAUXVlcnlhYmxlAElPcmRlcmVkUXVlcnlh
YmxlYDEASVF1ZXJ5YWJsZWAxAE9yZGVyQnkATWV0aG9kQmFzZQBSdW50aW1lTWV0aG9kSGFuZGxl
AEdldE1ldGhvZEZyb21IYW5kbGUAQ29uc3RydWN0b3JJbmZvAE1ldGhvZEluZm8ATmV3RXhwcmVz
c2lvbgBJRW51bWVyYWJsZWAxAE1lbWJlckluZm8ATmV3AFNlbGVjdABQcm9wZXJ0eQBEaXN0aW5j
dABFbnVtZXJhYmxlAFRvTGlzdABzZXRfVmFsdWUAVHVwbGVgMwBJRW51bWVyYXRvcmAxAEdldEVu
dW1lcmF0b3IAZ2V0X0N1cnJlbnQAVHVwbGUAQ3JlYXRlAEFkZABTeXN0ZW0uQ29sbGVjdGlvbnMA
SUVudW1lcmF0b3IATW92ZU5leHQASURpc3Bvc2FibGUARGlzcG9zZQBFeGNlcHRpb24AZ2V0X01l
c3NhZ2UAU3RyaW5nAEZvcm1hdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0
YS5Db21tb24ARGJDb25uZWN0aW9uAGdldF9Db25uZWN0aW9uAENsb3NlAFNUXzRmZGJhZjNjZTlk
ODRhZmViMTYwYjQwYjg2N2VhNTIyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAA
cVMAVABfADQAZgBkAGIAYQBmADMAYwBlADkAZAA4ADQAYQBmAGUAYgAxADYAMABiADQAMABiADgA
NgA3AGUAYQA1ADIAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
H3sAIABGAGkAbABlAFAAcgBlAGYAaQB4ACAAPQAgAAAhLAAgAEkAbgBkAGUAeABQAHIAZQBmAGkA
eAAgAD0AIAAAEywAIABQAGEAdABoACAAPQAgAAAFIAB9AAA3JABQAGEAYwBrAGEAZwBlADoAOgBj
AG8AbgBuAGUAYwB0AGkAbwBuAF8AcwB0AHIAaQBuAGcAAANmAAADcQAAKVUAcwBlAHIAOgA6AGkA
bgBkAGUAeABfAHAAcgBlAGYAaQB4AGUAcwAAS1UAcwBlAHIAOgA6AHAAcgBlAGYAaQB4AGUAcwBf
AGEAbgBkAF8AZABlAHMAdABpAG4AYQB0AGkAbwBuAHMAXwBwAGEAdABoAHMAACFTAHkAcwB0AGUA
bQA6ADoAVABhAHMAawBOAGEAbQBlAAAvVQBzAGUAcgA6ADoAZQB4AGMAZQBwAHQAaQBvAG4AXwBt
AGUAcwBzAGEAZwBlAAA5VABhAHMAawAgADoAIABbAHsAMAB9AF0AOwAgAE0AZQBzAHMAYQBnAGUA
OgAgAFsAewAxAH0AXQAAAAAAOmz4YG0TG0yadOeYs3Ah9QAIt3pcVhk04IkIiYRdzYCAzJEGIAMB
Dg4OAyAADgQgAQEOAgYOAygADgIGCAcGFRIZARIQAyAAAQMGEgwHBhUSHQESEAcGFRIdARIMAwYS
IQMGEiUEAAASIQQAABIlBQABARIlBAgAEiEECAASJQMGEhwEAAASHAQIABIcAwYRJAQAAAAABAEA
AAAEIAEBCCkBAAEAVA4ETmFtZR1NZWRob2suTWFpbGluZ19EYXRhX0ZpbGVfRGVzdBQBAAEAVAIM
SXNQcmltYXJ5S2V5ARYBAAEAVA4IT3RoZXJLZXkGRGVzdElEKQEAAQBUDgROYW1lHU1lZGhvay5N
YWlsaW5nX0RhdGFfRmlsZV9UeXBlJQEAAgBUDgdUaGlzS2V5BkRlc3RJRFQCDElzRm9yZWlnbktl
eQEGAAESbRFxBCAAEnUGIAIBDhJ1BAcBEiEFIAEBEX0IAQACAAAAAAADAAABCSADARMAEwETAgMG
EwAEIAATAAMGEwEEIAATAQMGEwIEIAATAgQgAQIcAyAACAQoABMABCgAEwEEKAATAgYgAQERgIkI
AQAAAAAAAAAKFRIoAxMAEwETAgYgARKAkQ4CEwAGIAESgJEcAhMBAhMCBQcBEoCRBxUSgJUBEwAJ
AAAVEoCVARMAByACAhMAEwAHFRKAlQETAQcVEoCVARMCDAcBFRIoAxMAEwETAgUgAQgTAAMHAQgF
IAASgJkFIAASgJ0GIAESgKEcAyAAHAgAAhKAqRJtDggAARKArRGAsQsAAhKAtRKApRKArREQAQIV
EoC5AR4AEoClHRKAqQoKARUSgL0CEhAOHxACAhUSgMUBHgAVEoDJAR4AFRKAuQEVEoC9Ah4AHgEF
CgISEA4HFRIoAw4ODgoAAhKAzRGA0RFxFAADEoDdEoDVFRKA4QESgKUdEoDlEAoBFRKAvQISEBUS
KAMODg4fEAICFRKAyQEeARUSgMkBHgAVEoC5ARUSgL0CHgAeAQsKAhIQFRIoAw4ODgsAAhKAtRKA
pRKA2Q8KARUSgL0CFRIoAw4ODg4KCgIVEigDDg4ODhEQAQEVEoDJAR4AFRKAyQEeAAMKAQ4QEAEB
FRIZAR4AFRKA4QEeAAQgAQEcDBUSGQEVEoDtAw4ODgwVEoDhARUSKAMODg4JIAAVEoDxARMADBUS
gPEBFRIoAw4ODhQQAwMVEoDtAx4AHgEeAh4AHgEeAgUKAw4ODgUgAQETAAMgAAIGAAMODhwcBSAA
EoEJXgcUEhQIDhUSgMkBFRIoAw4ODhUSGQEOFRIZARUSgO0DDg4OFRIoAw4ODhKBAQ4SgKkdEoCp
EoCpHRKApR0SgNkdEoCpEoCpHRKAqRKAqR0SgKkVEoDxARUSKAMODg5HAQAaLk5FVEZyYW1ld29y
ayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQo
AQAjU1RfNGZkYmFmM2NlOWQ4NGFmZWIxNjBiNDBiODY3ZWE1MjIAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAxNgAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQCoQgAA
AAAAAAAAAAC+QgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsEIAAAAAAAAAAF9Db3JEbGxNYWlu
AG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
sAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAFJsFBgAAAEAUmwUGD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIA
MAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwA0AGYAZABi
AGEAZgAzAGMAZQA5AGQAOAA0AGEAZgBlAGIAMQA2ADAAYgA0ADAAYgA4ADYANwBlAGEANQAyADIA
AABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAxADYANAAuADIANwA3
ADMAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA0AGYAZABiAGEA
ZgAzAGMAZQA5AGQAOAA0AGEAZgBlAGIAMQA2ADAAYgA0ADAAYgA4ADYANwBlAGEANQAyADIALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA0AGYAZABiAGEAZgAzAGMAZQA5AGQAOAA0AGEAZgBlAGIAMQA2ADAAYgA0ADAA
YgA4ADYANwBlAGEANQAyADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8ANABmAGQAYgBhAGYAMwBjAGUAOQBkADgANABhAGYAZQBiADEANgAwAGIANAAwAGIA
OAA2ADcAZQBhADUAMgAyAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA2ADEANgA0AC4AMgA3ADcAMwAwAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA2ADEANgA0AC4AMgA3ADcAMwAwAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAANAyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Index Generation\SQL - Save exception"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5A0408A4-7E9D-4F2F-A8D6-CCF9C06FA21B}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL - Save exception"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{BD28FC6D-BE54-4853-AB58-C13FB16CEE86}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="INSERT INTO Medhok.Mailing_Data_Load_Exception&#xA;(ExecutionLogID, Description) VALUES (?, ?);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="NewParameterName"
                SQLTask:DtsVariableName="$Package::connection_string"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CAE44ED0-2853-442E-A8CD-00BF37F3B716}"
          DTS:From="Package\SEQC - Index Generation\FELC - Iterate Index Directory for clean up"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQC - Index Generation\SCR - Get prefixes and destination paths" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{2E79DEE8-19A3-41A3-AEFE-0CDC268D22E1}"
          DTS:From="Package\SEQC - Index Generation\SCR - Get prefixes and destination paths"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SEQC - Index Generation\SCR - Create new index files" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{5D7E1B12-21A2-4FB6-8360-4B0D86FFF077}"
          DTS:From="Package\SEQC - Index Generation\SCR - Create new index files"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SEQC - Index Generation\FELC - Iterate the manifest directory" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{874F0A11-355C-43FB-B0DC-8155F8A3DFEB}"
          DTS:From="Package\SEQC - Index Generation\SCR - Get prefixes and destination paths"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\SEQC - Index Generation\SQL - Save exception"
          DTS:Value="1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{E76BEE80-485B-44B5-AA0E-1E8C212DCFB3}"
          DTS:From="Package\SEQC - Index Generation\SCR - Create new index files"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\SEQC - Index Generation\SQL - Save exception"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163.2,41.6"
          Id="Package\SEQC - Index Generation\FELC - Iterate Index Directory for clean up\FSYS - Delete File"
          TopLeft="71.0730192087133,18.1333364935483" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="316,93.6"
          Size="316,136.8"
          Id="Package\SEQC - Index Generation\FELC - Iterate Index Directory for clean up"
          TopLeft="42.8444458144052,20.9777791715136" />
        <NodeLayout
          Size="132.8,41.6"
          Id="Package\SEQC - Index Generation\FELC - Iterate the manifest directory\Script Task"
          TopLeft="76.4244928821529,20.3899227934314" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="280,116.8"
          Size="280,160"
          Id="Package\SEQC - Index Generation\FELC - Iterate the manifest directory"
          TopLeft="58.0897976978178,362.924375917672" />
        <NodeLayout
          Size="276.8,41.6"
          Id="Package\SEQC - Index Generation\SCR - Create new index files"
          TopLeft="64.3142875997386,279.249304173197" />
        <NodeLayout
          Size="276.8,41.6"
          Id="Package\SEQC - Index Generation\SCR - Get prefixes and destination paths"
          TopLeft="64.3142875997386,193.78991932935" />
        <EdgeLayout
          Id="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint]"
          TopLeft="201.779366707072,157.777779171514">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.0121401578361"
              Start="0,0"
              End="0,28.5121401578361">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5121401578361" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 1]"
          TopLeft="202.714287599739,235.38991932935">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.8593848438468"
              Start="0,0"
              End="0,36.3593848438468">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.3593848438468" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 2]"
          TopLeft="200.402042648778,320.849304173197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.075071744475"
              Start="0,0"
              End="0,34.575071744475">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.575071744475" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="180.8,41.6"
          Id="Package\SEQC - Index Generation\SQL - Save exception"
          TopLeft="473.600008855547,243.596643362078" />
        <EdgeLayout
          Id="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 3]"
          TopLeft="341.114287599739,214.58991932935">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="132.485721255809,44.2067240327283"
              Start="0,0"
              End="124.985721255809,44.2067240327283">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="72.5473056144674,0" />
                  <mssgle:CubicBezierSegment
                    Point1="72.5473056144674,0"
                    Point2="76.5473056144674,0"
                    Point3="76.5473056144674,4" />
                  <mssgle:LineSegment
                    End="76.5473056144674,40.2067240327283" />
                  <mssgle:CubicBezierSegment
                    Point1="76.5473056144674,40.2067240327283"
                    Point2="76.5473056144674,44.2067240327283"
                    Point3="80.5473056144674,44.2067240327283" />
                  <mssgle:LineSegment
                    End="124.985721255809,44.2067240327283" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="61.3059579582174,-15.7490234375,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQC - Index Generation.PrecedenceConstraints[Constraint 4]"
          TopLeft="341.114287599739,300.049304173197">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="132.485721255809,-30.0526608111188"
              Start="0,0"
              End="124.985721255809,-30.0526608111188">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="72.5473056144672,0" />
                  <mssgle:CubicBezierSegment
                    Point1="72.5473056144672,0"
                    Point2="76.5473056144672,0"
                    Point3="76.5473056144672,-4" />
                  <mssgle:LineSegment
                    End="76.5473056144672,-26.0526608111188" />
                  <mssgle:CubicBezierSegment
                    Point1="76.5473056144672,-26.0526608111188"
                    Point2="76.5473056144672,-30.0526608111188"
                    Point3="80.5473056144672,-30.0526608111188" />
                  <mssgle:LineSegment
                    End="124.985721255809,-30.0526608111188" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="61.3059579582172,1,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="728,577.6"
          Size="728,620.8"
          Id="Package\SEQC - Index Generation"
          TopLeft="46.2857150739553,49.0771248712948" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>