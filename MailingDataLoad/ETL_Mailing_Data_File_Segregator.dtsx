<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/25/2016 9:46:16 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="WINDOWSDEV"
  DTS:CreatorName="WINDOWSDEV\Ernesto Rodriguez"
  DTS:DTSID="{E3AAFAA5-1C87-4142-8CAB-2B28E23A2646}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.3436.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ETL_Mailing_Data_File_Segregator"
  DTS:PackageType="5"
  DTS:VersionBuild="38"
  DTS:VersionGUID="{3E787260-08EF-4D7B-9466-98D67ED03FC0}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4B508FB2-2E81-4502-BCCA-D79D2B613DFD}"
      DTS:ObjectName="connection_string">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=MSSQLSERVER; User ID=sa; Password=sa; Initial Catalog=testdb; Connection Timeout=60;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{46A8ECEA-42E2-464F-B732-85A93C567182}"
      DTS:ObjectName="file_path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{6974777A-AFBD-40C0-90B8-D7664433EACB}"
      DTS:ObjectName="partial_pattern">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">(_\d{5,})(_\d{8})\.(CSV|csv)$</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{05EF0633-B9F4-4641-9D46-18C8F4167301}"
      DTS:ObjectName="trash_folder">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Trash</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{89A51001-1BE8-455C-9E0A-EB1F92655209}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="current_file">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0B3FA379-1917-441D-92EF-8DFAEA81C01E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_name">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2453590A-0E85-4F23-A76B-E1C5FA21576C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="file_prefixes">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9C1FFFF9-6C89-4653-823F-1658D46E575A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::file_path] + &quot;\\&quot; +  @[User::current_file]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="file_to_be_moved">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_1\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SEQC - Main processes to segregate incoming mailing data files"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{ACABDAA9-0619-4DF4-B16C-38E8814AC532}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQC - Main processes to segregate incoming mailing data files">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{4471BA4C-5146-4A08-9D81-5514EE759422}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="FELC - Iterate input folder to check each mailing data file">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{2BFE1E27-DE8F-439E-B1F3-4248F5B6A2AA}"
            DTS:ObjectName="{2BFE1E27-DE8F-439E-B1F3-4248F5B6A2AA}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[$Package::file_path]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="C:\Users\Ernesto Rodriguez\Projects\SampleData\LettersMailingData\Stage_1" />
                <FEFEProperty
                  FileSpec="*.csv" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file\FST - Move invalid file to trash"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="File System Task"
              DTS:DTSID="{7AF2F918-1BE6-47ED-A289-7DA302DE9A93}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="FST - Move invalid file to trash"
              DTS:TaskContact="File System Task;Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <FileSystemData
                  TaskOperationType="MoveFile"
                  TaskSourcePath="User::file_to_be_moved"
                  TaskIsSourceVariable="True"
                  TaskDestinationPath="$Package::trash_folder"
                  TaskIsDestinationVariable="True" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file\SCR - Determine if file is of valid type"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{9AE09E5B-A4EB-4DA8-BF56-FE15D511FA42}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="SCR - Determine if file is of valid type"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file\SCR - Determine if file is of valid type.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{EB49247C-97DD-4B84-B655-609A61F0F622}"
                  DTS:EventID="240994844"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{3E2ECDC2-9EC4-4C93-9B9D-29E090F7FEDD}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">0</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables />
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_8f0e5528a99b433fbf5610aedf4c33a6"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::file_name,User::file_prefixes,$Package::partial_pattern"
                  ReadWriteVariables="User::current_file">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8f0e5528a99b433fbf5610aedf4c33a6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8f0e5528a99b433fbf5610aedf4c33a6")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_8f0e5528a99b433fbf5610aedf4c33a6.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{BDF03CA7-A8D3-4078-BB89-352E0A38DCA1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8f0e5528a99b433fbf5610aedf4c33a6</RootNamespace>
    <AssemblyName>ST_8f0e5528a99b433fbf5610aedf4c33a6</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
using System.Text.RegularExpressions;
#endregion

namespace ST_8f0e5528a99b433fbf5610aedf4c33a6
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called to determine if the current file 
        /// has a valid prefix, if true, the the file remains in folder,
        /// if false, the file wiil be moved to another folder.
        /// </summary>
		public void Main()
		{
            int result = (int)ScriptResults.Failure;
            List<string> prefixes = (List<string>)Dts.Variables["User::file_prefixes"].Value;
            string partial_pattern = Dts.Variables["$Package::partial_pattern"].Value.ToString();
			string file_name = Dts.Variables["User::file_name"].Value.ToString();

            file_name = Path.GetFileName(file_name);                                                //Get filename from path
            Dts.Variables["User::current_file"].Value = file_name;
            string[] file_prefixes = file_name.Split(new Char[] { '_' } );                          //Tokenize file name to get prefix
            string prefix = file_prefixes[0];                                                       //Get file prefix

            if (prefixes.Exists(x => x == prefix))                                                  //Check if prefix correspond to valid file type
            {
                if (ValidFileName("^(" + prefix + ")" + partial_pattern, file_name))                //Check if valid file name format
                {
                    result = (int)ScriptResults.Success;
                }
            }
            else
            {
                result = (int)ScriptResults.Failure;
            }

            Dts.TaskResult = result;
		}

        /// <summary>
        /// This method is called to check if the file name 
        /// match with the current specified pattern.
        /// </summary>
        private bool ValidFileName(string pattern, string str)
        {
            bool result = false;
            Regex rgx = new Regex(pattern);

            if (rgx.IsMatch(str))
                result = true;

            return result;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion
        
	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_8f0e5528a99b433fbf5610aedf4c33a6</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_8f0e5528a99b433fbf5610aedf4c33a6</msb:DisplayName>
		<msb:ProjectId>{8B16BB45-7E40-4F96-A5E7-C983EDDDDBAB}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_8f0e5528a99b433fbf5610aedf4c33a6.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8f0e5528a99b433fbf5610aedf4c33a6.Properties.Settings.get_Default():ST_8f0e5528a99b433fbf5610aedf4c33a6.Properties.Sett" +
    "ings")]

namespace ST_8f0e5528a99b433fbf5610aedf4c33a6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8f0e5528a99b433fbf5610aedf4c33a6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8f0e5528a99b433fbf5610aedf4c33a6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8f0e5528a99b433fbf5610aedf4c33a6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8f0e5528a99b433fbf5610aedf4c33a6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8f0e5528a99b433fbf5610aedf4c33a6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_8f0e5528a99b433fbf5610aedf4c33a6.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANa1D1gAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAjjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADQxAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
MQAAAAAAAEgAAAACAAUAwCIAAHQOAAABAAAAAAAAAAgiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqHgIoDgAACio2AwJ7BwAABCgWAAAKKgAAABMwBQD2AAAAAgAAEXMLAAAG
EwUXCgIoFwAACm8YAAAKcnMAAHBvGQAACm8aAAAKdAEAABsLAigXAAAKbxgAAApymwAAcG8ZAAAK
bxoAAApvGwAACgwCKBcAAApvGAAACnLPAABwbxkAAApvGgAACm8bAAAKDQkoHAAACg0CKBcAAApv
GAAACnLvAABwbxkAAAoJbx0AAAoJF40hAAABEwYRBhYfX50RBm8eAAAKEwQRBREEFpp9BwAABAcR
Bf4GDAAABnMfAAAKbyAAAAosJAJyFQEAcBEFewcAAARyGwEAcAgoIQAACgkoCQAABiwGFgorAhcK
AigXAAAKBm8iAAAKKgAAEzACABYAAAADAAARFgoDcyMAAAoLBwRvJAAACiwCFwoGKh4CKCUAAAoq
AAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBt
c2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2Vu
PWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAA
AAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAHwE
AAAjfgAA6AQAAJwGAAAjU3RyaW5ncwAAAACECwAAIAEAACNVUwCkDAAAEAAAACNHVUlEAAAAtAwA
AMABAAAjQmxvYgAAAAAAAAACAAABVx2iCQkDAAAA+iUzABYAAAEAAAAjAAAABgAAAAcAAAAMAAAA
BAAAACUAAAACAAAAEAAAAAMAAAACAAAAAwAAAAQAAAACAAAAAQAAAAQAAAABAAAAAgAAAAAACgAB
AAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAHECVwIGAJwCigIGALMC
igIGANACigIGAO8CigIGAAgDigIGACEDigIGADwDigIGAFcDigIGAHADigIGAKkDiQMGAMkDiQMG
APoD5wMGABcEugAGABwEugAGAEAEigIKAGwEVgQKAIUEVgQGAJoEiQMOALwEFAEGAAUFugAOABgF
FAESAHEFUQUSAIkFUQUGAMAFpQUGANoF0AUGAPUFugAGAAAGugAKAEgGKQYAAAAAAQAAAAAAAQAB
AAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAsA
AwEQAN4EAAAFAAcACwARAH8BEwARAKwBFwARAPYBOQAGBi0CTQBWgDUCUABWgD0CUAAGAPEEkwBQ
IAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAg
AAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGLUEjwACANQgAAAAAIYAGgIbAAIA2CEA
AAAAgQAfAkcAAgD6IQAAAACGGLwBGwAEALsgAAAAAIYYvAEbAAQAwyAAAAAAhgD4BJYABAAAAAEA
RQIAAAEASwIAAAIAUwIAAAEAAwU5ALwBXgBBALwBXgBJALwBXgBRALwBXgBZALwBXgBhALwBXgBp
ALwBXgBxALwBXgB5ALwBXgCBALwBXgCJALwBYwCRALwBGwCZALwBGwAJALwBGwChAC4EaAChAEkE
bwApALwBdAC5ALwBgADJALwBGwARALwBGwDRALwBGwDZAAwFmwAZACoFoQDhAHsFpgDpAJIFqwDx
AJsFsQAJAMcFuwABAd8FvwDxAOsFxADZAPoFyQAUALwB1wAMAAwG3QDZABMG6ADhABoGYwAZAbwB
XgAZAU4GlgAZALwBGwAIABQAVAAIABgAWQApAJMAhgAuABMAUAEuABsAeQEuACMAeQEuAGMAnwEu
AAsACAEuADMAUAEuAFsAlgEuACsAeQEuADsAfwEuAEMAeQFDAGsAWQBJAJMAhgBhAJsAWQCDAKsA
WQDDAJsAWQB7APAAAQECAAEAAwADAAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAF
AAIABQAHALUA0AAEgAAAAQAAAP4Xi24AAAAAAAB/AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAA
AAAAAAAAAAABALoAAAAAAAsAAAAAAAAAAAAAAAoA9QAAAAAACwAAAAAAAAAAAAAACgAyBQAAAAAA
AAAAAQAAAFYGAAAFAAQABgAEAAAAADxNb2R1bGU+AFNUXzhmMGU1NTI4YTk5YjQzM2ZiZjU2MTBh
ZWRmNGMzM2E2LmRsbABSZXNvdXJjZXMAU1RfOGYwZTU1MjhhOTliNDMzZmJmNTYxMGFlZGY0YzMz
YTYuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUXzhmMGU1NTI4YTk5YjQzM2ZiZjU2
MTBhZWRmNGMzM2E2AFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0u
Q29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RB
UlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFu
YWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJj
ZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AVmFsaWRG
aWxlTmFtZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBwYXR0ZXJuAHN0cgBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVj
dGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVy
c2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9u
UmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVt
LkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNv
bXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBv
aW50QXR0cmlidXRlADw+Y19fRGlzcGxheUNsYXNzMQBwcmVmaXgAPE1haW4+Yl9fMAB4AFN0cmlu
ZwBvcF9FcXVhbGl0eQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBn
ZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBTeXN0ZW0uQ29sbGVjdGlv
bnMuR2VuZXJpYwBMaXN0YDEAVG9TdHJpbmcAU3lzdGVtLklPAFBhdGgAR2V0RmlsZU5hbWUAc2V0
X1ZhbHVlAENoYXIAU3BsaXQAUHJlZGljYXRlYDEARXhpc3RzAENvbmNhdABzZXRfVGFza1Jlc3Vs
dABTeXN0ZW0uVGV4dC5SZWd1bGFyRXhwcmVzc2lvbnMAUmVnZXgASXNNYXRjaABTVF84ZjBlNTUy
OGE5OWI0MzNmYmY1NjEwYWVkZjRjMzNhNi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMA
AAAAAHFTAFQAXwA4AGYAMABlADUANQAyADgAYQA5ADkAYgA0ADMAMwBmAGIAZgA1ADYAMQAwAGEA
ZQBkAGYANABjADMAMwBhADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAACdVAHMAZQByADoAOgBmAGkAbABlAF8AcAByAGUAZgBpAHgAZQBzAAAzJABQAGEAYwBrAGEA
ZwBlADoAOgBwAGEAcgB0AGkAYQBsAF8AcABhAHQAdABlAHIAbgAAH1UAcwBlAHIAOgA6AGYAaQBs
AGUAXwBuAGEAbQBlAAAlVQBzAGUAcgA6ADoAYwB1AHIAcgBlAG4AdABfAGYAaQBsAGUAAAVeACgA
AAMpAAAAAQzuVsmKAUGOsA5KHecmIAAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAAS
FQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMBSACAg4OAgYIAwYRFAQAAAAABAEA
AAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQIG
DgQgAQIOBQACAg4OBCAAEnEEIAASdQUgARJ5HAMgABwFFRJ9AQ4DIAAOBAABDg4EIAEBHAYgAR0O
HQMGFRKAiQEOBSACARwYCiABAhUSgIkBEwAHAAQODg4ODhAHBwgVEn0BDg4OHQ4SGB0DBgcCAhKA
jUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQ
Lk5FVCBGcmFtZXdvcmsgNCgBACNTVF84ZjBlNTUyOGE5OWI0MzNmYmY1NjEwYWVkZjRjMzNhNgAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBAABcMQAAAAAAAAAAAAB+MQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcDEA
AAAAAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAItu/hcAAAEAi27+Fz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA4AGYAMABlADUANQAyADgAYQA5ADkAYgA0ADMAMwBmAGIAZgA1ADYAMQAwAGEAZQBkAGYANABj
ADMAMwBhADYAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAxADQA
MgAuADIAOAAyADkAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA4
AGYAMABlADUANQAyADgAYQA5ADkAYgA0ADMAMwBmAGIAZgA1ADYAMQAwAGEAZQBkAGYANABjADMA
MwBhADYALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANgAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwA4AGYAMABlADUANQAyADgAYQA5ADkAYgA0ADMAMwBmAGIAZgA1
ADYAMQAwAGEAZQBkAGYANABjADMAMwBhADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8AOABmADAAZQA1ADUAMgA4AGEAOQA5AGIANAAzADMAZgBiAGYANQA2
ADEAMABhAGUAZABmADQAYwAzADMAYQA2AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADEANAAyAC4AMgA4ADIAOQA5AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADEANAAyAC4AMgA4ADIAOQA5AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{738051B3-3DDB-48E2-B6F6-BC5A71441485}"
              DTS:From="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file\SCR - Determine if file is of valid type"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file\FST - Move invalid file to trash"
              DTS:Value="1" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{AAC9A53B-AF8D-43D6-B5AB-291D8C0E582E}"
              DTS:ObjectName="{AAC9A53B-AF8D-43D6-B5AB-291D8C0E582E}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::file_name" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQC - Main processes to segregate incoming mailing data files\SCR - Get prefixes of all valid files"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{57E1EBD6-3310-4712-A1EA-C1EF1B3B9412}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="SCR - Get prefixes of all valid files"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_0e091cfc1b734759a5c9933388e7a599"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="$Package::connection_string"
              ReadWriteVariables="User::file_prefixes">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e091cfc1b734759a5c9933388e7a599.Properties.Settings.get_Default():ST_0e091cfc1b734759a5c9933388e7a599.Properties.Sett" +
    "ings")]

namespace ST_0e091cfc1b734759a5c9933388e7a599.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="MedhokDataContext.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq;

namespace ST_0e091cfc1b734759a5c9933388e7a599
{
    public sealed class MedhokDataContext : DataContext
    {
        public Table<MailingDataFileType> MailingFileTypes;
        public MedhokDataContext(string connection) : base(connection) { }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Linq;
#endregion

namespace ST_0e091cfc1b734759a5c9933388e7a599
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called to get a list of all prefixes allowed for 
        /// the manifest files.
        /// </summary>
		public void Main()
		{
            int result = (int)ScriptResults.Success;
            MedhokDataContext db = null;
            try
            {
                string conn_str = Dts.Variables["$Package::connection_string"].Value.ToString();
                db = new MedhokDataContext(conn_str);                                   
                var prefixes_query = from m in db.MailingFileTypes                                  // Set query to get list of all prefixes
                                     select m;

                List<String> prefixes = new List<String>();
                foreach (MailingDataFileType prefix in prefixes_query)                              // Iterate query result to store prefixes in list.
                {
                    prefixes.Add(prefix.FileTypePrefix);
                }
                Dts.Variables["User::file_prefixes"].Value = prefixes;                   
            }
            catch (Exception e)
            {
                result = (int)ScriptResults.Failure;
            }
            finally
            {
                if (db != null)
                {
                    db.Connection.Close();
                }
                Dts.TaskResult = result;
            }
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="MailingDataFileType.cs"
                Encoding="UTF8"><![CDATA[using System.Data.Linq.Mapping;

namespace ST_0e091cfc1b734759a5c9933388e7a599
{
    [Table(Name = "Medhok.Mailing_Data_File_Type")]
    public sealed class MailingDataFileType
    {
        [Column (IsPrimaryKey = true)]
        public int ID;

        [Column]
        public string FileTypePrefix;
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_0e091cfc1b734759a5c9933388e7a599.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2EFAAAF1-3661-476A-935B-528020C8DD66}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0e091cfc1b734759a5c9933388e7a599</RootNamespace>
    <AssemblyName>ST_0e091cfc1b734759a5c9933388e7a599</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.Linq" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="MailingDataFileType.cs" />
    <Compile Include="MedhokDataContext.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_0e091cfc1b734759a5c9933388e7a599</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_0e091cfc1b734759a5c9933388e7a599</msb:DisplayName>
		<msb:ProjectId>{DFD586B7-747F-4D75-A491-F4E2621FF9A5}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0e091cfc1b734759a5c9933388e7a599.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="MedhokDataContext.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="MailingDataFileType.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0e091cfc1b734759a5c9933388e7a599")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0e091cfc1b734759a5c9933388e7a599")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e091cfc1b734759a5c9933388e7a599.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e091cfc1b734759a5c9933388e7a599.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0e091cfc1b734759a5c9933388e7a599.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0e091cfc1b734759a5c9933388e7a599.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0e091cfc1b734759a5c9933388e7a599.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_0e091cfc1b734759a5c9933388e7a599.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHKQIFgAAAAAAAAAAOAAAiELAQsAABQAAAAIAAAAAAAArjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGAzAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
MwAAAAAAAEgAAAACAAUAqCIAALgQAAABAAAAAAAAAPAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA8AAAoqIgIDKBAAAAoqHgIoDwAACioAAAATMAIALQAA
AAEAABF+BAAABC0gcgEAAHDQBAAAAigSAAAKbxMAAApzFAAACgoGgAQAAAR+BAAABCoafgUAAAQq
HgKABQAABCoafgYAAAQqLnMIAAAGgAYAAAQqHgIoFwAACioAGzAFAOQAAAACAAARFgoUCwIoGQAA
Cm8aAAAKcnMAAHBvGwAACm8cAAAKbx0AAAoMCHMCAAAGCwd7AwAABNACAAACKBIAAApyqwAAcCge
AAAKEwYRBheNIwAAARMHEQcWEQaiEQcoAQAAKygCAAArDXMhAAAKEwQJbyIAAAoTCCsXEQhvIwAA
ChMFEQQRBXsCAAAEbyQAAAoRCG8lAAAKLeDeDBEILAcRCG8mAAAK3AIoGQAACm8aAAAKcq8AAHBv
GwAAChEEbycAAAreBSYXCt4A3hsHLAsHbygAAApvKQAACgIoGQAACgZvKgAACtwqASgAAAIAcwAk
lwAMAAAAAAAABAC9wQAFLgAAAQIABADEyAAbAAAAAB4CKCsAAAoqtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIB
AAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAADQFAAAjfgAAoAUAANwHAAAjU3RyaW5ncwAA
AAB8DQAA2AAAACNVUwBUDgAAEAAAACNHVUlEAAAAZA4AAFQCAAAjQmxvYgAAAAAAAAACAAABVx2i
CQkLAAAA+iUzABYAAAEAAAAuAAAABwAAAAkAAAALAAAAAgAAACsAAAACAAAAEgAAAAIAAAACAAAA
AwAAAAQAAAADAAAAAQAAAAcAAAABAAAAAQAAAAIAAAAAAAoAAQAAAAAABgDnAOAACgD/AO4ADgAg
AQsBEgCAAVcBBgCcAeAACgC5Ae4ABgDjAdIBBgAUAv8BBgDQArYCBgD7AukCBgASA+kCBgAvA+kC
BgBOA+kCBgBnA+kCBgCAA+kCBgCbA+kCBgC2A+kCBgDPA+kCBgAIBOgDBgAoBOgDCgBfBEYECgBu
BEYEBgCRBH4EBgCuBOAABgCzBOAABgDXBOkCDgADBe0EDgAcBe0EBgAxBegDEgBTBVcBEgB1BVcB
FgDOBa4FFgDmBa4FGgAvBhcGGgA6BhcGGgBYBhcGBgBsBuAAGgB/BnMGGgCJBnMGBgC4Bp0GBgC/
Bp0GBgDNBp0GBgAMB/kGBgAhB+AAHgBeB0sHBgCPB+AAAAAAAAEAAAAAAAEAAQABARAAMgBGAAUA
AQABAAEBEABqAEYACQADAAIAAAAQAHwAhgAFAAQAAwAAARAAtQCGAA0ABgAHAAEAEAC+AEYAEQAH
AAoAAwEAAMkAAAAVAAcADAAGAKEBEwAGAKQBFgAGAMEBHQARAPMBKgARACACLgARAGQCTAAGBo0C
EwBWgJUCWgBWgJ0CWgBQIAAAAACGGLMBGQABAFggAAAAAIYYswElAAEAYSAAAAAAgxizARkAAgBs
IAAAAACTCDACMgACAKUgAAAAAJMIRAI3AAIArCAAAAAAkwhQAjwAAgC0IAAAAACWCHQCUAADAMcg
AAAAAIYYswEZAAMAuyAAAAAAkRhMBdMAAwDQIAAAAACGAIgCGQADAOghAAAAAIYYswEZAAMAAAAB
AKUCAAABALACSQCzASUAUQCzASUAWQCzASUAYQCzASUAaQCzASUAcQCzASUAeQCzASUAgQCzASUA
iQCzASUAkQCzASUAmQCzAWgAoQCzARkAqQCzARkAsQCzARkACQCzARkAEQCzASUAuQCzARkAwQDF
BKwAwQDgBLMAOQCzAbgA2QCzAcQA6QCzARkAGQCzARkA8QCzARkAIQCHBdcA+QDYBdwAAQHvBeIA
CQH4BekACQACBu0AEQFOBvEAEQFlBvoAMQGWBhgBDACzARkAFADbBk4BHADpBmABDAD1BmUBWQEY
B2sBYQEtBxkACQE1B28BEQBrB3QBaQF6BxkA+QCAB2gAIQCzARkACAAgAF4ACAAkAGMAIQBzAJcA
KQCrAMoALgALAJ4BLgAbAA8CLgBjADUCLgAjAA8CLgArAA8CLgBbACwCLgAzAOYBLgBDAA8CLgAT
AOYBLgA7ABUCQQBzAGMAQwBrAG0ASQCrAMoAgwCLAGMAwQCzAGMAwwDDAGMAvwB6AQQAAQAFAAMA
AADjAUIAAABcAkcAAACAAlUAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAPwFGAVgBBIAAAAEAAAAL
GBlKAAAAAAAARgAAAAQAAAAAAAAAAAAAAAEA1wAAAAAABAAAAAAAAAAAAAAAAQDuAAAAAAAEAAAA
AAAAAAAAAAABAOAAAAAAAAsAAAAAAAAAAAAAAAoAOAEAAAAACwAAAAAAAAAAAAAACgCPBQAAAAAE
AAAAAAAAAAAAAAABAAsGAAAAAAQAAAAAAAAAAAAAAAEAPwcAAAAAAAAAAAEAAACZBwAABwAGAD8A
DAFBADgBAAAAAAA8TW9kdWxlPgBTVF8wZTA5MWNmYzFiNzM0NzU5YTVjOTkzMzM4OGU3YTU5OS5k
bGwATWFpbGluZ0RhdGFGaWxlVHlwZQBTVF8wZTA5MWNmYzFiNzM0NzU5YTVjOTkzMzM4OGU3YTU5
OQBNZWRob2tEYXRhQ29udGV4dABSZXNvdXJjZXMAU1RfMGUwOTFjZmMxYjczNDc1OWE1Yzk5MzMz
ODhlN2E1OTkuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNjcmlwdFJlc3VsdHMAbXNj
b3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uRGF0YS5MaW5xAERhdGFDb250ZXh0AFN5c3RlbS5D
b25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
U2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFS
VFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAElEAEZpbGVUeXBlUHJlZml4AC5jdG9yAFRhYmxl
YDEATWFpbGluZ0ZpbGVUeXBlcwBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNv
dXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUA
Z2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1
bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1
cmUAY29ubmVjdGlvbgB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
dWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5D
b21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNv
bXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRhdGEuTGlucS5NYXBwaW5nAFRhYmxlQXR0cmli
dXRlAENvbHVtbkF0dHJpYnV0ZQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwA
Z2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBn
ZXRfVmFsdWUAVG9TdHJpbmcAU3lzdGVtLkNvcmUAU3lzdGVtLkxpbnEuRXhwcmVzc2lvbnMARXhw
cmVzc2lvbgBQYXJhbWV0ZXJFeHByZXNzaW9uAFBhcmFtZXRlcgBFeHByZXNzaW9uYDEATGFtYmRh
AEZ1bmNgMgBTeXN0ZW0uTGlucQBRdWVyeWFibGUASVF1ZXJ5YWJsZWAxAFNlbGVjdABTeXN0ZW0u
Q29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0YDEASUVudW1lcmFibGVgMQBJRW51bWVyYXRvcmAxAEdl
dEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQAQWRkAFN5c3RlbS5Db2xsZWN0aW9ucwBJRW51bWVyYXRv
cgBNb3ZlTmV4dABJRGlzcG9zYWJsZQBEaXNwb3NlAHNldF9WYWx1ZQBTeXN0ZW0uRGF0YQBTeXN0
ZW0uRGF0YS5Db21tb24ARGJDb25uZWN0aW9uAGdldF9Db25uZWN0aW9uAENsb3NlAHNldF9UYXNr
UmVzdWx0AEV4Y2VwdGlvbgBTVF8wZTA5MWNmYzFiNzM0NzU5YTVjOTkzMzM4OGU3YTU5OS5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAHFTAFQAXwAwAGUAMAA5ADEAYwBmAGMAMQBiADcA
MwA0ADcANQA5AGEANQBjADkAOQAzADMAMwA4ADgAZQA3AGEANQA5ADkALgBQAHIAbwBwAGUAcgB0
AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAADckAFAAYQBjAGsAYQBnAGUAOgA6AGMAbwBuAG4A
ZQBjAHQAaQBvAG4AXwBzAHQAcgBpAG4AZwAAA20AACdVAHMAZQByADoAOgBmAGkAbABlAF8AcABy
AGUAZgBpAHgAZQBzAAAA8kCRbC7qhEq1DI72eguGIwAIt3pcVhk04IkIiYRdzYCAzJECBggCBg4D
IAABBwYVEhkBEggEIAEBDgMGEh0DBhIhBAAAEh0EAAASIQUAAQESIQQIABIdBAgAEiEDBhIUBAAA
EhQECAASFAMGERwEAAAAAAQBAAAABCABAQgpAQABAFQOBE5hbWUdTWVkaG9rLk1haWxpbmdfRGF0
YV9GaWxlX1R5cGUUAQABAFQCDElzUHJpbWFyeUtleQEGAAESYRFlBCAAEmkGIAIBDhJpBAcBEh0F
IAEBEXEIAQACAAAAAAADAAABBCAAEn0FIAASgIEGIAESgIUcAyAAHAMgAA4IAAISgI0SYQ4REAEC
FRKAkQEeABKAiR0SgI0LCgEVEoCVAhIIEggfEAICFRKAnQEeARUSgJ0BHgAVEoCRARUSgJUCHgAe
AQYKAhIIEggGFRKAoQEOBxUSgKUBEggJIAAVEoCpARMABxUSgKkBEggEIAATAAUgAQETAAMgAAIE
IAEBHAUgABKAtSMHCQgSDA4VEoCdARIIFRKAoQEOEggSgI0dEoCNFRKAqQESCEcBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdv
cmsgNCgBACNTVF8wZTA5MWNmYzFiNzM0NzU5YTVjOTkzMzM4OGU3YTU5OQAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDE2AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
iDMAAAAAAAAAAAAAnjMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAzAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAGUoLGAAAAQAZSgsYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAA
MAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADAAZQAwADkAMQBjAGYAYwAxAGIANwAzADQANwA1ADkAYQA1AGMAOQA5ADMAMwAzADgAOABlADcA
YQA1ADkAOQAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADEANQA1
AC4AMQA4ADkANgA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADAA
ZQAwADkAMQBjAGYAYwAxAGIANwAzADQANwA1ADkAYQA1AGMAOQA5ADMAMwAzADgAOABlADcAYQA1
ADkAOQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAVABfADAAZQAwADkAMQBjAGYAYwAxAGIANwAzADQANwA1ADkAYQA1AGMA
OQA5ADMAMwAzADgAOABlADcAYQA1ADkAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAFQAXwAwAGUAMAA5ADEAYwBmAGMAMQBiADcAMwA0ADcANQA5AGEANQBjADkA
OQAzADMAMwA4ADgAZQA3AGEANQA5ADkAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAMQA1ADUALgAxADgAOQA2ADkAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAMQA1ADUALgAxADgAOQA2ADkAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAsDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQC - Main processes to segregate incoming mailing data files.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{463D7FEE-CE8A-438A-82E2-8365EB76C90C}"
          DTS:From="Package\SEQC - Main processes to segregate incoming mailing data files\SCR - Get prefixes of all valid files"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="257.6,41.6"
          Id="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file\FST - Move invalid file to trash"
          TopLeft="80.8000020435878,101.541181168012" />
        <NodeLayout
          Size="257.6,41.6"
          Id="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file\SCR - Determine if file is of valid type"
          TopLeft="80.8000020435878,19.8352977533243" />
        <EdgeLayout
          Id="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file.PrecedenceConstraints[Constraint]"
          TopLeft="209.600002043588,61.4352977533242">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.1058834146874"
              Start="0,0"
              End="0,32.6058834146874">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.6058834146874" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.24134765625,11.4284299885937,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="409.6,200.8"
          Size="409.6,244"
          Id="Package\SEQC - Main processes to segregate incoming mailing data files\FELC - Iterate input folder to check each mailing data file"
          TopLeft="26.5142871739914,90.9176494783184" />
        <NodeLayout
          Size="244.8,41.6"
          Id="Package\SEQC - Main processes to segregate incoming mailing data files\SCR - Get prefixes of all valid files"
          TopLeft="101.485716231988,22.4235308145568" />
        <EdgeLayout
          Id="Package\SEQC - Main processes to segregate incoming mailing data files.PrecedenceConstraints[Constraint]"
          TopLeft="227.60000170299,64.0235308145568">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.8941186637616"
              Start="0,0"
              End="0,19.3941186637616">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.3941186637616" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="465.6,357.6"
          Size="465.6,400.8"
          Id="Package\SEQC - Main processes to segregate incoming mailing data files"
          TopLeft="12.5714287855186,84.8000005834243" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>